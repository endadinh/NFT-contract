{
	"id": "5dceea047a275b36a94f72f2af03a5fe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SQFITEM/SQFI_Factory.sol": {
				"content": "//V1\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"./Pausable.sol\";\nimport \"./AccessControl.sol\";\nimport \"./SafeMath.sol\";\nimport \"./IERC20.sol\";\nimport \"./SafeERC20.sol\";\nimport \"./Math.sol\";\nimport \"./ISQFItem.sol\";\n// import \"./IParaArt.sol\";\n// import \"./IProxy.sol\";\n\ncontract ParagonFactory is Pausable, AccessControl {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    ISQFItem public SQFi;\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    address public fee1;\n    uint256 public amount1 = 100e18;\n\n    event CraftSQFI(\n        address owner,\n        uint256 tokenId,\n        address fee1,\n        uint256 amount1\n    );\n    event UncraftSQFI(\n        uint256 tokenId\n    );\n    event FeeChange(address currency, uint256 amount, bool enable);\n\n    constructor(\n        address _sqfi,\n        address _fee1\n    ) {\n        SQFi = ISQFItem(_sqfi);\n        fee1 = _fee1;\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(PAUSER_ROLE, msg.sender);\n    }\n\n    function bytes32ToAmount16(bytes32 data)\n        public\n        pure\n        returns (uint256[16] memory amount)\n    {\n        for (uint8 i = 0; i < 32; i++) {\n            amount[i / 2] =\n                amount[i / 2] +\n                uint8(data[i]) *\n                256**(i % 2 == 0 ? 1 : 0);\n        }\n    }\n    function editSupportedFee(\n        address _fee1,\n        uint256 _amount1\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        fee1 = _fee1;\n        amount1 = _amount1;\n    }\n\n    function createSQFI(\n        string memory tokenURI_\n    ) public whenNotPaused returns (uint256) {\n        if (amount1 > 0 && fee1 != address(0x0)) {\n            IERC20(fee1).transferFrom(msg.sender, address(this), amount1);\n        }\n        uint256 tokenId = SQFi.safeMint(\n            msg.sender,\n            tokenURI_\n        );\n        emit CraftSQFI(\n            msg.sender,\n            tokenId,\n            fee1,\n            amount1\n        );\n        return tokenId;\n    }\n\n    // The following functions are overrides required by Solidity.\n    function uncraft(\n        uint256 tokenId\n    ) public virtual {\n        SQFi.burn(tokenId);\n        emit UncraftSQFI(tokenId);\n    }\n\n    function withdraw(address token, uint256 amount)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        if (token == address(0x0)) {\n            payable(msg.sender).transfer(amount);\n        } else {\n            IERC20(token).transfer(msg.sender, amount);\n        }\n    }\n}"
			},
			"contracts/SQFITEM/ISQFItem.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface ISQFItem {\n    function safeMint(\n        address to,\n        string memory tokenURI_\n    ) external returns (uint256);\n\n    function burn(uint256 tokenId) external;\n\n    // function paragonInfo(uint256 tokenId)\n    //     external\n    //     returns (\n    //         address owner,\n    //         bytes32 originalArt,\n    //         bytes32 rawHashed,\n    //         bytes32 runesList,\n    //         uint8 status\n    //     );\n    function itemInfo(uint256 tokenId) \n    external\n    returns(\n            address owner,\n            uint8 status,\n            string calldata tokenURI\n    );\n}"
			},
			"contracts/SQFITEM/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}"
			},
			"contracts/SQFITEM/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"contracts/SQFITEM/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/SQFITEM/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"contracts/SQFITEM/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"./Context.sol\";\nimport \"./Strings.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}"
			},
			"contracts/SQFITEM/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}"
			},
			"contracts/SQFITEM/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/SQFITEM/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"contracts/SQFITEM/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}"
			},
			"contracts/SQFITEM/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}"
			},
			"contracts/SQFITEM/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}"
			},
			"contracts/SQFITEM/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SQFITEM/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/AccessControl.sol\":{\"keccak256\":\"0x850cee2bcf1bbcd0b0a1a3ef8d9ce0ed789b807d8a4c0e2dd5b2b987bef691eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1fb40d0c4deb123b7322f8dbc1635572a628fee2f383a71cf8c0d61b6c669c4\",\"dweb:/ipfs/QmUJC8kZsq69SDDiTp5PoMTEgVzW4pjwHgXW6pbdScMAA9\"]},\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]},\"contracts/SQFITEM/ERC165.sol\":{\"keccak256\":\"0x0969c3b761eb3af95a44d2c5b89822572d87441f2ca64d9fa80d7cbab667e42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fac9609abaa5cab3d96f7ebdae42570f8be9dfd5b8578289ae1aceeaa503b6\",\"dweb:/ipfs/QmX9vGsJP3fgD1W6cVTsp2HFCaD3Gek6ZELT5167eJ2j1T\"]},\"contracts/SQFITEM/IAccessControl.sol\":{\"keccak256\":\"0x287306f447febc349d34d6b1ef445a285370ec0ddac2ede071e447f00b642ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffffd92659e8a50deda3cebb149d697cdc4e9f0b5abfc55d0c2584aeab0cce36\",\"dweb:/ipfs/QmRaiwwYKHxUf4Uy4fWo6qzAkBF7NaeydMrKumP3fXCDRC\"]},\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]},\"contracts/SQFITEM/Strings.sol\":{\"keccak256\":\"0x680df08ddcc0584a8172db776bffd1753c893c13bcd18b928e22027ae441b000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637df747e24b006779e7c945cb0f979c60bbd861bae42254b9814762c0dfba4f\",\"dweb:/ipfs/QmPChjSFzHTESQsNycgZ7mPG8Xd31hcZKaTN2VLbiAngC9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/SQFITEM/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/SQFITEM/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/SQFITEM/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/Address.sol\":126:7855  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/Address.sol\":126:7855  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xE8 0xEA 0xA8 CALLDATASIZE 0x4C PUSH5 0x3EB3D948A7 MUL 0xD 0x4C SAR PUSH16 0x48E218749642F21D4A3DDCAB2908B264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "126:7729:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xE8 0xEA 0xA8 CALLDATASIZE 0x4C PUSH5 0x3EB3D948A7 MUL 0xD 0x4C SAR PUSH16 0x48E218749642F21D4A3DDCAB2908B264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "126:7729:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033",
									".code": [
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Address.sol\":{\"keccak256\":\"0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775\",\"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/ERC165.sol\":{\"keccak256\":\"0x0969c3b761eb3af95a44d2c5b89822572d87441f2ca64d9fa80d7cbab667e42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fac9609abaa5cab3d96f7ebdae42570f8be9dfd5b8578289ae1aceeaa503b6\",\"dweb:/ipfs/QmX9vGsJP3fgD1W6cVTsp2HFCaD3Gek6ZELT5167eJ2j1T\"]},\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/IAccessControl.sol\":{\"keccak256\":\"0x287306f447febc349d34d6b1ef445a285370ec0ddac2ede071e447f00b642ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffffd92659e8a50deda3cebb149d697cdc4e9f0b5abfc55d0c2584aeab0cce36\",\"dweb:/ipfs/QmRaiwwYKHxUf4Uy4fWo6qzAkBF7NaeydMrKumP3fXCDRC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/IERC20.sol\":{\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5\",\"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/ISQFItem.sol": {
				"ISQFItem": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "itemInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI_",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"itemInfo(uint256)": "fd2e997e",
							"safeMint(address,string)": "d204c45e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"itemInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/ISQFItem.sol\":\"ISQFItem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/ISQFItem.sol\":{\"keccak256\":\"0x31d36c8072505efbe076b179b7b96a53674c416fbc47f37983428761c657bf59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cc8dc106c41e138684151c204872365446582d080fa7d371b0d47b7d02f740c\",\"dweb:/ipfs/QmU6G8fFxmnCkDWvoGop8hcq7mT2CkCBxu1Mai72q9yztS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/Math.sol\":132:1156  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/Math.sol\":132:1156  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E BASEFEE PUSH25 0xBCE8768AAC890EDC16C345815DC57B5626DC0F0725624246C7 PUSH26 0x48378864736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "132:1024:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E BASEFEE PUSH25 0xBCE8768AAC890EDC16C345815DC57B5626DC0F0725624246C7 PUSH26 0x48378864736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "132:1024:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033",
									".code": [
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Math.sol\":{\"keccak256\":\"0xef7b3fc139eede8f159d204c982d86775350be2e81b5fecf97731d531223256e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c0ae51ae001dd3028a510d751a8bd473d9c2f99359158817ac4860d3e20b60\",\"dweb:/ipfs/QmYSSmmzH2SHDtVMA5xGHros8cmnVpq3dL9xawkQTGdWm4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]},\"contracts/SQFITEM/Pausable.sol\":{\"keccak256\":\"0x98503616f3138d6de41a6577dca9f9f38c2a710131f8aaf13f8eceb79097ac27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c69b0682f1fa3fe9485bfaf7de1b1d57d1a9efebab659df8fb56153c42aa1a9\",\"dweb:/ipfs/Qme4MTtDxVE3dm47GeWF65sCycxVF7CVr55aq75cCzq8Be\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "contracts/SQFITEM/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/SQFI_Factory.sol": {
				"ParagonFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sqfi",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fee1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fee1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "CraftSQFI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enable",
									"type": "bool"
								}
							],
							"name": "FeeChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "UncraftSQFI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SQFi",
							"outputs": [
								{
									"internalType": "contract ISQFItem",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amount1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "bytes32ToAmount16",
							"outputs": [
								{
									"internalType": "uint256[16]",
									"name": "amount",
									"type": "uint256[16]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI_",
									"type": "string"
								}
							],
							"name": "createSQFI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_fee1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "editSupportedFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uncraft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:2516  contract ParagonFactory is Pausable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":557:563  100e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":532:563  uint256 public amount1 = 100e18 */\n  0x04\n  sstore\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":815:1037  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SQFITEM/Pausable.sol\":927:932  false */\n  0x00\n    /* \"contracts/SQFITEM/Pausable.sol\":917:924  _paused */\n  dup1\n  0x00\n    /* \"contracts/SQFITEM/Pausable.sol\":917:932  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":905:910  _sqfi */\n  dup2\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":889:893  SQFi */\n  0x02\n  0x00\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":889:911  SQFi = ISQFItem(_sqfi) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":928:933  _fee1 */\n  dup1\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":921:925  fee1 */\n  0x03\n  0x00\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":921:933  fee1 = _fee1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":943:985  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n  0x00\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":954:972  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":974:984  msg.sender */\n  caller\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":943:953  _setupRole */\n  shl(0x20, tag_9)\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":943:985  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":995:1030  _setupRole(PAUSER_ROLE, msg.sender) */\n  tag_10\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":477:501  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1019:1029  msg.sender */\n  caller\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":995:1005  _setupRole */\n  shl(0x20, tag_9)\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":995:1030  _setupRole(PAUSER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":815:1037  constructor(... */\n  pop\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:2516  contract ParagonFactory is Pausable, AccessControl {... */\n  jump(tag_11)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6049:6159  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6127:6152  _grantRole(role, account) */\n  tag_13\n    /* \"contracts/SQFITEM/AccessControl.sol\":6138:6142  role */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6144:6151  account */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6127:6137  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6127:6152  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6049:6159  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\ntag_14:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n  tag_16\n    /* \"contracts/SQFITEM/AccessControl.sol\":6619:6623  role */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6625:6632  account */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6611:6618  hasRole */\n  shl(0x20, tag_17)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"contracts/SQFITEM/AccessControl.sol\":6681:6685  true */\n  0x01\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6655  _roles */\n  dup1\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":6656:6660  role */\n  dup5\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6669  _roles[role].members */\n  0x00\n  add\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":6670:6677  account */\n  dup4\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6685  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n  tag_19\n    /* \"contracts/SQFITEM/AccessControl.sol\":6731:6741  _msgSender */\n  shl(0x20, tag_20)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SQFITEM/AccessControl.sol\":6722:6729  account */\n  dup2\n    /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SQFITEM/AccessControl.sol\":6716:6720  role */\n  dup4\n    /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\ntag_17:\n    /* \"contracts/SQFITEM/AccessControl.sol\":2877:2881  bool */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2906  _roles */\n  0x01\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":2907:2911  role */\n  dup5\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2920  _roles[role].members */\n  0x00\n  add\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":2921:2928  account */\n  dup4\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/SQFITEM/AccessControl.sol\":2893:2929  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"contracts/SQFITEM/Context.sol\":640:647  address */\n  0x00\n    /* \"contracts/SQFITEM/Context.sol\":666:676  msg.sender */\n  caller\n    /* \"contracts/SQFITEM/Context.sol\":659:676  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_27:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_36\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_26\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_28:\n    /* \"#utility.yul\":641:665   */\n  tag_38\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_27\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_39:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_29:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_41\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_28\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_44\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":949:1068   */\ntag_43:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_45\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_46\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_29\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:2516  contract ParagonFactory is Pausable, AccessControl {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:2516  contract ParagonFactory is Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd23faf3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf400fde4\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x945099bc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc6098256\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x36568abe\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x52c6159f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x841acc5d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a1ac657\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SQFITEM/AccessControl.sol\":2510:2712  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2093:2226  function uncraft(... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/SQFITEM/AccessControl.sol\":3882:4003  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":4253:4398  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/SQFITEM/AccessControl.sol\":5270:5484  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":413:433  ISQFItem public SQFi */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/Pausable.sol\":1034:1118  function paused() public view virtual returns (bool) {... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1539:2020  function createSQFI(... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1359:1533  function editSupportedFee(... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/SQFITEM/AccessControl.sol\":1917:1966  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":507:526  address public fee1 */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":4632:4779  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1043:1354  function bytes32ToAmount16(bytes32 data)... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":439:501  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2232:2514  function withdraw(address token, uint256 amount)... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":532:563  uint256 public amount1 = 100e18 */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":2510:2712  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2595:2599  bool */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2633:2665  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2665  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2629  interfaceId */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2665  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2705  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_92\n      jumpi\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":2669:2705  super.supportsInterface(interfaceId) */\n      tag_93\n        /* \"contracts/SQFITEM/AccessControl.sol\":2693:2704  interfaceId */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":2669:2692  super.supportsInterface */\n      tag_94\n        /* \"contracts/SQFITEM/AccessControl.sol\":2669:2705  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2705  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_92:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2611:2705  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":2510:2712  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2093:2226  function uncraft(... */\n    tag_32:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2166:2170  SQFi */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2166:2175  SQFi.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2176:2183  tokenId */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2166:2184  SQFi.burn(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_96:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2199:2219  UncraftSQFI(tokenId) */\n      0x950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2211:2218  tokenId */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2199:2219  UncraftSQFI(tokenId) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2093:2226  function uncraft(... */\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":3882:4003  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_36:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3948:3955  bytes32 */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3980  _roles */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3986  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":3981:3985  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3986  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3996  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/SQFITEM/AccessControl.sol\":3967:3996  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":3882:4003  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":4253:4398  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_42:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4336:4354  getRoleAdmin(role) */\n      tag_102\n        /* \"contracts/SQFITEM/AccessControl.sol\":4349:4353  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":4336:4348  getRoleAdmin */\n      tag_36\n        /* \"contracts/SQFITEM/AccessControl.sol\":4336:4354  getRoleAdmin(role) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_104\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_105\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_107\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4366:4391  _grantRole(role, account) */\n      tag_109\n        /* \"contracts/SQFITEM/AccessControl.sol\":4377:4381  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4383:4390  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4366:4376  _grantRole */\n      tag_110\n        /* \"contracts/SQFITEM/AccessControl.sol\":4366:4391  _grantRole(role, account) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4253:4398  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":5270:5484  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_45:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5376:5388  _msgSender() */\n      tag_112\n        /* \"contracts/SQFITEM/AccessControl.sol\":5376:5386  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":5376:5388  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5365:5388  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":5365:5372  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":5365:5388  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SQFITEM/AccessControl.sol\":5357:5440  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5451:5477  _revokeRole(role, account) */\n      tag_116\n        /* \"contracts/SQFITEM/AccessControl.sol\":5463:5467  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":5469:5476  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":5451:5462  _revokeRole */\n      tag_117\n        /* \"contracts/SQFITEM/AccessControl.sol\":5451:5477  _revokeRole(role, account) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5270:5484  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":413:433  ISQFItem public SQFi */\n    tag_47:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/Pausable.sol\":1034:1118  function paused() public view virtual returns (bool) {... */\n    tag_51:\n        /* \"contracts/SQFITEM/Pausable.sol\":1081:1085  bool */\n      0x00\n        /* \"contracts/SQFITEM/Pausable.sol\":1104:1111  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SQFITEM/Pausable.sol\":1097:1111  return _paused */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Pausable.sol\":1034:1118  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1539:2020  function createSQFI(... */\n    tag_56:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1628:1635  uint256 */\n      0x00\n        /* \"contracts/SQFITEM/Pausable.sol\":1348:1356  paused() */\n      tag_120\n        /* \"contracts/SQFITEM/Pausable.sol\":1348:1354  paused */\n      tag_51\n        /* \"contracts/SQFITEM/Pausable.sol\":1348:1356  paused() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/SQFITEM/Pausable.sol\":1347:1356  !paused() */\n      iszero\n        /* \"contracts/SQFITEM/Pausable.sol\":1339:1377  require(!paused(), \"Pausable: paused\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1661:1662  0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1651:1658  amount1 */\n      sload(0x04)\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1651:1662  amount1 > 0 */\n      gt\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1651:1686  amount1 > 0 && fee1 != address(0x0) */\n      dup1\n      iszero\n      tag_125\n      jumpi\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1682:1685  0x0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1666:1686  fee1 != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1666:1670  fee1 */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1666:1686  fee1 != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1651:1686  amount1 > 0 && fee1 != address(0x0) */\n    tag_125:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1647:1774  if (amount1 > 0 && fee1 != address(0x0)) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1709:1713  fee1 */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1702:1727  IERC20(fee1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1728:1738  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1748:1752  this */\n      address\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1755:1762  amount1 */\n      sload(0x04)\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1702:1763  IERC20(fee1).transferFrom(msg.sender, address(this), amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1647:1774  if (amount1 > 0 && fee1 != address(0x0)) {... */\n    tag_126:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1783:1798  uint256 tokenId */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1801:1805  SQFi */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1801:1814  SQFi.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd204c45e\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1828:1838  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1852:1861  tokenURI_ */\n      dup6\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1801:1871  SQFi.safeMint(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1783:1871  uint256 tokenId = SQFi.safeMint(... */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1886:1989  CraftSQFI(... */\n      0x9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1909:1919  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1933:1940  tokenId */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1954:1958  fee1 */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1972:1979  amount1 */\n      sload(0x04)\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1886:1989  CraftSQFI(... */\n      mload(0x40)\n      tag_139\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2006:2013  tokenId */\n      dup1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1999:2013  return tokenId */\n      swap2\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1539:2020  function createSQFI(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_61:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2877:2881  bool */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2906  _roles */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2907:2911  role */\n      dup5\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2920  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2921:2928  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":2893:2929  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1359:1533  function editSupportedFee(... */\n    tag_66:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1456:1474  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_143\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_144\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_107\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1493:1498  _fee1 */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1486:1490  fee1 */\n      0x03\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1486:1498  fee1 = _fee1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1518:1526  _amount1 */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1508:1515  amount1 */\n      0x04\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1508:1526  amount1 = _amount1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1359:1533  function editSupportedFee(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":1917:1966  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_68:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":1917:1966  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":507:526  address public fee1 */\n    tag_71:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":4632:4779  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_76:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4716:4734  getRoleAdmin(role) */\n      tag_146\n        /* \"contracts/SQFITEM/AccessControl.sol\":4729:4733  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":4716:4728  getRoleAdmin */\n      tag_36\n        /* \"contracts/SQFITEM/AccessControl.sol\":4716:4734  getRoleAdmin(role) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_148\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_149\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_107\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4746:4772  _revokeRole(role, account) */\n      tag_151\n        /* \"contracts/SQFITEM/AccessControl.sol\":4758:4762  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4764:4771  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4746:4757  _revokeRole */\n      tag_117\n        /* \"contracts/SQFITEM/AccessControl.sol\":4746:4772  _revokeRole(role, account) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4632:4779  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1043:1354  function bytes32ToAmount16(bytes32 data)... */\n    tag_79:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1129:1154  uint256[16] memory amount */\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1175:1182  uint8 i */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1170:1348  for (uint8 i = 0; i < 32; i++) {... */\n    tag_155:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1192:1194  32 */\n      0x20\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1188:1189  i */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1188:1194  i < 32 */\n      0xff\n      and\n      lt\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1170:1348  for (uint8 i = 0; i < 32; i++) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1327:1328  0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1322:1323  2 */\n      0x02\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1318:1319  i */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1318:1323  i % 2 */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1318:1328  i % 2 == 0 */\n      0xff\n      and\n      eq\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1318:1336  i % 2 == 0 ? 1 : 0 */\n      tag_160\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1335:1336  0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1318:1336  i % 2 == 0 ? 1 : 0 */\n      jump(tag_161)\n    tag_160:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1331:1332  1 */\n      0x01\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1318:1336  i % 2 == 0 ? 1 : 0 */\n    tag_161:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1312:1315  256 */\n      0x0100\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1312:1337  256**(i % 2 == 0 ? 1 : 0) */\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1285:1289  data */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1290:1291  i */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1285:1292  data[i] */\n      0xff\n      and\n      0x20\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n    tag_164:\n      byte\n      0xf8\n      shl\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1279:1293  uint8(data[i]) */\n      0xf8\n      shr\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1279:1337  uint8(data[i]) *... */\n      0xff\n      and\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1247:1253  amount */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1258:1259  2 */\n      0x02\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1254:1255  i */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1254:1259  i / 2 */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1247:1260  amount[i / 2] */\n      0xff\n      and\n      0x10\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_172\n      tag_166\n      jump\t// in\n    tag_172:\n    tag_171:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1247:1337  amount[i / 2] +... */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1215:1221  amount */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1226:1227  2 */\n      0x02\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1222:1223  i */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1222:1227  i / 2 */\n      tag_175\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_175:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1215:1228  amount[i / 2] */\n      0xff\n      and\n      0x10\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_177\n      tag_166\n      jump\t// in\n    tag_177:\n    tag_176:\n      0x20\n      mul\n      add\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1215:1337  amount[i / 2] =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1196:1199  i++ */\n      dup1\n      dup1\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      swap2\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1170:1348  for (uint8 i = 0; i < 32; i++) {... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1043:1354  function bytes32ToAmount16(bytes32 data)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":439:501  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_83:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":477:501  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":439:501  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2232:2514  function withdraw(address token, uint256 amount)... */\n    tag_87:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2313:2331  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_181\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_182\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_107\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2368:2371  0x0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2351:2372  token == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2351:2356  token */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2351:2372  token == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2347:2508  if (token == address(0x0)) {... */\n      tag_184\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2396:2406  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2388:2416  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2388:2424  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2417:2423  amount */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2388:2424  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2347:2508  if (token == address(0x0)) {... */\n      jump(tag_187)\n    tag_184:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2462:2467  token */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2455:2477  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2478:2488  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2490:2496  amount */\n      dup5\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2455:2497  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_192:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2347:2508  if (token == address(0x0)) {... */\n    tag_187:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2232:2514  function withdraw(address token, uint256 amount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":532:563  uint256 public amount1 = 100e18 */\n    tag_89:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_94:\n        /* \"contracts/SQFITEM/ERC165.sol\":848:852  bool */\n      0x00\n        /* \"contracts/SQFITEM/ERC165.sol\":886:911  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/SQFITEM/ERC165.sol\":871:882  interfaceId */\n      dup3\n        /* \"contracts/SQFITEM/ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/SQFITEM/ERC165.sol\":864:911  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"contracts/SQFITEM/Context.sol\":640:647  address */\n      0x00\n        /* \"contracts/SQFITEM/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/Context.sol\":659:676  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":3217:3701  function _checkRole(bytes32 role, address account) internal view {... */\n    tag_107:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3297:3319  hasRole(role, account) */\n      tag_196\n        /* \"contracts/SQFITEM/AccessControl.sol\":3305:3309  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":3311:3318  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":3297:3304  hasRole */\n      tag_61\n        /* \"contracts/SQFITEM/AccessControl.sol\":3297:3319  hasRole(role, account) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3292:3695  if (!hasRole(role, account)) {... */\n      tag_197\n      jumpi\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3521  Strings.toHexString(uint160(account), 20) */\n      tag_198\n        /* \"contracts/SQFITEM/AccessControl.sol\":3508:3515  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3521  Strings.toHexString(uint160(account), 20) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":3518:3520  20 */\n      0x14\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3499  Strings.toHexString */\n      tag_199\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3521  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3592:3630  Strings.toHexString(uint256(role), 32) */\n      tag_200\n        /* \"contracts/SQFITEM/AccessControl.sol\":3620:3624  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":3612:3625  uint256(role) */\n      0x00\n      shr\n        /* \"contracts/SQFITEM/AccessControl.sol\":3627:3629  32 */\n      0x20\n        /* \"contracts/SQFITEM/AccessControl.sol\":3592:3611  Strings.toHexString */\n      tag_199\n        /* \"contracts/SQFITEM/AccessControl.sol\":3592:3630  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3387:3652  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_201\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SQFITEM/AccessControl.sol\":3335:3684  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SQFITEM/AccessControl.sol\":3292:3695  if (!hasRole(role, account)) {... */\n    tag_197:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3217:3701  function _checkRole(bytes32 role, address account) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\n    tag_110:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n      tag_206\n        /* \"contracts/SQFITEM/AccessControl.sol\":6619:6623  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6625:6632  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6611:6618  hasRole */\n      tag_61\n        /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\n      tag_207\n      jumpi\n        /* \"contracts/SQFITEM/AccessControl.sol\":6681:6685  true */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6655  _roles */\n      dup1\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6656:6660  role */\n      dup5\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6669  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6670:6677  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6685  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n      tag_208\n        /* \"contracts/SQFITEM/AccessControl.sol\":6731:6741  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6722:6729  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6716:6720  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\n    tag_207:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":6767:6992  function _revokeRole(bytes32 role, address account) private {... */\n    tag_117:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6841:6863  hasRole(role, account) */\n      tag_210\n        /* \"contracts/SQFITEM/AccessControl.sol\":6849:6853  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6855:6862  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6841:6848  hasRole */\n      tag_61\n        /* \"contracts/SQFITEM/AccessControl.sol\":6841:6863  hasRole(role, account) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6837:6986  if (hasRole(role, account)) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/SQFITEM/AccessControl.sol\":6911:6916  false */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6885  _roles */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6891  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6886:6890  role */\n      dup5\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6891  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6899  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6908  _roles[role].members[account] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6900:6907  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6908  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6916  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":6962:6974  _msgSender() */\n      tag_212\n        /* \"contracts/SQFITEM/AccessControl.sol\":6962:6972  _msgSender */\n      tag_106\n        /* \"contracts/SQFITEM/AccessControl.sol\":6962:6974  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6935:6975  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6953:6960  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":6935:6975  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6947:6951  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6935:6975  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6837:6986  if (hasRole(role, account)) {... */\n    tag_211:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6767:6992  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/Strings.sol\":1535:1976  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_199:\n        /* \"contracts/SQFITEM/Strings.sol\":1610:1623  string memory */\n      0x60\n        /* \"contracts/SQFITEM/Strings.sol\":1635:1654  bytes memory buffer */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1680:1681  2 */\n      0x02\n        /* \"contracts/SQFITEM/Strings.sol\":1671:1677  length */\n      dup4\n        /* \"contracts/SQFITEM/Strings.sol\":1667:1668  2 */\n      0x02\n        /* \"contracts/SQFITEM/Strings.sol\":1667:1677  2 * length */\n      tag_214\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_214:\n        /* \"contracts/SQFITEM/Strings.sol\":1667:1681  2 * length + 2 */\n      tag_215\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_215:\n        /* \"contracts/SQFITEM/Strings.sol\":1657:1682  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n    tag_216:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_219:\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1635:1682  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1707  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1698  buffer */\n      dup2\n        /* \"contracts/SQFITEM/Strings.sol\":1699:1700  0 */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1701  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_221\n      tag_166\n      jump\t// in\n    tag_221:\n    tag_220:\n      0x20\n      add\n      add\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1707  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1732  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1723  buffer */\n      dup2\n        /* \"contracts/SQFITEM/Strings.sol\":1724:1725  1 */\n      0x01\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1726  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_223\n      tag_166\n      jump\t// in\n    tag_223:\n    tag_222:\n      0x20\n      add\n      add\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1732  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1747:1756  uint256 i */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1772:1773  1 */\n      0x01\n        /* \"contracts/SQFITEM/Strings.sol\":1763:1769  length */\n      dup5\n        /* \"contracts/SQFITEM/Strings.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/SQFITEM/Strings.sol\":1759:1769  2 * length */\n      tag_227\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_227:\n        /* \"contracts/SQFITEM/Strings.sol\":1759:1773  2 * length + 1 */\n      tag_228\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_228:\n        /* \"contracts/SQFITEM/Strings.sol\":1747:1773  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1742:1874  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_224:\n        /* \"contracts/SQFITEM/Strings.sol\":1779:1780  1 */\n      0x01\n        /* \"contracts/SQFITEM/Strings.sol\":1775:1776  i */\n      dup2\n        /* \"contracts/SQFITEM/Strings.sol\":1775:1780  i > 1 */\n      gt\n        /* \"contracts/SQFITEM/Strings.sol\":1742:1874  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/SQFITEM/Strings.sol\":1813:1825  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contracts/SQFITEM/Strings.sol\":1834:1837  0xf */\n      0x0f\n        /* \"contracts/SQFITEM/Strings.sol\":1826:1831  value */\n      dup7\n        /* \"contracts/SQFITEM/Strings.sol\":1826:1837  value & 0xf */\n      and\n        /* \"contracts/SQFITEM/Strings.sol\":1813:1838  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_166\n      jump\t// in\n    tag_230:\n    tag_229:\n      byte\n      0xf8\n      shl\n        /* \"contracts/SQFITEM/Strings.sol\":1801:1807  buffer */\n      dup3\n        /* \"contracts/SQFITEM/Strings.sol\":1808:1809  i */\n      dup3\n        /* \"contracts/SQFITEM/Strings.sol\":1801:1810  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_232\n      tag_166\n      jump\t// in\n    tag_232:\n    tag_231:\n      0x20\n      add\n      add\n        /* \"contracts/SQFITEM/Strings.sol\":1801:1838  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1862:1863  4 */\n      0x04\n        /* \"contracts/SQFITEM/Strings.sol\":1852:1863  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1782:1785  --i */\n      dup1\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1742:1874  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_224)\n    tag_225:\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1900:1901  0 */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1891:1896  value */\n      dup5\n        /* \"contracts/SQFITEM/Strings.sol\":1891:1901  value == 0 */\n      eq\n        /* \"contracts/SQFITEM/Strings.sol\":1883:1938  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/SQFITEM/Strings.sol\":1962:1968  buffer */\n      dup1\n        /* \"contracts/SQFITEM/Strings.sol\":1948:1969  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1535:1976  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_153:\n      mload(0x40)\n      dup1\n      0x0200\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_238:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_239:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_240:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_241:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_242:\n        /* \"#utility.yul\":561:584   */\n      tag_311\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_241\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_312:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_243:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_314\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_242\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_317\n      tag_239\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":833:952   */\n    tag_316:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_318\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_243\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_244:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_245:\n        /* \"#utility.yul\":1268:1289   */\n      tag_321\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_244\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_323\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_245\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_246:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_247:\n        /* \"#utility.yul\":1674:1698   */\n      tag_326\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_246\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_327:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_248:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_329\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_247\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_31:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_332\n      tag_239\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1950:2069   */\n    tag_331:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_333\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_248\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2286   */\n    tag_249:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2275:2280   */\n      dup2\n        /* \"#utility.yul\":2264:2280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2414   */\n    tag_250:\n        /* \"#utility.yul\":2365:2389   */\n      tag_336\n        /* \"#utility.yul\":2383:2388   */\n      dup2\n        /* \"#utility.yul\":2365:2389   */\n      tag_249\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2355:2390   */\n      eq\n        /* \"#utility.yul\":2345:2408   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2345:2408   */\n    tag_337:\n        /* \"#utility.yul\":2292:2414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2559   */\n    tag_251:\n        /* \"#utility.yul\":2466:2471   */\n      0x00\n        /* \"#utility.yul\":2504:2510   */\n      dup2\n        /* \"#utility.yul\":2491:2511   */\n      calldataload\n        /* \"#utility.yul\":2482:2511   */\n      swap1\n      pop\n        /* \"#utility.yul\":2520:2553   */\n      tag_339\n        /* \"#utility.yul\":2547:2552   */\n      dup2\n        /* \"#utility.yul\":2520:2553   */\n      tag_250\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2420:2559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2894   */\n    tag_35:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_342\n      tag_239\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2641:2760   */\n    tag_341:\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2824:2877   */\n      tag_343\n        /* \"#utility.yul\":2869:2876   */\n      dup5\n        /* \"#utility.yul\":2860:2866   */\n      dup3\n        /* \"#utility.yul\":2849:2858   */\n      dup6\n        /* \"#utility.yul\":2845:2867   */\n      add\n        /* \"#utility.yul\":2824:2877   */\n      tag_251\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2814:2877   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:2887   */\n      pop\n        /* \"#utility.yul\":2565:2894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3018   */\n    tag_252:\n        /* \"#utility.yul\":2987:3011   */\n      tag_345\n        /* \"#utility.yul\":3005:3010   */\n      dup2\n        /* \"#utility.yul\":2987:3011   */\n      tag_249\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2982:2985   */\n      dup3\n        /* \"#utility.yul\":2975:3012   */\n      mstore\n        /* \"#utility.yul\":2900:3018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3246   */\n    tag_38:\n        /* \"#utility.yul\":3117:3121   */\n      0x00\n        /* \"#utility.yul\":3155:3157   */\n      0x20\n        /* \"#utility.yul\":3144:3153   */\n      dup3\n        /* \"#utility.yul\":3140:3158   */\n      add\n        /* \"#utility.yul\":3132:3158   */\n      swap1\n      pop\n        /* \"#utility.yul\":3168:3239   */\n      tag_347\n        /* \"#utility.yul\":3236:3237   */\n      0x00\n        /* \"#utility.yul\":3225:3234   */\n      dup4\n        /* \"#utility.yul\":3221:3238   */\n      add\n        /* \"#utility.yul\":3212:3218   */\n      dup5\n        /* \"#utility.yul\":3168:3239   */\n      tag_252\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3024:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3378   */\n    tag_253:\n        /* \"#utility.yul\":3289:3296   */\n      0x00\n        /* \"#utility.yul\":3329:3371   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3322:3327   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      and\n        /* \"#utility.yul\":3307:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3252:3378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3480   */\n    tag_254:\n        /* \"#utility.yul\":3421:3428   */\n      0x00\n        /* \"#utility.yul\":3450:3474   */\n      tag_350\n        /* \"#utility.yul\":3468:3473   */\n      dup3\n        /* \"#utility.yul\":3450:3474   */\n      tag_253\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3439:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3384:3480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3608   */\n    tag_255:\n        /* \"#utility.yul\":3559:3583   */\n      tag_352\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3559:3583   */\n      tag_254\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3549:3584   */\n      eq\n        /* \"#utility.yul\":3539:3602   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      dup1\n        /* \"#utility.yul\":3588:3600   */\n      revert\n        /* \"#utility.yul\":3539:3602   */\n    tag_353:\n        /* \"#utility.yul\":3486:3608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3753   */\n    tag_256:\n        /* \"#utility.yul\":3660:3665   */\n      0x00\n        /* \"#utility.yul\":3698:3704   */\n      dup2\n        /* \"#utility.yul\":3685:3705   */\n      calldataload\n        /* \"#utility.yul\":3676:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3747   */\n      tag_355\n        /* \"#utility.yul\":3741:3746   */\n      dup2\n        /* \"#utility.yul\":3714:3747   */\n      tag_255\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3614:3753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4233   */\n    tag_41:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3835:3841   */\n      dup1\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3872:3881   */\n      dup4\n        /* \"#utility.yul\":3863:3870   */\n      dup6\n        /* \"#utility.yul\":3859:3882   */\n      sub\n        /* \"#utility.yul\":3855:3887   */\n      slt\n        /* \"#utility.yul\":3852:3971   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3890:3969   */\n      tag_358\n      tag_239\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3852:3971   */\n    tag_357:\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4035:4088   */\n      tag_359\n        /* \"#utility.yul\":4080:4087   */\n      dup6\n        /* \"#utility.yul\":4071:4077   */\n      dup3\n        /* \"#utility.yul\":4060:4069   */\n      dup7\n        /* \"#utility.yul\":4056:4078   */\n      add\n        /* \"#utility.yul\":4035:4088   */\n      tag_251\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4025:4088   */\n      swap3\n      pop\n        /* \"#utility.yul\":3981:4098   */\n      pop\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"#utility.yul\":4163:4216   */\n      tag_360\n        /* \"#utility.yul\":4208:4215   */\n      dup6\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_256\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4226   */\n      pop\n        /* \"#utility.yul\":3759:4233   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4299   */\n    tag_257:\n        /* \"#utility.yul\":4267:4270   */\n      0x00\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4281:4293   */\n      swap1\n      pop\n        /* \"#utility.yul\":4239:4299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4305:4447   */\n    tag_258:\n        /* \"#utility.yul\":4355:4364   */\n      0x00\n        /* \"#utility.yul\":4388:4441   */\n      tag_363\n        /* \"#utility.yul\":4406:4440   */\n      tag_364\n        /* \"#utility.yul\":4415:4439   */\n      tag_365\n        /* \"#utility.yul\":4433:4438   */\n      dup5\n        /* \"#utility.yul\":4415:4439   */\n      tag_253\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4406:4440   */\n      tag_257\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4388:4441   */\n      tag_253\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4375:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4305:4447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4453:4579   */\n    tag_259:\n        /* \"#utility.yul\":4503:4512   */\n      0x00\n        /* \"#utility.yul\":4536:4573   */\n      tag_367\n        /* \"#utility.yul\":4567:4572   */\n      dup3\n        /* \"#utility.yul\":4536:4573   */\n      tag_258\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4523:4573   */\n      swap1\n      pop\n        /* \"#utility.yul\":4453:4579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4585:4727   */\n    tag_260:\n        /* \"#utility.yul\":4651:4660   */\n      0x00\n        /* \"#utility.yul\":4684:4721   */\n      tag_369\n        /* \"#utility.yul\":4715:4720   */\n      dup3\n        /* \"#utility.yul\":4684:4721   */\n      tag_259\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4671:4721   */\n      swap1\n      pop\n        /* \"#utility.yul\":4585:4727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4733:4896   */\n    tag_261:\n        /* \"#utility.yul\":4836:4889   */\n      tag_371\n        /* \"#utility.yul\":4883:4888   */\n      dup2\n        /* \"#utility.yul\":4836:4889   */\n      tag_260\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4831:4834   */\n      dup3\n        /* \"#utility.yul\":4824:4890   */\n      mstore\n        /* \"#utility.yul\":4733:4896   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4902:5156   */\n    tag_49:\n        /* \"#utility.yul\":5011:5015   */\n      0x00\n        /* \"#utility.yul\":5049:5051   */\n      0x20\n        /* \"#utility.yul\":5038:5047   */\n      dup3\n        /* \"#utility.yul\":5034:5052   */\n      add\n        /* \"#utility.yul\":5026:5052   */\n      swap1\n      pop\n        /* \"#utility.yul\":5062:5149   */\n      tag_373\n        /* \"#utility.yul\":5146:5147   */\n      0x00\n        /* \"#utility.yul\":5135:5144   */\n      dup4\n        /* \"#utility.yul\":5131:5148   */\n      add\n        /* \"#utility.yul\":5122:5128   */\n      dup5\n        /* \"#utility.yul\":5062:5149   */\n      tag_261\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4902:5156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5162:5279   */\n    tag_262:\n        /* \"#utility.yul\":5271:5272   */\n      0x00\n        /* \"#utility.yul\":5268:5269   */\n      dup1\n        /* \"#utility.yul\":5261:5273   */\n      revert\n        /* \"#utility.yul\":5285:5402   */\n    tag_263:\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5391:5392   */\n      dup1\n        /* \"#utility.yul\":5384:5396   */\n      revert\n        /* \"#utility.yul\":5408:5510   */\n    tag_264:\n        /* \"#utility.yul\":5449:5455   */\n      0x00\n        /* \"#utility.yul\":5500:5502   */\n      0x1f\n        /* \"#utility.yul\":5496:5503   */\n      not\n        /* \"#utility.yul\":5491:5493   */\n      0x1f\n        /* \"#utility.yul\":5484:5489   */\n      dup4\n        /* \"#utility.yul\":5480:5494   */\n      add\n        /* \"#utility.yul\":5476:5504   */\n      and\n        /* \"#utility.yul\":5466:5504   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5516:5696   */\n    tag_218:\n        /* \"#utility.yul\":5564:5641   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5561:5562   */\n      0x00\n        /* \"#utility.yul\":5554:5642   */\n      mstore\n        /* \"#utility.yul\":5661:5665   */\n      0x41\n        /* \"#utility.yul\":5658:5659   */\n      0x04\n        /* \"#utility.yul\":5651:5666   */\n      mstore\n        /* \"#utility.yul\":5685:5689   */\n      0x24\n        /* \"#utility.yul\":5682:5683   */\n      0x00\n        /* \"#utility.yul\":5675:5690   */\n      revert\n        /* \"#utility.yul\":5702:5983   */\n    tag_265:\n        /* \"#utility.yul\":5785:5812   */\n      tag_379\n        /* \"#utility.yul\":5807:5811   */\n      dup3\n        /* \"#utility.yul\":5785:5812   */\n      tag_264\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5777:5783   */\n      dup2\n        /* \"#utility.yul\":5773:5813   */\n      add\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5903:5913   */\n      dup2\n        /* \"#utility.yul\":5900:5922   */\n      lt\n        /* \"#utility.yul\":5879:5897   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5867:5877   */\n      dup3\n        /* \"#utility.yul\":5864:5898   */\n      gt\n        /* \"#utility.yul\":5861:5923   */\n      or\n        /* \"#utility.yul\":5858:5946   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5926:5944   */\n      tag_381\n      tag_218\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5858:5946   */\n    tag_380:\n        /* \"#utility.yul\":5966:5976   */\n      dup1\n        /* \"#utility.yul\":5962:5964   */\n      0x40\n        /* \"#utility.yul\":5955:5977   */\n      mstore\n        /* \"#utility.yul\":5745:5983   */\n      pop\n        /* \"#utility.yul\":5702:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6118   */\n    tag_266:\n        /* \"#utility.yul\":6023:6029   */\n      0x00\n        /* \"#utility.yul\":6050:6070   */\n      tag_383\n      tag_238\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6040:6070   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6112   */\n      tag_384\n        /* \"#utility.yul\":6107:6111   */\n      dup3\n        /* \"#utility.yul\":6099:6105   */\n      dup3\n        /* \"#utility.yul\":6079:6112   */\n      tag_265\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5989:6118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6432   */\n    tag_267:\n        /* \"#utility.yul\":6186:6190   */\n      0x00\n        /* \"#utility.yul\":6276:6294   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6268:6274   */\n      dup3\n        /* \"#utility.yul\":6265:6295   */\n      gt\n        /* \"#utility.yul\":6262:6318   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":6298:6316   */\n      tag_387\n      tag_218\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6262:6318   */\n    tag_386:\n        /* \"#utility.yul\":6336:6365   */\n      tag_388\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6336:6365   */\n      tag_264\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6328:6365   */\n      swap1\n      pop\n        /* \"#utility.yul\":6420:6424   */\n      0x20\n        /* \"#utility.yul\":6414:6418   */\n      dup2\n        /* \"#utility.yul\":6410:6425   */\n      add\n        /* \"#utility.yul\":6402:6425   */\n      swap1\n      pop\n        /* \"#utility.yul\":6124:6432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6438:6592   */\n    tag_268:\n        /* \"#utility.yul\":6522:6528   */\n      dup3\n        /* \"#utility.yul\":6517:6520   */\n      dup2\n        /* \"#utility.yul\":6512:6515   */\n      dup4\n        /* \"#utility.yul\":6499:6529   */\n      calldatacopy\n        /* \"#utility.yul\":6584:6585   */\n      0x00\n        /* \"#utility.yul\":6575:6581   */\n      dup4\n        /* \"#utility.yul\":6570:6573   */\n      dup4\n        /* \"#utility.yul\":6566:6582   */\n      add\n        /* \"#utility.yul\":6559:6586   */\n      mstore\n        /* \"#utility.yul\":6438:6592   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6598:7010   */\n    tag_269:\n        /* \"#utility.yul\":6676:6681   */\n      0x00\n        /* \"#utility.yul\":6701:6767   */\n      tag_391\n        /* \"#utility.yul\":6717:6766   */\n      tag_392\n        /* \"#utility.yul\":6759:6765   */\n      dup5\n        /* \"#utility.yul\":6717:6766   */\n      tag_267\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6701:6767   */\n      tag_266\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6692:6767   */\n      swap1\n      pop\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6783:6788   */\n      dup2\n        /* \"#utility.yul\":6776:6797   */\n      mstore\n        /* \"#utility.yul\":6828:6832   */\n      0x20\n        /* \"#utility.yul\":6821:6826   */\n      dup2\n        /* \"#utility.yul\":6817:6833   */\n      add\n        /* \"#utility.yul\":6866:6869   */\n      dup5\n        /* \"#utility.yul\":6857:6863   */\n      dup5\n        /* \"#utility.yul\":6852:6855   */\n      dup5\n        /* \"#utility.yul\":6848:6864   */\n      add\n        /* \"#utility.yul\":6845:6870   */\n      gt\n        /* \"#utility.yul\":6842:6954   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":6873:6952   */\n      tag_394\n      tag_263\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6842:6954   */\n    tag_393:\n        /* \"#utility.yul\":6963:7004   */\n      tag_395\n        /* \"#utility.yul\":6997:7003   */\n      dup5\n        /* \"#utility.yul\":6992:6995   */\n      dup3\n        /* \"#utility.yul\":6987:6990   */\n      dup6\n        /* \"#utility.yul\":6963:7004   */\n      tag_268\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6682:7010   */\n      pop\n        /* \"#utility.yul\":6598:7010   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7030:7370   */\n    tag_270:\n        /* \"#utility.yul\":7086:7091   */\n      0x00\n        /* \"#utility.yul\":7135:7138   */\n      dup3\n        /* \"#utility.yul\":7128:7132   */\n      0x1f\n        /* \"#utility.yul\":7120:7126   */\n      dup4\n        /* \"#utility.yul\":7116:7133   */\n      add\n        /* \"#utility.yul\":7112:7139   */\n      slt\n        /* \"#utility.yul\":7102:7224   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7143:7222   */\n      tag_398\n      tag_262\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7102:7224   */\n    tag_397:\n        /* \"#utility.yul\":7260:7266   */\n      dup2\n        /* \"#utility.yul\":7247:7267   */\n      calldataload\n        /* \"#utility.yul\":7285:7364   */\n      tag_399\n        /* \"#utility.yul\":7360:7363   */\n      dup5\n        /* \"#utility.yul\":7352:7358   */\n      dup3\n        /* \"#utility.yul\":7345:7349   */\n      0x20\n        /* \"#utility.yul\":7337:7343   */\n      dup7\n        /* \"#utility.yul\":7333:7350   */\n      add\n        /* \"#utility.yul\":7285:7364   */\n      tag_269\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7276:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7092:7370   */\n      pop\n        /* \"#utility.yul\":7030:7370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7376:7885   */\n    tag_55:\n        /* \"#utility.yul\":7445:7451   */\n      0x00\n        /* \"#utility.yul\":7494:7496   */\n      0x20\n        /* \"#utility.yul\":7482:7491   */\n      dup3\n        /* \"#utility.yul\":7473:7480   */\n      dup5\n        /* \"#utility.yul\":7469:7492   */\n      sub\n        /* \"#utility.yul\":7465:7497   */\n      slt\n        /* \"#utility.yul\":7462:7581   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":7500:7579   */\n      tag_402\n      tag_239\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7462:7581   */\n    tag_401:\n        /* \"#utility.yul\":7648:7649   */\n      0x00\n        /* \"#utility.yul\":7637:7646   */\n      dup3\n        /* \"#utility.yul\":7633:7650   */\n      add\n        /* \"#utility.yul\":7620:7651   */\n      calldataload\n        /* \"#utility.yul\":7678:7696   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7670:7676   */\n      dup2\n        /* \"#utility.yul\":7667:7697   */\n      gt\n        /* \"#utility.yul\":7664:7781   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7700:7779   */\n      tag_404\n      tag_240\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7664:7781   */\n    tag_403:\n        /* \"#utility.yul\":7805:7868   */\n      tag_405\n        /* \"#utility.yul\":7860:7867   */\n      dup5\n        /* \"#utility.yul\":7851:7857   */\n      dup3\n        /* \"#utility.yul\":7840:7849   */\n      dup6\n        /* \"#utility.yul\":7836:7858   */\n      add\n        /* \"#utility.yul\":7805:7868   */\n      tag_270\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7795:7868   */\n      swap2\n      pop\n        /* \"#utility.yul\":7591:7878   */\n      pop\n        /* \"#utility.yul\":7376:7885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7891:8009   */\n    tag_271:\n        /* \"#utility.yul\":7978:8002   */\n      tag_407\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7978:8002   */\n      tag_246\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7973:7976   */\n      dup3\n        /* \"#utility.yul\":7966:8003   */\n      mstore\n        /* \"#utility.yul\":7891:8009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8237   */\n    tag_58:\n        /* \"#utility.yul\":8108:8112   */\n      0x00\n        /* \"#utility.yul\":8146:8148   */\n      0x20\n        /* \"#utility.yul\":8135:8144   */\n      dup3\n        /* \"#utility.yul\":8131:8149   */\n      add\n        /* \"#utility.yul\":8123:8149   */\n      swap1\n      pop\n        /* \"#utility.yul\":8159:8230   */\n      tag_409\n        /* \"#utility.yul\":8227:8228   */\n      0x00\n        /* \"#utility.yul\":8216:8225   */\n      dup4\n        /* \"#utility.yul\":8212:8229   */\n      add\n        /* \"#utility.yul\":8203:8209   */\n      dup5\n        /* \"#utility.yul\":8159:8230   */\n      tag_271\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8015:8237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8243:8717   */\n    tag_65:\n        /* \"#utility.yul\":8311:8317   */\n      0x00\n        /* \"#utility.yul\":8319:8325   */\n      dup1\n        /* \"#utility.yul\":8368:8370   */\n      0x40\n        /* \"#utility.yul\":8356:8365   */\n      dup4\n        /* \"#utility.yul\":8347:8354   */\n      dup6\n        /* \"#utility.yul\":8343:8366   */\n      sub\n        /* \"#utility.yul\":8339:8371   */\n      slt\n        /* \"#utility.yul\":8336:8455   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":8374:8453   */\n      tag_412\n      tag_239\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8336:8455   */\n    tag_411:\n        /* \"#utility.yul\":8494:8495   */\n      0x00\n        /* \"#utility.yul\":8519:8572   */\n      tag_413\n        /* \"#utility.yul\":8564:8571   */\n      dup6\n        /* \"#utility.yul\":8555:8561   */\n      dup3\n        /* \"#utility.yul\":8544:8553   */\n      dup7\n        /* \"#utility.yul\":8540:8562   */\n      add\n        /* \"#utility.yul\":8519:8572   */\n      tag_256\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8509:8572   */\n      swap3\n      pop\n        /* \"#utility.yul\":8465:8582   */\n      pop\n        /* \"#utility.yul\":8621:8623   */\n      0x20\n        /* \"#utility.yul\":8647:8700   */\n      tag_414\n        /* \"#utility.yul\":8692:8699   */\n      dup6\n        /* \"#utility.yul\":8683:8689   */\n      dup3\n        /* \"#utility.yul\":8672:8681   */\n      dup7\n        /* \"#utility.yul\":8668:8690   */\n      add\n        /* \"#utility.yul\":8647:8700   */\n      tag_248\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8637:8700   */\n      swap2\n      pop\n        /* \"#utility.yul\":8592:8710   */\n      pop\n        /* \"#utility.yul\":8243:8717   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8723:8841   */\n    tag_272:\n        /* \"#utility.yul\":8810:8834   */\n      tag_416\n        /* \"#utility.yul\":8828:8833   */\n      dup2\n        /* \"#utility.yul\":8810:8834   */\n      tag_254\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8805:8808   */\n      dup3\n        /* \"#utility.yul\":8798:8835   */\n      mstore\n        /* \"#utility.yul\":8723:8841   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8847:9069   */\n    tag_73:\n        /* \"#utility.yul\":8940:8944   */\n      0x00\n        /* \"#utility.yul\":8978:8980   */\n      0x20\n        /* \"#utility.yul\":8967:8976   */\n      dup3\n        /* \"#utility.yul\":8963:8981   */\n      add\n        /* \"#utility.yul\":8955:8981   */\n      swap1\n      pop\n        /* \"#utility.yul\":8991:9062   */\n      tag_418\n        /* \"#utility.yul\":9059:9060   */\n      0x00\n        /* \"#utility.yul\":9048:9057   */\n      dup4\n        /* \"#utility.yul\":9044:9061   */\n      add\n        /* \"#utility.yul\":9035:9041   */\n      dup5\n        /* \"#utility.yul\":8991:9062   */\n      tag_272\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8847:9069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9075:9180   */\n    tag_273:\n        /* \"#utility.yul\":9141:9147   */\n      0x00\n        /* \"#utility.yul\":9169:9173   */\n      0x10\n        /* \"#utility.yul\":9159:9173   */\n      swap1\n      pop\n        /* \"#utility.yul\":9075:9180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9186:9330   */\n    tag_274:\n        /* \"#utility.yul\":9284:9295   */\n      0x00\n        /* \"#utility.yul\":9321:9324   */\n      dup2\n        /* \"#utility.yul\":9306:9324   */\n      swap1\n      pop\n        /* \"#utility.yul\":9186:9330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9336:9435   */\n    tag_275:\n        /* \"#utility.yul\":9402:9406   */\n      0x00\n        /* \"#utility.yul\":9425:9428   */\n      dup2\n        /* \"#utility.yul\":9417:9428   */\n      swap1\n      pop\n        /* \"#utility.yul\":9336:9435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9441:9549   */\n    tag_276:\n        /* \"#utility.yul\":9518:9542   */\n      tag_423\n        /* \"#utility.yul\":9536:9541   */\n      dup2\n        /* \"#utility.yul\":9518:9542   */\n      tag_246\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9513:9516   */\n      dup3\n        /* \"#utility.yul\":9506:9543   */\n      mstore\n        /* \"#utility.yul\":9441:9549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9555:9734   */\n    tag_277:\n        /* \"#utility.yul\":9624:9634   */\n      0x00\n        /* \"#utility.yul\":9645:9691   */\n      tag_425\n        /* \"#utility.yul\":9687:9690   */\n      dup4\n        /* \"#utility.yul\":9679:9685   */\n      dup4\n        /* \"#utility.yul\":9645:9691   */\n      tag_276\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9723:9727   */\n      0x20\n        /* \"#utility.yul\":9718:9721   */\n      dup4\n        /* \"#utility.yul\":9714:9728   */\n      add\n        /* \"#utility.yul\":9700:9728   */\n      swap1\n      pop\n        /* \"#utility.yul\":9555:9734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9740:9852   */\n    tag_278:\n        /* \"#utility.yul\":9809:9813   */\n      0x00\n        /* \"#utility.yul\":9841:9845   */\n      0x20\n        /* \"#utility.yul\":9836:9839   */\n      dup3\n        /* \"#utility.yul\":9832:9846   */\n      add\n        /* \"#utility.yul\":9824:9846   */\n      swap1\n      pop\n        /* \"#utility.yul\":9740:9852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9892:10592   */\n    tag_279:\n        /* \"#utility.yul\":10030:10083   */\n      tag_428\n        /* \"#utility.yul\":10077:10082   */\n      dup2\n        /* \"#utility.yul\":10030:10083   */\n      tag_273\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10099:10184   */\n      tag_429\n        /* \"#utility.yul\":10177:10183   */\n      dup2\n        /* \"#utility.yul\":10172:10175   */\n      dup5\n        /* \"#utility.yul\":10099:10184   */\n      tag_274\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10092:10184   */\n      swap3\n      pop\n        /* \"#utility.yul\":10208:10263   */\n      tag_430\n        /* \"#utility.yul\":10257:10262   */\n      dup3\n        /* \"#utility.yul\":10208:10263   */\n      tag_275\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10286:10293   */\n      dup1\n        /* \"#utility.yul\":10317:10318   */\n      0x00\n        /* \"#utility.yul\":10302:10585   */\n    tag_431:\n        /* \"#utility.yul\":10327:10333   */\n      dup4\n        /* \"#utility.yul\":10324:10325   */\n      dup2\n        /* \"#utility.yul\":10321:10334   */\n      lt\n        /* \"#utility.yul\":10302:10585   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10403:10409   */\n      dup2\n        /* \"#utility.yul\":10397:10410   */\n      mload\n        /* \"#utility.yul\":10430:10493   */\n      tag_434\n        /* \"#utility.yul\":10489:10492   */\n      dup8\n        /* \"#utility.yul\":10474:10487   */\n      dup3\n        /* \"#utility.yul\":10430:10493   */\n      tag_277\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10423:10493   */\n      swap7\n      pop\n        /* \"#utility.yul\":10516:10575   */\n      tag_435\n        /* \"#utility.yul\":10568:10574   */\n      dup4\n        /* \"#utility.yul\":10516:10575   */\n      tag_278\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10506:10575   */\n      swap3\n      pop\n        /* \"#utility.yul\":10362:10585   */\n      pop\n        /* \"#utility.yul\":10349:10350   */\n      0x01\n        /* \"#utility.yul\":10346:10347   */\n      dup2\n        /* \"#utility.yul\":10342:10351   */\n      add\n        /* \"#utility.yul\":10337:10351   */\n      swap1\n      pop\n        /* \"#utility.yul\":10302:10585   */\n      jump(tag_431)\n    tag_433:\n        /* \"#utility.yul\":10306:10320   */\n      pop\n        /* \"#utility.yul\":10006:10592   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9892:10592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10598:10917   */\n    tag_81:\n        /* \"#utility.yul\":10739:10743   */\n      0x00\n        /* \"#utility.yul\":10777:10780   */\n      0x0200\n        /* \"#utility.yul\":10766:10775   */\n      dup3\n        /* \"#utility.yul\":10762:10781   */\n      add\n        /* \"#utility.yul\":10754:10781   */\n      swap1\n      pop\n        /* \"#utility.yul\":10791:10910   */\n      tag_437\n        /* \"#utility.yul\":10907:10908   */\n      0x00\n        /* \"#utility.yul\":10896:10905   */\n      dup4\n        /* \"#utility.yul\":10892:10909   */\n      add\n        /* \"#utility.yul\":10883:10889   */\n      dup5\n        /* \"#utility.yul\":10791:10910   */\n      tag_279\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10598:10917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10923:11092   */\n    tag_280:\n        /* \"#utility.yul\":11007:11018   */\n      0x00\n        /* \"#utility.yul\":11041:11047   */\n      dup3\n        /* \"#utility.yul\":11036:11039   */\n      dup3\n        /* \"#utility.yul\":11029:11048   */\n      mstore\n        /* \"#utility.yul\":11081:11085   */\n      0x20\n        /* \"#utility.yul\":11076:11079   */\n      dup3\n        /* \"#utility.yul\":11072:11086   */\n      add\n        /* \"#utility.yul\":11057:11086   */\n      swap1\n      pop\n        /* \"#utility.yul\":10923:11092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11098:11332   */\n    tag_281:\n        /* \"#utility.yul\":11238:11272   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11234:11235   */\n      0x00\n        /* \"#utility.yul\":11226:11232   */\n      dup3\n        /* \"#utility.yul\":11222:11236   */\n      add\n        /* \"#utility.yul\":11215:11273   */\n      mstore\n        /* \"#utility.yul\":11307:11324   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":11302:11304   */\n      0x20\n        /* \"#utility.yul\":11294:11300   */\n      dup3\n        /* \"#utility.yul\":11290:11305   */\n      add\n        /* \"#utility.yul\":11283:11325   */\n      mstore\n        /* \"#utility.yul\":11098:11332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11338:11704   */\n    tag_282:\n        /* \"#utility.yul\":11480:11483   */\n      0x00\n        /* \"#utility.yul\":11501:11568   */\n      tag_441\n        /* \"#utility.yul\":11565:11567   */\n      0x2f\n        /* \"#utility.yul\":11560:11563   */\n      dup4\n        /* \"#utility.yul\":11501:11568   */\n      tag_280\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11494:11568   */\n      swap2\n      pop\n        /* \"#utility.yul\":11577:11670   */\n      tag_442\n        /* \"#utility.yul\":11666:11669   */\n      dup3\n        /* \"#utility.yul\":11577:11670   */\n      tag_281\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11695:11697   */\n      0x40\n        /* \"#utility.yul\":11690:11693   */\n      dup3\n        /* \"#utility.yul\":11686:11698   */\n      add\n        /* \"#utility.yul\":11679:11698   */\n      swap1\n      pop\n        /* \"#utility.yul\":11338:11704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11710:12129   */\n    tag_115:\n        /* \"#utility.yul\":11876:11880   */\n      0x00\n        /* \"#utility.yul\":11914:11916   */\n      0x20\n        /* \"#utility.yul\":11903:11912   */\n      dup3\n        /* \"#utility.yul\":11899:11917   */\n      add\n        /* \"#utility.yul\":11891:11917   */\n      swap1\n      pop\n        /* \"#utility.yul\":11963:11972   */\n      dup2\n        /* \"#utility.yul\":11957:11961   */\n      dup2\n        /* \"#utility.yul\":11953:11973   */\n      sub\n        /* \"#utility.yul\":11949:11950   */\n      0x00\n        /* \"#utility.yul\":11938:11947   */\n      dup4\n        /* \"#utility.yul\":11934:11951   */\n      add\n        /* \"#utility.yul\":11927:11974   */\n      mstore\n        /* \"#utility.yul\":11991:12122   */\n      tag_444\n        /* \"#utility.yul\":12117:12121   */\n      dup2\n        /* \"#utility.yul\":11991:12122   */\n      tag_282\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11983:12122   */\n      swap1\n      pop\n        /* \"#utility.yul\":11710:12129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12135:12301   */\n    tag_283:\n        /* \"#utility.yul\":12275:12293   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":12271:12272   */\n      0x00\n        /* \"#utility.yul\":12263:12269   */\n      dup3\n        /* \"#utility.yul\":12259:12273   */\n      add\n        /* \"#utility.yul\":12252:12294   */\n      mstore\n        /* \"#utility.yul\":12135:12301   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12307:12673   */\n    tag_284:\n        /* \"#utility.yul\":12449:12452   */\n      0x00\n        /* \"#utility.yul\":12470:12537   */\n      tag_447\n        /* \"#utility.yul\":12534:12536   */\n      0x10\n        /* \"#utility.yul\":12529:12532   */\n      dup4\n        /* \"#utility.yul\":12470:12537   */\n      tag_280\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12463:12537   */\n      swap2\n      pop\n        /* \"#utility.yul\":12546:12639   */\n      tag_448\n        /* \"#utility.yul\":12635:12638   */\n      dup3\n        /* \"#utility.yul\":12546:12639   */\n      tag_283\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12664:12666   */\n      0x20\n        /* \"#utility.yul\":12659:12662   */\n      dup3\n        /* \"#utility.yul\":12655:12667   */\n      add\n        /* \"#utility.yul\":12648:12667   */\n      swap1\n      pop\n        /* \"#utility.yul\":12307:12673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12679:13098   */\n    tag_123:\n        /* \"#utility.yul\":12845:12849   */\n      0x00\n        /* \"#utility.yul\":12883:12885   */\n      0x20\n        /* \"#utility.yul\":12872:12881   */\n      dup3\n        /* \"#utility.yul\":12868:12886   */\n      add\n        /* \"#utility.yul\":12860:12886   */\n      swap1\n      pop\n        /* \"#utility.yul\":12932:12941   */\n      dup2\n        /* \"#utility.yul\":12926:12930   */\n      dup2\n        /* \"#utility.yul\":12922:12942   */\n      sub\n        /* \"#utility.yul\":12918:12919   */\n      0x00\n        /* \"#utility.yul\":12907:12916   */\n      dup4\n        /* \"#utility.yul\":12903:12920   */\n      add\n        /* \"#utility.yul\":12896:12943   */\n      mstore\n        /* \"#utility.yul\":12960:13091   */\n      tag_450\n        /* \"#utility.yul\":13086:13090   */\n      dup2\n        /* \"#utility.yul\":12960:13091   */\n      tag_284\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12952:13091   */\n      swap1\n      pop\n        /* \"#utility.yul\":12679:13098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13104:13546   */\n    tag_128:\n        /* \"#utility.yul\":13253:13257   */\n      0x00\n        /* \"#utility.yul\":13291:13293   */\n      0x60\n        /* \"#utility.yul\":13280:13289   */\n      dup3\n        /* \"#utility.yul\":13276:13294   */\n      add\n        /* \"#utility.yul\":13268:13294   */\n      swap1\n      pop\n        /* \"#utility.yul\":13304:13375   */\n      tag_452\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13361:13370   */\n      dup4\n        /* \"#utility.yul\":13357:13374   */\n      add\n        /* \"#utility.yul\":13348:13354   */\n      dup7\n        /* \"#utility.yul\":13304:13375   */\n      tag_272\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13385:13457   */\n      tag_453\n        /* \"#utility.yul\":13453:13455   */\n      0x20\n        /* \"#utility.yul\":13442:13451   */\n      dup4\n        /* \"#utility.yul\":13438:13456   */\n      add\n        /* \"#utility.yul\":13429:13435   */\n      dup6\n        /* \"#utility.yul\":13385:13457   */\n      tag_272\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":13467:13539   */\n      tag_454\n        /* \"#utility.yul\":13535:13537   */\n      0x40\n        /* \"#utility.yul\":13524:13533   */\n      dup4\n        /* \"#utility.yul\":13520:13538   */\n      add\n        /* \"#utility.yul\":13511:13517   */\n      dup5\n        /* \"#utility.yul\":13467:13539   */\n      tag_271\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13104:13546   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13552:13668   */\n    tag_285:\n        /* \"#utility.yul\":13622:13643   */\n      tag_456\n        /* \"#utility.yul\":13637:13642   */\n      dup2\n        /* \"#utility.yul\":13622:13643   */\n      tag_244\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13615:13620   */\n      dup2\n        /* \"#utility.yul\":13612:13644   */\n      eq\n        /* \"#utility.yul\":13602:13662   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":13658:13659   */\n      0x00\n        /* \"#utility.yul\":13655:13656   */\n      dup1\n        /* \"#utility.yul\":13648:13660   */\n      revert\n        /* \"#utility.yul\":13602:13662   */\n    tag_457:\n        /* \"#utility.yul\":13552:13668   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13674:13811   */\n    tag_286:\n        /* \"#utility.yul\":13728:13733   */\n      0x00\n        /* \"#utility.yul\":13759:13765   */\n      dup2\n        /* \"#utility.yul\":13753:13766   */\n      mload\n        /* \"#utility.yul\":13744:13766   */\n      swap1\n      pop\n        /* \"#utility.yul\":13775:13805   */\n      tag_459\n        /* \"#utility.yul\":13799:13804   */\n      dup2\n        /* \"#utility.yul\":13775:13805   */\n      tag_285\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13674:13811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13817:14162   */\n    tag_132:\n        /* \"#utility.yul\":13884:13890   */\n      0x00\n        /* \"#utility.yul\":13933:13935   */\n      0x20\n        /* \"#utility.yul\":13921:13930   */\n      dup3\n        /* \"#utility.yul\":13912:13919   */\n      dup5\n        /* \"#utility.yul\":13908:13931   */\n      sub\n        /* \"#utility.yul\":13904:13936   */\n      slt\n        /* \"#utility.yul\":13901:14020   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":13939:14018   */\n      tag_462\n      tag_239\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13901:14020   */\n    tag_461:\n        /* \"#utility.yul\":14059:14060   */\n      0x00\n        /* \"#utility.yul\":14084:14145   */\n      tag_463\n        /* \"#utility.yul\":14137:14144   */\n      dup5\n        /* \"#utility.yul\":14128:14134   */\n      dup3\n        /* \"#utility.yul\":14117:14126   */\n      dup6\n        /* \"#utility.yul\":14113:14135   */\n      add\n        /* \"#utility.yul\":14084:14145   */\n      tag_286\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14074:14145   */\n      swap2\n      pop\n        /* \"#utility.yul\":14030:14155   */\n      pop\n        /* \"#utility.yul\":13817:14162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14168:14267   */\n    tag_287:\n        /* \"#utility.yul\":14220:14226   */\n      0x00\n        /* \"#utility.yul\":14254:14259   */\n      dup2\n        /* \"#utility.yul\":14248:14260   */\n      mload\n        /* \"#utility.yul\":14238:14260   */\n      swap1\n      pop\n        /* \"#utility.yul\":14168:14267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14273:14580   */\n    tag_288:\n        /* \"#utility.yul\":14341:14342   */\n      0x00\n        /* \"#utility.yul\":14351:14464   */\n    tag_466:\n        /* \"#utility.yul\":14365:14371   */\n      dup4\n        /* \"#utility.yul\":14362:14363   */\n      dup2\n        /* \"#utility.yul\":14359:14372   */\n      lt\n        /* \"#utility.yul\":14351:14464   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":14450:14451   */\n      dup1\n        /* \"#utility.yul\":14445:14448   */\n      dup3\n        /* \"#utility.yul\":14441:14452   */\n      add\n        /* \"#utility.yul\":14435:14453   */\n      mload\n        /* \"#utility.yul\":14431:14432   */\n      dup2\n        /* \"#utility.yul\":14426:14429   */\n      dup5\n        /* \"#utility.yul\":14422:14433   */\n      add\n        /* \"#utility.yul\":14415:14454   */\n      mstore\n        /* \"#utility.yul\":14387:14389   */\n      0x20\n        /* \"#utility.yul\":14384:14385   */\n      dup2\n        /* \"#utility.yul\":14380:14390   */\n      add\n        /* \"#utility.yul\":14375:14390   */\n      swap1\n      pop\n        /* \"#utility.yul\":14351:14464   */\n      jump(tag_466)\n    tag_468:\n        /* \"#utility.yul\":14482:14488   */\n      dup4\n        /* \"#utility.yul\":14479:14480   */\n      dup2\n        /* \"#utility.yul\":14476:14489   */\n      gt\n        /* \"#utility.yul\":14473:14574   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":14562:14563   */\n      0x00\n        /* \"#utility.yul\":14553:14559   */\n      dup5\n        /* \"#utility.yul\":14548:14551   */\n      dup5\n        /* \"#utility.yul\":14544:14560   */\n      add\n        /* \"#utility.yul\":14537:14564   */\n      mstore\n        /* \"#utility.yul\":14473:14574   */\n    tag_469:\n        /* \"#utility.yul\":14322:14580   */\n      pop\n        /* \"#utility.yul\":14273:14580   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14586:14950   */\n    tag_289:\n        /* \"#utility.yul\":14674:14677   */\n      0x00\n        /* \"#utility.yul\":14702:14741   */\n      tag_471\n        /* \"#utility.yul\":14735:14740   */\n      dup3\n        /* \"#utility.yul\":14702:14741   */\n      tag_287\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14757:14828   */\n      tag_472\n        /* \"#utility.yul\":14821:14827   */\n      dup2\n        /* \"#utility.yul\":14816:14819   */\n      dup6\n        /* \"#utility.yul\":14757:14828   */\n      tag_280\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14750:14828   */\n      swap4\n      pop\n        /* \"#utility.yul\":14837:14889   */\n      tag_473\n        /* \"#utility.yul\":14882:14888   */\n      dup2\n        /* \"#utility.yul\":14877:14880   */\n      dup6\n        /* \"#utility.yul\":14870:14874   */\n      0x20\n        /* \"#utility.yul\":14863:14868   */\n      dup7\n        /* \"#utility.yul\":14859:14875   */\n      add\n        /* \"#utility.yul\":14837:14889   */\n      tag_288\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14914:14943   */\n      tag_474\n        /* \"#utility.yul\":14936:14942   */\n      dup2\n        /* \"#utility.yul\":14914:14943   */\n      tag_264\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14909:14912   */\n      dup5\n        /* \"#utility.yul\":14905:14944   */\n      add\n        /* \"#utility.yul\":14898:14944   */\n      swap2\n      pop\n        /* \"#utility.yul\":14678:14950   */\n      pop\n        /* \"#utility.yul\":14586:14950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14956:15379   */\n    tag_134:\n        /* \"#utility.yul\":15097:15101   */\n      0x00\n        /* \"#utility.yul\":15135:15137   */\n      0x40\n        /* \"#utility.yul\":15124:15133   */\n      dup3\n        /* \"#utility.yul\":15120:15138   */\n      add\n        /* \"#utility.yul\":15112:15138   */\n      swap1\n      pop\n        /* \"#utility.yul\":15148:15219   */\n      tag_476\n        /* \"#utility.yul\":15216:15217   */\n      0x00\n        /* \"#utility.yul\":15205:15214   */\n      dup4\n        /* \"#utility.yul\":15201:15218   */\n      add\n        /* \"#utility.yul\":15192:15198   */\n      dup6\n        /* \"#utility.yul\":15148:15219   */\n      tag_272\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15266:15275   */\n      dup2\n        /* \"#utility.yul\":15260:15264   */\n      dup2\n        /* \"#utility.yul\":15256:15276   */\n      sub\n        /* \"#utility.yul\":15251:15253   */\n      0x20\n        /* \"#utility.yul\":15240:15249   */\n      dup4\n        /* \"#utility.yul\":15236:15254   */\n      add\n        /* \"#utility.yul\":15229:15277   */\n      mstore\n        /* \"#utility.yul\":15294:15372   */\n      tag_477\n        /* \"#utility.yul\":15367:15371   */\n      dup2\n        /* \"#utility.yul\":15358:15364   */\n      dup5\n        /* \"#utility.yul\":15294:15372   */\n      tag_289\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15286:15372   */\n      swap1\n      pop\n        /* \"#utility.yul\":14956:15379   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15385:15528   */\n    tag_290:\n        /* \"#utility.yul\":15442:15447   */\n      0x00\n        /* \"#utility.yul\":15473:15479   */\n      dup2\n        /* \"#utility.yul\":15467:15480   */\n      mload\n        /* \"#utility.yul\":15458:15480   */\n      swap1\n      pop\n        /* \"#utility.yul\":15489:15522   */\n      tag_479\n        /* \"#utility.yul\":15516:15521   */\n      dup2\n        /* \"#utility.yul\":15489:15522   */\n      tag_247\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15385:15528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15534:15885   */\n    tag_138:\n        /* \"#utility.yul\":15604:15610   */\n      0x00\n        /* \"#utility.yul\":15653:15655   */\n      0x20\n        /* \"#utility.yul\":15641:15650   */\n      dup3\n        /* \"#utility.yul\":15632:15639   */\n      dup5\n        /* \"#utility.yul\":15628:15651   */\n      sub\n        /* \"#utility.yul\":15624:15656   */\n      slt\n        /* \"#utility.yul\":15621:15740   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":15659:15738   */\n      tag_482\n      tag_239\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15621:15740   */\n    tag_481:\n        /* \"#utility.yul\":15779:15780   */\n      0x00\n        /* \"#utility.yul\":15804:15868   */\n      tag_483\n        /* \"#utility.yul\":15860:15867   */\n      dup5\n        /* \"#utility.yul\":15851:15857   */\n      dup3\n        /* \"#utility.yul\":15840:15849   */\n      dup6\n        /* \"#utility.yul\":15836:15858   */\n      add\n        /* \"#utility.yul\":15804:15868   */\n      tag_290\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15794:15868   */\n      swap2\n      pop\n        /* \"#utility.yul\":15750:15878   */\n      pop\n        /* \"#utility.yul\":15534:15885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15891:16444   */\n    tag_140:\n        /* \"#utility.yul\":16068:16072   */\n      0x00\n        /* \"#utility.yul\":16106:16109   */\n      0x80\n        /* \"#utility.yul\":16095:16104   */\n      dup3\n        /* \"#utility.yul\":16091:16110   */\n      add\n        /* \"#utility.yul\":16083:16110   */\n      swap1\n      pop\n        /* \"#utility.yul\":16120:16191   */\n      tag_485\n        /* \"#utility.yul\":16188:16189   */\n      0x00\n        /* \"#utility.yul\":16177:16186   */\n      dup4\n        /* \"#utility.yul\":16173:16190   */\n      add\n        /* \"#utility.yul\":16164:16170   */\n      dup8\n        /* \"#utility.yul\":16120:16191   */\n      tag_272\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16201:16273   */\n      tag_486\n        /* \"#utility.yul\":16269:16271   */\n      0x20\n        /* \"#utility.yul\":16258:16267   */\n      dup4\n        /* \"#utility.yul\":16254:16272   */\n      add\n        /* \"#utility.yul\":16245:16251   */\n      dup7\n        /* \"#utility.yul\":16201:16273   */\n      tag_271\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16283:16355   */\n      tag_487\n        /* \"#utility.yul\":16351:16353   */\n      0x40\n        /* \"#utility.yul\":16340:16349   */\n      dup4\n        /* \"#utility.yul\":16336:16354   */\n      add\n        /* \"#utility.yul\":16327:16333   */\n      dup6\n        /* \"#utility.yul\":16283:16355   */\n      tag_272\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16365:16437   */\n      tag_488\n        /* \"#utility.yul\":16433:16435   */\n      0x60\n        /* \"#utility.yul\":16422:16431   */\n      dup4\n        /* \"#utility.yul\":16418:16436   */\n      add\n        /* \"#utility.yul\":16409:16415   */\n      dup5\n        /* \"#utility.yul\":16365:16437   */\n      tag_271\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":15891:16444   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16450:16536   */\n    tag_291:\n        /* \"#utility.yul\":16485:16492   */\n      0x00\n        /* \"#utility.yul\":16525:16529   */\n      0xff\n        /* \"#utility.yul\":16518:16523   */\n      dup3\n        /* \"#utility.yul\":16514:16530   */\n      and\n        /* \"#utility.yul\":16503:16530   */\n      swap1\n      pop\n        /* \"#utility.yul\":16450:16536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16542:16722   */\n    tag_292:\n        /* \"#utility.yul\":16590:16667   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16587:16588   */\n      0x00\n        /* \"#utility.yul\":16580:16668   */\n      mstore\n        /* \"#utility.yul\":16687:16691   */\n      0x12\n        /* \"#utility.yul\":16684:16685   */\n      0x04\n        /* \"#utility.yul\":16677:16692   */\n      mstore\n        /* \"#utility.yul\":16711:16715   */\n      0x24\n        /* \"#utility.yul\":16708:16709   */\n      0x00\n        /* \"#utility.yul\":16701:16716   */\n      revert\n        /* \"#utility.yul\":16728:16898   */\n    tag_159:\n        /* \"#utility.yul\":16758:16759   */\n      0x00\n        /* \"#utility.yul\":16775:16793   */\n      tag_492\n        /* \"#utility.yul\":16791:16792   */\n      dup3\n        /* \"#utility.yul\":16775:16793   */\n      tag_291\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16770:16793   */\n      swap2\n      pop\n        /* \"#utility.yul\":16807:16825   */\n      tag_493\n        /* \"#utility.yul\":16823:16824   */\n      dup4\n        /* \"#utility.yul\":16807:16825   */\n      tag_291\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":16802:16825   */\n      swap3\n      pop\n        /* \"#utility.yul\":16844:16845   */\n      dup3\n        /* \"#utility.yul\":16834:16869   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":16849:16867   */\n      tag_495\n      tag_292\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16834:16869   */\n    tag_494:\n        /* \"#utility.yul\":16890:16891   */\n      dup3\n        /* \"#utility.yul\":16887:16888   */\n      dup3\n        /* \"#utility.yul\":16883:16892   */\n      mod\n        /* \"#utility.yul\":16878:16892   */\n      swap1\n      pop\n        /* \"#utility.yul\":16728:16898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16904:17084   */\n    tag_293:\n        /* \"#utility.yul\":16952:17029   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16949:16950   */\n      0x00\n        /* \"#utility.yul\":16942:17030   */\n      mstore\n        /* \"#utility.yul\":17049:17053   */\n      0x11\n        /* \"#utility.yul\":17046:17047   */\n      0x04\n        /* \"#utility.yul\":17039:17054   */\n      mstore\n        /* \"#utility.yul\":17073:17077   */\n      0x24\n        /* \"#utility.yul\":17070:17071   */\n      0x00\n        /* \"#utility.yul\":17063:17078   */\n      revert\n        /* \"#utility.yul\":17090:17192   */\n    tag_294:\n        /* \"#utility.yul\":17132:17140   */\n      0x00\n        /* \"#utility.yul\":17179:17184   */\n      dup2\n        /* \"#utility.yul\":17176:17177   */\n      0x01\n        /* \"#utility.yul\":17172:17185   */\n      shr\n        /* \"#utility.yul\":17151:17185   */\n      swap1\n      pop\n        /* \"#utility.yul\":17090:17192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17198:18046   */\n    tag_295:\n        /* \"#utility.yul\":17259:17264   */\n      0x00\n        /* \"#utility.yul\":17266:17270   */\n      dup1\n        /* \"#utility.yul\":17290:17296   */\n      dup3\n        /* \"#utility.yul\":17281:17296   */\n      swap2\n      pop\n        /* \"#utility.yul\":17314:17319   */\n      dup4\n        /* \"#utility.yul\":17305:17319   */\n      swap1\n      pop\n        /* \"#utility.yul\":17328:18040   */\n    tag_499:\n        /* \"#utility.yul\":17349:17350   */\n      0x01\n        /* \"#utility.yul\":17339:17347   */\n      dup6\n        /* \"#utility.yul\":17336:17351   */\n      gt\n        /* \"#utility.yul\":17328:18040   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":17444:17448   */\n      dup1\n        /* \"#utility.yul\":17439:17442   */\n      dup7\n        /* \"#utility.yul\":17435:17449   */\n      div\n        /* \"#utility.yul\":17429:17433   */\n      dup2\n        /* \"#utility.yul\":17426:17450   */\n      gt\n        /* \"#utility.yul\":17423:17473   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":17453:17471   */\n      tag_503\n      tag_293\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":17423:17473   */\n    tag_502:\n        /* \"#utility.yul\":17503:17504   */\n      0x01\n        /* \"#utility.yul\":17493:17501   */\n      dup6\n        /* \"#utility.yul\":17489:17505   */\n      and\n        /* \"#utility.yul\":17486:17937   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":17918:17922   */\n      dup1\n        /* \"#utility.yul\":17911:17916   */\n      dup3\n        /* \"#utility.yul\":17907:17923   */\n      mul\n        /* \"#utility.yul\":17898:17923   */\n      swap2\n      pop\n        /* \"#utility.yul\":17486:17937   */\n    tag_504:\n        /* \"#utility.yul\":17968:17972   */\n      dup1\n        /* \"#utility.yul\":17962:17966   */\n      dup2\n        /* \"#utility.yul\":17958:17973   */\n      mul\n        /* \"#utility.yul\":17950:17973   */\n      swap1\n      pop\n        /* \"#utility.yul\":17998:18030   */\n      tag_505\n        /* \"#utility.yul\":18021:18029   */\n      dup6\n        /* \"#utility.yul\":17998:18030   */\n      tag_294\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17986:18030   */\n      swap5\n      pop\n        /* \"#utility.yul\":17328:18040   */\n      jump(tag_499)\n    tag_501:\n        /* \"#utility.yul\":17198:18046   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18052:19125   */\n    tag_296:\n        /* \"#utility.yul\":18106:18111   */\n      0x00\n        /* \"#utility.yul\":18297:18305   */\n      dup3\n        /* \"#utility.yul\":18287:18327   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":18318:18319   */\n      0x01\n        /* \"#utility.yul\":18309:18319   */\n      swap1\n      pop\n        /* \"#utility.yul\":18320:18325   */\n      jump(tag_506)\n        /* \"#utility.yul\":18287:18327   */\n    tag_507:\n        /* \"#utility.yul\":18346:18350   */\n      dup2\n        /* \"#utility.yul\":18336:18372   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":18363:18364   */\n      0x00\n        /* \"#utility.yul\":18354:18364   */\n      swap1\n      pop\n        /* \"#utility.yul\":18365:18370   */\n      jump(tag_506)\n        /* \"#utility.yul\":18336:18372   */\n    tag_508:\n        /* \"#utility.yul\":18432:18436   */\n      dup2\n        /* \"#utility.yul\":18480:18481   */\n      0x01\n        /* \"#utility.yul\":18475:18502   */\n      dup2\n      eq\n      tag_510\n      jumpi\n        /* \"#utility.yul\":18516:18517   */\n      0x02\n        /* \"#utility.yul\":18511:18702   */\n      dup2\n      eq\n      tag_511\n      jumpi\n        /* \"#utility.yul\":18425:18702   */\n      jump(tag_509)\n        /* \"#utility.yul\":18475:18502   */\n    tag_510:\n        /* \"#utility.yul\":18493:18494   */\n      0x01\n        /* \"#utility.yul\":18484:18494   */\n      swap2\n      pop\n        /* \"#utility.yul\":18495:18500   */\n      pop\n      jump(tag_506)\n        /* \"#utility.yul\":18511:18702   */\n    tag_511:\n        /* \"#utility.yul\":18556:18559   */\n      0xff\n        /* \"#utility.yul\":18546:18554   */\n      dup5\n        /* \"#utility.yul\":18543:18560   */\n      gt\n        /* \"#utility.yul\":18540:18583   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":18563:18581   */\n      tag_513\n      tag_293\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":18540:18583   */\n    tag_512:\n        /* \"#utility.yul\":18612:18620   */\n      dup4\n        /* \"#utility.yul\":18609:18610   */\n      0x02\n        /* \"#utility.yul\":18605:18621   */\n      exp\n        /* \"#utility.yul\":18596:18621   */\n      swap2\n      pop\n        /* \"#utility.yul\":18647:18650   */\n      dup5\n        /* \"#utility.yul\":18640:18645   */\n      dup3\n        /* \"#utility.yul\":18637:18651   */\n      gt\n        /* \"#utility.yul\":18634:18674   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":18654:18672   */\n      tag_515\n      tag_293\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18634:18674   */\n    tag_514:\n        /* \"#utility.yul\":18687:18692   */\n      pop\n      jump(tag_506)\n        /* \"#utility.yul\":18425:18702   */\n    tag_509:\n      pop\n        /* \"#utility.yul\":18811:18813   */\n      0x20\n        /* \"#utility.yul\":18801:18809   */\n      dup4\n        /* \"#utility.yul\":18798:18814   */\n      lt\n        /* \"#utility.yul\":18792:18795   */\n      0x0133\n        /* \"#utility.yul\":18786:18790   */\n      dup4\n        /* \"#utility.yul\":18783:18796   */\n      lt\n        /* \"#utility.yul\":18779:18815   */\n      and\n        /* \"#utility.yul\":18761:18763   */\n      0x4e\n        /* \"#utility.yul\":18751:18759   */\n      dup5\n        /* \"#utility.yul\":18748:18764   */\n      lt\n        /* \"#utility.yul\":18743:18745   */\n      0x0b\n        /* \"#utility.yul\":18737:18741   */\n      dup5\n        /* \"#utility.yul\":18734:18746   */\n      lt\n        /* \"#utility.yul\":18730:18765   */\n      and\n        /* \"#utility.yul\":18714:18825   */\n      or\n        /* \"#utility.yul\":18711:18957   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":18867:18875   */\n      dup3\n        /* \"#utility.yul\":18861:18865   */\n      dup3\n        /* \"#utility.yul\":18857:18876   */\n      exp\n        /* \"#utility.yul\":18848:18876   */\n      swap1\n      pop\n        /* \"#utility.yul\":18902:18905   */\n      dup4\n        /* \"#utility.yul\":18895:18900   */\n      dup2\n        /* \"#utility.yul\":18892:18906   */\n      gt\n        /* \"#utility.yul\":18889:18929   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":18909:18927   */\n      tag_518\n      tag_293\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":18889:18929   */\n    tag_517:\n        /* \"#utility.yul\":18942:18947   */\n      jump(tag_506)\n        /* \"#utility.yul\":18711:18957   */\n    tag_516:\n        /* \"#utility.yul\":18982:19024   */\n      tag_519\n        /* \"#utility.yul\":19020:19023   */\n      dup5\n        /* \"#utility.yul\":19010:19018   */\n      dup5\n        /* \"#utility.yul\":19004:19008   */\n      dup5\n        /* \"#utility.yul\":19001:19002   */\n      0x01\n        /* \"#utility.yul\":18982:19024   */\n      tag_295\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":18967:19024   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":19056:19060   */\n      dup2\n        /* \"#utility.yul\":19051:19054   */\n      dup5\n        /* \"#utility.yul\":19047:19061   */\n      div\n        /* \"#utility.yul\":19040:19045   */\n      dup2\n        /* \"#utility.yul\":19037:19062   */\n      gt\n        /* \"#utility.yul\":19034:19085   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":19065:19083   */\n      tag_521\n      tag_293\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":19034:19085   */\n    tag_520:\n        /* \"#utility.yul\":19114:19118   */\n      dup2\n        /* \"#utility.yul\":19107:19112   */\n      dup2\n        /* \"#utility.yul\":19103:19119   */\n      mul\n        /* \"#utility.yul\":19094:19119   */\n      swap1\n      pop\n        /* \"#utility.yul\":18052:19125   */\n    tag_506:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19131:19412   */\n    tag_163:\n        /* \"#utility.yul\":19189:19194   */\n      0x00\n        /* \"#utility.yul\":19213:19236   */\n      tag_523\n        /* \"#utility.yul\":19231:19235   */\n      dup3\n        /* \"#utility.yul\":19213:19236   */\n      tag_246\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19205:19236   */\n      swap2\n      pop\n        /* \"#utility.yul\":19257:19282   */\n      tag_524\n        /* \"#utility.yul\":19273:19281   */\n      dup4\n        /* \"#utility.yul\":19257:19282   */\n      tag_291\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":19245:19282   */\n      swap3\n      pop\n        /* \"#utility.yul\":19301:19405   */\n      tag_525\n        /* \"#utility.yul\":19338:19404   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19328:19336   */\n      dup5\n        /* \"#utility.yul\":19322:19326   */\n      dup5\n        /* \"#utility.yul\":19301:19405   */\n      tag_296\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":19292:19405   */\n      swap1\n      pop\n        /* \"#utility.yul\":19131:19412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19418:19598   */\n    tag_166:\n        /* \"#utility.yul\":19466:19543   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19463:19464   */\n      0x00\n        /* \"#utility.yul\":19456:19544   */\n      mstore\n        /* \"#utility.yul\":19563:19567   */\n      0x32\n        /* \"#utility.yul\":19560:19561   */\n      0x04\n        /* \"#utility.yul\":19553:19568   */\n      mstore\n        /* \"#utility.yul\":19587:19591   */\n      0x24\n        /* \"#utility.yul\":19584:19585   */\n      0x00\n        /* \"#utility.yul\":19577:19592   */\n      revert\n        /* \"#utility.yul\":19604:19952   */\n    tag_168:\n        /* \"#utility.yul\":19644:19651   */\n      0x00\n        /* \"#utility.yul\":19667:19687   */\n      tag_528\n        /* \"#utility.yul\":19685:19686   */\n      dup3\n        /* \"#utility.yul\":19667:19687   */\n      tag_246\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19662:19687   */\n      swap2\n      pop\n        /* \"#utility.yul\":19701:19721   */\n      tag_529\n        /* \"#utility.yul\":19719:19720   */\n      dup4\n        /* \"#utility.yul\":19701:19721   */\n      tag_246\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":19696:19721   */\n      swap3\n      pop\n        /* \"#utility.yul\":19889:19890   */\n      dup2\n        /* \"#utility.yul\":19821:19887   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19817:19891   */\n      div\n        /* \"#utility.yul\":19814:19815   */\n      dup4\n        /* \"#utility.yul\":19811:19892   */\n      gt\n        /* \"#utility.yul\":19806:19807   */\n      dup3\n        /* \"#utility.yul\":19799:19808   */\n      iszero\n        /* \"#utility.yul\":19792:19809   */\n      iszero\n        /* \"#utility.yul\":19788:19893   */\n      and\n        /* \"#utility.yul\":19785:19916   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":19896:19914   */\n      tag_531\n      tag_293\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":19785:19916   */\n    tag_530:\n        /* \"#utility.yul\":19944:19945   */\n      dup3\n        /* \"#utility.yul\":19941:19942   */\n      dup3\n        /* \"#utility.yul\":19937:19946   */\n      mul\n        /* \"#utility.yul\":19926:19946   */\n      swap1\n      pop\n        /* \"#utility.yul\":19604:19952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19958:20137   */\n    tag_170:\n        /* \"#utility.yul\":19996:19997   */\n      0x00\n        /* \"#utility.yul\":20013:20031   */\n      tag_533\n        /* \"#utility.yul\":20029:20030   */\n      dup3\n        /* \"#utility.yul\":20013:20031   */\n      tag_291\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":20008:20031   */\n      swap2\n      pop\n        /* \"#utility.yul\":20045:20063   */\n      tag_534\n        /* \"#utility.yul\":20061:20062   */\n      dup4\n        /* \"#utility.yul\":20045:20063   */\n      tag_291\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":20040:20063   */\n      swap3\n      pop\n        /* \"#utility.yul\":20082:20083   */\n      dup3\n        /* \"#utility.yul\":20072:20107   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":20087:20105   */\n      tag_536\n      tag_292\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20072:20107   */\n    tag_535:\n        /* \"#utility.yul\":20129:20130   */\n      dup3\n        /* \"#utility.yul\":20126:20127   */\n      dup3\n        /* \"#utility.yul\":20122:20131   */\n      div\n        /* \"#utility.yul\":20117:20131   */\n      swap1\n      pop\n        /* \"#utility.yul\":19958:20137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20143:20448   */\n    tag_174:\n        /* \"#utility.yul\":20183:20186   */\n      0x00\n        /* \"#utility.yul\":20202:20222   */\n      tag_538\n        /* \"#utility.yul\":20220:20221   */\n      dup3\n        /* \"#utility.yul\":20202:20222   */\n      tag_246\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":20197:20222   */\n      swap2\n      pop\n        /* \"#utility.yul\":20236:20256   */\n      tag_539\n        /* \"#utility.yul\":20254:20255   */\n      dup4\n        /* \"#utility.yul\":20236:20256   */\n      tag_246\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":20231:20256   */\n      swap3\n      pop\n        /* \"#utility.yul\":20390:20391   */\n      dup3\n        /* \"#utility.yul\":20322:20388   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20318:20392   */\n      sub\n        /* \"#utility.yul\":20315:20316   */\n      dup3\n        /* \"#utility.yul\":20312:20393   */\n      gt\n        /* \"#utility.yul\":20309:20416   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":20396:20414   */\n      tag_541\n      tag_293\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20309:20416   */\n    tag_540:\n        /* \"#utility.yul\":20440:20441   */\n      dup3\n        /* \"#utility.yul\":20437:20438   */\n      dup3\n        /* \"#utility.yul\":20433:20442   */\n      add\n        /* \"#utility.yul\":20426:20442   */\n      swap1\n      pop\n        /* \"#utility.yul\":20143:20448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20454:20621   */\n    tag_179:\n        /* \"#utility.yul\":20491:20494   */\n      0x00\n        /* \"#utility.yul\":20514:20536   */\n      tag_543\n        /* \"#utility.yul\":20530:20535   */\n      dup3\n        /* \"#utility.yul\":20514:20536   */\n      tag_291\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20505:20536   */\n      swap2\n      pop\n        /* \"#utility.yul\":20558:20562   */\n      0xff\n        /* \"#utility.yul\":20551:20556   */\n      dup3\n        /* \"#utility.yul\":20548:20563   */\n      sub\n        /* \"#utility.yul\":20545:20586   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":20566:20584   */\n      tag_545\n      tag_293\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":20545:20586   */\n    tag_544:\n        /* \"#utility.yul\":20613:20614   */\n      0x01\n        /* \"#utility.yul\":20606:20611   */\n      dup3\n        /* \"#utility.yul\":20602:20615   */\n      add\n        /* \"#utility.yul\":20595:20615   */\n      swap1\n      pop\n        /* \"#utility.yul\":20454:20621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20627:20959   */\n    tag_189:\n        /* \"#utility.yul\":20748:20752   */\n      0x00\n        /* \"#utility.yul\":20786:20788   */\n      0x40\n        /* \"#utility.yul\":20775:20784   */\n      dup3\n        /* \"#utility.yul\":20771:20789   */\n      add\n        /* \"#utility.yul\":20763:20789   */\n      swap1\n      pop\n        /* \"#utility.yul\":20799:20870   */\n      tag_547\n        /* \"#utility.yul\":20867:20868   */\n      0x00\n        /* \"#utility.yul\":20856:20865   */\n      dup4\n        /* \"#utility.yul\":20852:20869   */\n      add\n        /* \"#utility.yul\":20843:20849   */\n      dup6\n        /* \"#utility.yul\":20799:20870   */\n      tag_272\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":20880:20952   */\n      tag_548\n        /* \"#utility.yul\":20948:20950   */\n      0x20\n        /* \"#utility.yul\":20937:20946   */\n      dup4\n        /* \"#utility.yul\":20933:20951   */\n      add\n        /* \"#utility.yul\":20924:20930   */\n      dup5\n        /* \"#utility.yul\":20880:20952   */\n      tag_271\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":20627:20959   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20965:21113   */\n    tag_297:\n        /* \"#utility.yul\":21067:21078   */\n      0x00\n        /* \"#utility.yul\":21104:21107   */\n      dup2\n        /* \"#utility.yul\":21089:21107   */\n      swap1\n      pop\n        /* \"#utility.yul\":20965:21113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21119:21292   */\n    tag_298:\n        /* \"#utility.yul\":21259:21284   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":21255:21256   */\n      0x00\n        /* \"#utility.yul\":21247:21253   */\n      dup3\n        /* \"#utility.yul\":21243:21257   */\n      add\n        /* \"#utility.yul\":21236:21285   */\n      mstore\n        /* \"#utility.yul\":21119:21292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21298:21700   */\n    tag_299:\n        /* \"#utility.yul\":21458:21461   */\n      0x00\n        /* \"#utility.yul\":21479:21564   */\n      tag_552\n        /* \"#utility.yul\":21561:21563   */\n      0x17\n        /* \"#utility.yul\":21556:21559   */\n      dup4\n        /* \"#utility.yul\":21479:21564   */\n      tag_297\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":21472:21564   */\n      swap2\n      pop\n        /* \"#utility.yul\":21573:21666   */\n      tag_553\n        /* \"#utility.yul\":21662:21665   */\n      dup3\n        /* \"#utility.yul\":21573:21666   */\n      tag_298\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21691:21693   */\n      0x17\n        /* \"#utility.yul\":21686:21689   */\n      dup3\n        /* \"#utility.yul\":21682:21694   */\n      add\n        /* \"#utility.yul\":21675:21694   */\n      swap1\n      pop\n        /* \"#utility.yul\":21298:21700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21706:22083   */\n    tag_300:\n        /* \"#utility.yul\":21812:21815   */\n      0x00\n        /* \"#utility.yul\":21840:21879   */\n      tag_555\n        /* \"#utility.yul\":21873:21878   */\n      dup3\n        /* \"#utility.yul\":21840:21879   */\n      tag_287\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":21895:21984   */\n      tag_556\n        /* \"#utility.yul\":21977:21983   */\n      dup2\n        /* \"#utility.yul\":21972:21975   */\n      dup6\n        /* \"#utility.yul\":21895:21984   */\n      tag_297\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":21888:21984   */\n      swap4\n      pop\n        /* \"#utility.yul\":21993:22045   */\n      tag_557\n        /* \"#utility.yul\":22038:22044   */\n      dup2\n        /* \"#utility.yul\":22033:22036   */\n      dup6\n        /* \"#utility.yul\":22026:22030   */\n      0x20\n        /* \"#utility.yul\":22019:22024   */\n      dup7\n        /* \"#utility.yul\":22015:22031   */\n      add\n        /* \"#utility.yul\":21993:22045   */\n      tag_288\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":22070:22076   */\n      dup1\n        /* \"#utility.yul\":22065:22068   */\n      dup5\n        /* \"#utility.yul\":22061:22077   */\n      add\n        /* \"#utility.yul\":22054:22077   */\n      swap2\n      pop\n        /* \"#utility.yul\":21816:22083   */\n      pop\n        /* \"#utility.yul\":21706:22083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22089:22256   */\n    tag_301:\n        /* \"#utility.yul\":22229:22248   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":22225:22226   */\n      0x00\n        /* \"#utility.yul\":22217:22223   */\n      dup3\n        /* \"#utility.yul\":22213:22227   */\n      add\n        /* \"#utility.yul\":22206:22249   */\n      mstore\n        /* \"#utility.yul\":22089:22256   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22262:22664   */\n    tag_302:\n        /* \"#utility.yul\":22422:22425   */\n      0x00\n        /* \"#utility.yul\":22443:22528   */\n      tag_560\n        /* \"#utility.yul\":22525:22527   */\n      0x11\n        /* \"#utility.yul\":22520:22523   */\n      dup4\n        /* \"#utility.yul\":22443:22528   */\n      tag_297\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":22436:22528   */\n      swap2\n      pop\n        /* \"#utility.yul\":22537:22630   */\n      tag_561\n        /* \"#utility.yul\":22626:22629   */\n      dup3\n        /* \"#utility.yul\":22537:22630   */\n      tag_301\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":22655:22657   */\n      0x11\n        /* \"#utility.yul\":22650:22653   */\n      dup3\n        /* \"#utility.yul\":22646:22658   */\n      add\n        /* \"#utility.yul\":22639:22658   */\n      swap1\n      pop\n        /* \"#utility.yul\":22262:22664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22670:23637   */\n    tag_202:\n        /* \"#utility.yul\":23052:23055   */\n      0x00\n        /* \"#utility.yul\":23074:23222   */\n      tag_563\n        /* \"#utility.yul\":23218:23221   */\n      dup3\n        /* \"#utility.yul\":23074:23222   */\n      tag_299\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":23067:23222   */\n      swap2\n      pop\n        /* \"#utility.yul\":23239:23334   */\n      tag_564\n        /* \"#utility.yul\":23330:23333   */\n      dup3\n        /* \"#utility.yul\":23321:23327   */\n      dup6\n        /* \"#utility.yul\":23239:23334   */\n      tag_300\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":23232:23334   */\n      swap2\n      pop\n        /* \"#utility.yul\":23351:23499   */\n      tag_565\n        /* \"#utility.yul\":23495:23498   */\n      dup3\n        /* \"#utility.yul\":23351:23499   */\n      tag_302\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":23344:23499   */\n      swap2\n      pop\n        /* \"#utility.yul\":23516:23611   */\n      tag_566\n        /* \"#utility.yul\":23607:23610   */\n      dup3\n        /* \"#utility.yul\":23598:23604   */\n      dup5\n        /* \"#utility.yul\":23516:23611   */\n      tag_300\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":23509:23611   */\n      swap2\n      pop\n        /* \"#utility.yul\":23628:23631   */\n      dup2\n        /* \"#utility.yul\":23621:23631   */\n      swap1\n      pop\n        /* \"#utility.yul\":22670:23637   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23643:23956   */\n    tag_204:\n        /* \"#utility.yul\":23756:23760   */\n      0x00\n        /* \"#utility.yul\":23794:23796   */\n      0x20\n        /* \"#utility.yul\":23783:23792   */\n      dup3\n        /* \"#utility.yul\":23779:23797   */\n      add\n        /* \"#utility.yul\":23771:23797   */\n      swap1\n      pop\n        /* \"#utility.yul\":23843:23852   */\n      dup2\n        /* \"#utility.yul\":23837:23841   */\n      dup2\n        /* \"#utility.yul\":23833:23853   */\n      sub\n        /* \"#utility.yul\":23829:23830   */\n      0x00\n        /* \"#utility.yul\":23818:23827   */\n      dup4\n        /* \"#utility.yul\":23814:23831   */\n      add\n        /* \"#utility.yul\":23807:23854   */\n      mstore\n        /* \"#utility.yul\":23871:23949   */\n      tag_568\n        /* \"#utility.yul\":23944:23948   */\n      dup2\n        /* \"#utility.yul\":23935:23941   */\n      dup5\n        /* \"#utility.yul\":23871:23949   */\n      tag_289\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":23863:23949   */\n      swap1\n      pop\n        /* \"#utility.yul\":23643:23956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23962:24133   */\n    tag_234:\n        /* \"#utility.yul\":24001:24004   */\n      0x00\n        /* \"#utility.yul\":24024:24048   */\n      tag_570\n        /* \"#utility.yul\":24042:24047   */\n      dup3\n        /* \"#utility.yul\":24024:24048   */\n      tag_246\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":24015:24048   */\n      swap2\n      pop\n        /* \"#utility.yul\":24070:24074   */\n      0x00\n        /* \"#utility.yul\":24063:24068   */\n      dup3\n        /* \"#utility.yul\":24060:24075   */\n      sub\n        /* \"#utility.yul\":24057:24098   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":24078:24096   */\n      tag_572\n      tag_293\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":24057:24098   */\n    tag_571:\n        /* \"#utility.yul\":24125:24126   */\n      0x01\n        /* \"#utility.yul\":24118:24123   */\n      dup3\n        /* \"#utility.yul\":24114:24127   */\n      sub\n        /* \"#utility.yul\":24107:24127   */\n      swap1\n      pop\n        /* \"#utility.yul\":23962:24133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24139:24321   */\n    tag_303:\n        /* \"#utility.yul\":24279:24313   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":24275:24276   */\n      0x00\n        /* \"#utility.yul\":24267:24273   */\n      dup3\n        /* \"#utility.yul\":24263:24277   */\n      add\n        /* \"#utility.yul\":24256:24314   */\n      mstore\n        /* \"#utility.yul\":24139:24321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24327:24693   */\n    tag_304:\n        /* \"#utility.yul\":24469:24472   */\n      0x00\n        /* \"#utility.yul\":24490:24557   */\n      tag_575\n        /* \"#utility.yul\":24554:24556   */\n      0x20\n        /* \"#utility.yul\":24549:24552   */\n      dup4\n        /* \"#utility.yul\":24490:24557   */\n      tag_280\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":24483:24557   */\n      swap2\n      pop\n        /* \"#utility.yul\":24566:24659   */\n      tag_576\n        /* \"#utility.yul\":24655:24658   */\n      dup3\n        /* \"#utility.yul\":24566:24659   */\n      tag_303\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":24684:24686   */\n      0x20\n        /* \"#utility.yul\":24679:24682   */\n      dup3\n        /* \"#utility.yul\":24675:24687   */\n      add\n        /* \"#utility.yul\":24668:24687   */\n      swap1\n      pop\n        /* \"#utility.yul\":24327:24693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24699:25118   */\n    tag_237:\n        /* \"#utility.yul\":24865:24869   */\n      0x00\n        /* \"#utility.yul\":24903:24905   */\n      0x20\n        /* \"#utility.yul\":24892:24901   */\n      dup3\n        /* \"#utility.yul\":24888:24906   */\n      add\n        /* \"#utility.yul\":24880:24906   */\n      swap1\n      pop\n        /* \"#utility.yul\":24952:24961   */\n      dup2\n        /* \"#utility.yul\":24946:24950   */\n      dup2\n        /* \"#utility.yul\":24942:24962   */\n      sub\n        /* \"#utility.yul\":24938:24939   */\n      0x00\n        /* \"#utility.yul\":24927:24936   */\n      dup4\n        /* \"#utility.yul\":24923:24940   */\n      add\n        /* \"#utility.yul\":24916:24963   */\n      mstore\n        /* \"#utility.yul\":24980:25111   */\n      tag_578\n        /* \"#utility.yul\":25106:25110   */\n      dup2\n        /* \"#utility.yul\":24980:25111   */\n      tag_304\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":24972:25111   */\n      swap1\n      pop\n        /* \"#utility.yul\":24699:25118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220073d8ebd9969f34f36d43d7d5a1b5f9435296db7326ade07f0a6b7544a171d8964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1105": {
									"entryPoint": null,
									"id": 1105,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_275": {
									"entryPoint": 325,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_615": {
									"entryPoint": 673,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_216": {
									"entryPoint": 303,
									"id": 216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 566,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:14"
															},
															"nodeType": "YulIf",
															"src": "949:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:14",
														"type": ""
													}
												],
												"src": "845:507:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405268056bc75e2d631000006004553480156200001e57600080fd5b50604051620021f3380380620021f3833981810160405281019062000044919062000313565b60008060006101000a81548160ff02191690831515021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000f56000801b336200012f60201b60201c565b620001277f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a336200012f60201b60201c565b50506200035a565b6200014182826200014560201b60201c565b5050565b6200015782826200023660201b60201c565b6200023257600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001d7620002a160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002db82620002ae565b9050919050565b620002ed81620002ce565b8114620002f957600080fd5b50565b6000815190506200030d81620002e2565b92915050565b600080604083850312156200032d576200032c620002a9565b5b60006200033d85828601620002fc565b92505060206200035085828601620002fc565b9150509250929050565b611e89806200036a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806391d14854116100a2578063d547741f11610071578063d547741f146102b8578063dd23faf3146102d4578063e63ab1e914610304578063f3fef3a314610322578063f400fde41461033e5761010b565b806391d1485414610230578063945099bc14610260578063a217fddf1461027c578063c60982561461029a5761010b565b806336568abe116100de57806336568abe146101a857806352c6159f146101c45780635c975abb146101e2578063841acc5d146102005761010b565b806301ffc9a7146101105780630a1ac65714610140578063248a9ca31461015c5780632f2ff15d1461018c575b600080fd5b61012a600480360381019061012591906110f0565b61035c565b6040516101379190611138565b60405180910390f35b61015a60048036038101906101559190611189565b6103d6565b005b610176600480360381019061017191906111ec565b61049d565b6040516101839190611228565b60405180910390f35b6101a660048036038101906101a191906112a1565b6104bd565b005b6101c260048036038101906101bd91906112a1565b6104e6565b005b6101cc610569565b6040516101d99190611340565b60405180910390f35b6101ea61058f565b6040516101f79190611138565b60405180910390f35b61021a600480360381019061021591906114a1565b6105a5565b60405161022791906114f9565b60405180910390f35b61024a600480360381019061024591906112a1565b610809565b6040516102579190611138565b60405180910390f35b61027a60048036038101906102759190611514565b610874565b005b6102846108d6565b6040516102919190611228565b60405180910390f35b6102a26108dd565b6040516102af9190611563565b60405180910390f35b6102d260048036038101906102cd91906112a1565b610903565b005b6102ee60048036038101906102e991906111ec565b61092c565b6040516102fb9190611629565b60405180910390f35b61030c610a10565b6040516103199190611228565b60405180910390f35b61033c60048036038101906103379190611514565b610a34565b005b610346610b4e565b60405161035391906114f9565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cf57506103ce82610b54565b5b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040161043191906114f9565b600060405180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b505050507f950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c18160405161049291906114f9565b60405180910390a150565b600060016000838152602001908152602001600020600101549050919050565b6104c68261049d565b6104d7816104d2610bbe565b610bc6565b6104e18383610c63565b505050565b6104ee610bbe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461055b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610552906116c8565b60405180910390fd5b6105658282610d43565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900460ff16905090565b60006105af61058f565b156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690611734565b60405180910390fd5b60006004541180156106505750600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156106fb57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306004546040518463ffffffff1660e01b81526004016106b693929190611754565b6020604051808303816000875af11580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f991906117b7565b505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d204c45e33856040518363ffffffff1660e01b815260040161075a92919061185b565b6020604051808303816000875af1158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d91906118a0565b90507f9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d3382600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004546040516107f894939291906118cd565b60405180910390a180915050919050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b61088981610884610bbe565b610bc6565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600481905550505050565b6000801b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61090c8261049d565b61091d81610918610bbe565b610bc6565b6109278383610d43565b505050565b610934611061565b60005b60208160ff161015610a0a576000600282610952919061194e565b60ff1614610961576000610964565b60015b6101006109719190611ae1565b838260ff166020811061098757610986611b2c565b5b1a60f81b60f81c60ff1661099b9190611b5b565b826002836109a99190611bb5565b60ff16601081106109bd576109bc611b2c565b5b60200201516109cc9190611be6565b826002836109da9190611bb5565b60ff16601081106109ee576109ed611b2c565b5b6020020181815250508080610a0290611c3c565b915050610937565b50919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000801b610a4981610a44610bbe565b610bc6565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac9573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ac3573d6000803e3d6000fd5b50610b49565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b04929190611c65565b6020604051808303816000875af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4791906117b7565b505b505050565b60045481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610bd08282610809565b610c5f57610bf58173ffffffffffffffffffffffffffffffffffffffff166014610e25565b610c038360001c6020610e25565b604051602001610c14929190611d62565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c569190611d9c565b60405180910390fd5b5050565b610c6d8282610809565b610d3f57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ce4610bbe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610d4d8282610809565b15610e215760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610dc6610bbe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b606060006002836002610e389190611b5b565b610e429190611be6565b67ffffffffffffffff811115610e5b57610e5a611376565b5b6040519080825280601f01601f191660200182016040528015610e8d5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610ec557610ec4611b2c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f2957610f28611b2c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610f699190611b5b565b610f739190611be6565b90505b6001811115611013577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610fb557610fb4611b2c565b5b1a60f81b828281518110610fcc57610fcb611b2c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061100c90611dbe565b9050610f76565b5060008414611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e90611e33565b60405180910390fd5b8091505092915050565b604051806102000160405280601090602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110cd81611098565b81146110d857600080fd5b50565b6000813590506110ea816110c4565b92915050565b6000602082840312156111065761110561108e565b5b6000611114848285016110db565b91505092915050565b60008115159050919050565b6111328161111d565b82525050565b600060208201905061114d6000830184611129565b92915050565b6000819050919050565b61116681611153565b811461117157600080fd5b50565b6000813590506111838161115d565b92915050565b60006020828403121561119f5761119e61108e565b5b60006111ad84828501611174565b91505092915050565b6000819050919050565b6111c9816111b6565b81146111d457600080fd5b50565b6000813590506111e6816111c0565b92915050565b6000602082840312156112025761120161108e565b5b6000611210848285016111d7565b91505092915050565b611222816111b6565b82525050565b600060208201905061123d6000830184611219565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126e82611243565b9050919050565b61127e81611263565b811461128957600080fd5b50565b60008135905061129b81611275565b92915050565b600080604083850312156112b8576112b761108e565b5b60006112c6858286016111d7565b92505060206112d78582860161128c565b9150509250929050565b6000819050919050565b60006113066113016112fc84611243565b6112e1565b611243565b9050919050565b6000611318826112eb565b9050919050565b600061132a8261130d565b9050919050565b61133a8161131f565b82525050565b60006020820190506113556000830184611331565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113ae82611365565b810181811067ffffffffffffffff821117156113cd576113cc611376565b5b80604052505050565b60006113e0611084565b90506113ec82826113a5565b919050565b600067ffffffffffffffff82111561140c5761140b611376565b5b61141582611365565b9050602081019050919050565b82818337600083830152505050565b600061144461143f846113f1565b6113d6565b9050828152602081018484840111156114605761145f611360565b5b61146b848285611422565b509392505050565b600082601f8301126114885761148761135b565b5b8135611498848260208601611431565b91505092915050565b6000602082840312156114b7576114b661108e565b5b600082013567ffffffffffffffff8111156114d5576114d4611093565b5b6114e184828501611473565b91505092915050565b6114f381611153565b82525050565b600060208201905061150e60008301846114ea565b92915050565b6000806040838503121561152b5761152a61108e565b5b60006115398582860161128c565b925050602061154a85828601611174565b9150509250929050565b61155d81611263565b82525050565b60006020820190506115786000830184611554565b92915050565b600060109050919050565b600081905092915050565b6000819050919050565b6115a781611153565b82525050565b60006115b9838361159e565b60208301905092915050565b6000602082019050919050565b6115db8161157e565b6115e58184611589565b92506115f082611594565b8060005b8381101561162157815161160887826115ad565b9650611613836115c5565b9250506001810190506115f4565b505050505050565b60006102008201905061163f60008301846115d2565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006116b2602f83611645565b91506116bd82611656565b604082019050919050565b600060208201905081810360008301526116e1816116a5565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061171e601083611645565b9150611729826116e8565b602082019050919050565b6000602082019050818103600083015261174d81611711565b9050919050565b60006060820190506117696000830186611554565b6117766020830185611554565b61178360408301846114ea565b949350505050565b6117948161111d565b811461179f57600080fd5b50565b6000815190506117b18161178b565b92915050565b6000602082840312156117cd576117cc61108e565b5b60006117db848285016117a2565b91505092915050565b600081519050919050565b60005b8381101561180d5780820151818401526020810190506117f2565b8381111561181c576000848401525b50505050565b600061182d826117e4565b6118378185611645565b93506118478185602086016117ef565b61185081611365565b840191505092915050565b60006040820190506118706000830185611554565b81810360208301526118828184611822565b90509392505050565b60008151905061189a8161115d565b92915050565b6000602082840312156118b6576118b561108e565b5b60006118c48482850161188b565b91505092915050565b60006080820190506118e26000830187611554565b6118ef60208301866114ea565b6118fc6040830185611554565b61190960608301846114ea565b95945050505050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195982611912565b915061196483611912565b9250826119745761197361191f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115611a05578086048111156119e1576119e061197f565b5b60018516156119f05780820291505b80810290506119fe856119ae565b94506119c5565b94509492505050565b600082611a1e5760019050611ada565b81611a2c5760009050611ada565b8160018114611a425760028114611a4c57611a7b565b6001915050611ada565b60ff841115611a5e57611a5d61197f565b5b8360020a915084821115611a7557611a7461197f565b5b50611ada565b5060208310610133831016604e8410600b8410161715611ab05782820a905083811115611aab57611aaa61197f565b5b611ada565b611abd84848460016119bb565b92509050818404811115611ad457611ad361197f565b5b81810290505b9392505050565b6000611aec82611153565b9150611af783611912565b9250611b247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a0e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b6682611153565b9150611b7183611153565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611baa57611ba961197f565b5b828202905092915050565b6000611bc082611912565b9150611bcb83611912565b925082611bdb57611bda61191f565b5b828204905092915050565b6000611bf182611153565b9150611bfc83611153565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c3157611c3061197f565b5b828201905092915050565b6000611c4782611912565b915060ff8203611c5a57611c5961197f565b5b600182019050919050565b6000604082019050611c7a6000830185611554565b611c8760208301846114ea565b9392505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611ccf601783611c8e565b9150611cda82611c99565b601782019050919050565b6000611cf0826117e4565b611cfa8185611c8e565b9350611d0a8185602086016117ef565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611d4c601183611c8e565b9150611d5782611d16565b601182019050919050565b6000611d6d82611cc2565b9150611d798285611ce5565b9150611d8482611d3f565b9150611d908284611ce5565b91508190509392505050565b60006020820190508181036000830152611db68184611822565b905092915050565b6000611dc982611153565b915060008203611ddc57611ddb61197f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611e1d602083611645565b9150611e2882611de7565b602082019050919050565b60006020820190508181036000830152611e4c81611e10565b905091905056fea2646970667358221220073d8ebd9969f34f36d43d7d5a1b5f9435296db7326ade07f0a6b7544a171d8964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x21F3 CODESIZE SUB DUP1 PUSH3 0x21F3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x44 SWAP2 SWAP1 PUSH3 0x313 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xF5 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x127 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH3 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x35A JUMP JUMPDEST PUSH3 0x141 DUP3 DUP3 PUSH3 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x157 DUP3 DUP3 PUSH3 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x232 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1D7 PUSH3 0x2A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DB DUP3 PUSH3 0x2AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2ED DUP2 PUSH3 0x2CE JUMP JUMPDEST DUP2 EQ PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x30D DUP2 PUSH3 0x2E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x32D JUMPI PUSH3 0x32C PUSH3 0x2A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x33D DUP6 DUP3 DUP7 ADD PUSH3 0x2FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x350 DUP6 DUP3 DUP7 ADD PUSH3 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E89 DUP1 PUSH3 0x36A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xDD23FAF3 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0x33E JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x945099BC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xC6098256 EQ PUSH2 0x29A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x52C6159F EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x841ACC5D EQ PUSH2 0x200 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA1AC657 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CF JUMPI POP PUSH2 0x3CE DUP3 PUSH2 0xB54 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x950DCD4A7087BBF2CEE08268E1B26AC45FB310D3AE443D0FE53714B713DA45C1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 DUP3 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x4D7 DUP2 PUSH2 0x4D2 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x4E1 DUP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0xBBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH2 0xD43 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AF PUSH2 0x58F JUMP JUMPDEST ISZERO PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT DUP1 ISZERO PUSH2 0x650 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x6FB JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD204C45E CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75A SWAP3 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x779 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST SWAP1 POP PUSH32 0x9E6E3ACB506BF1D2ADB1D8565252E575763EE07D1DEBFCC2C830682895B3137D CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x7F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x889 DUP2 PUSH2 0x884 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x90C DUP3 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x91D DUP2 PUSH2 0x918 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x927 DUP4 DUP4 PUSH2 0xD43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x934 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0x961 JUMPI PUSH1 0x0 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100 PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST DUP4 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x987 JUMPI PUSH2 0x986 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH2 0x99B SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0x9BD JUMPI PUSH2 0x9BC PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xA02 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x937 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xA49 DUP2 PUSH2 0xA44 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC9 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xB49 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP3 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBD0 DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xC5F JUMPI PUSH2 0xBF5 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0xC03 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC14 SWAP3 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC6D DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xD3F JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE4 PUSH2 0xBBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD4D DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDC6 PUSH2 0xBBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5A PUSH2 0x1376 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1013 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x100C SWAP1 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 POP PUSH2 0xF76 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x200 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0x1098 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EA DUP2 PUSH2 0x10C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1114 DUP5 DUP3 DUP6 ADD PUSH2 0x10DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1132 DUP2 PUSH2 0x111D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP2 EQ PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1183 DUP2 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH2 0x119E PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP5 DUP3 DUP6 ADD PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C9 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E6 DUP2 PUSH2 0x11C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1210 DUP5 DUP3 DUP6 ADD PUSH2 0x11D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126E DUP3 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127E DUP2 PUSH2 0x1263 JUMP JUMPDEST DUP2 EQ PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129B DUP2 PUSH2 0x1275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B8 JUMPI PUSH2 0x12B7 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C6 DUP6 DUP3 DUP7 ADD PUSH2 0x11D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D7 DUP6 DUP3 DUP7 ADD PUSH2 0x128C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1306 PUSH2 0x1301 PUSH2 0x12FC DUP5 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1318 DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132A DUP3 PUSH2 0x130D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x131F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1355 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x13AE DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13CD JUMPI PUSH2 0x13CC PUSH2 0x1376 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E0 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP PUSH2 0x13EC DUP3 DUP3 PUSH2 0x13A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140C JUMPI PUSH2 0x140B PUSH2 0x1376 JUMP JUMPDEST JUMPDEST PUSH2 0x1415 DUP3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1444 PUSH2 0x143F DUP5 PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x1360 JUMP JUMPDEST JUMPDEST PUSH2 0x146B DUP5 DUP3 DUP6 PUSH2 0x1422 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x135B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1498 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D4 PUSH2 0x1093 JUMP JUMPDEST JUMPDEST PUSH2 0x14E1 DUP5 DUP3 DUP6 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F3 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1539 DUP6 DUP3 DUP7 ADD PUSH2 0x128C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x154A DUP6 DUP3 DUP7 ADD PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x1263 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1578 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A7 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP4 DUP4 PUSH2 0x159E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x15E5 DUP2 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP3 POP PUSH2 0x15F0 DUP3 PUSH2 0x1594 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1621 JUMPI DUP2 MLOAD PUSH2 0x1608 DUP8 DUP3 PUSH2 0x15AD JUMP JUMPDEST SWAP7 POP PUSH2 0x1613 DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15F4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x163F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B2 PUSH1 0x2F DUP4 PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BD DUP3 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16E1 DUP2 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171E PUSH1 0x10 DUP4 PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP PUSH2 0x1729 DUP3 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174D DUP2 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1769 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1776 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1783 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x111D JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17B1 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP5 DUP3 DUP6 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x180D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17F2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x1837 DUP2 DUP6 PUSH2 0x1645 JUMP JUMPDEST SWAP4 POP PUSH2 0x1847 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x1850 DUP2 PUSH2 0x1365 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1870 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1882 DUP2 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x189A DUP2 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH2 0x18B5 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP5 DUP3 DUP6 ADD PUSH2 0x188B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18E2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x18EF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x18FC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1909 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1959 DUP3 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x191F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1A05 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x19F0 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x19FE DUP6 PUSH2 0x19AE JUMP JUMPDEST SWAP5 POP PUSH2 0x19C5 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A1E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1ADA JUMP JUMPDEST DUP2 PUSH2 0x1A2C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1ADA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A42 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A4C JUMPI PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1ADA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5D PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1A75 JUMPI PUSH2 0x1A74 PUSH2 0x197F JUMP JUMPDEST JUMPDEST POP PUSH2 0x1ADA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1AB0 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x1AAA PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH2 0x1ADA JUMP JUMPDEST PUSH2 0x1ABD DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF7 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP PUSH2 0x1B24 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B71 DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1BAA JUMPI PUSH2 0x1BA9 PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC0 DUP3 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCB DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BDB JUMPI PUSH2 0x1BDA PUSH2 0x191F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF1 DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFC DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 DUP3 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x1C5A JUMPI PUSH2 0x1C59 PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1C87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCF PUSH1 0x17 DUP4 PUSH2 0x1C8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x1CFA DUP2 DUP6 PUSH2 0x1C8E JUMP JUMPDEST SWAP4 POP PUSH2 0x1D0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17EF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4C PUSH1 0x11 DUP4 PUSH2 0x1C8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D57 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6D DUP3 PUSH2 0x1CC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D79 DUP3 DUP6 PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D84 DUP3 PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D90 DUP3 DUP5 PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC9 DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D PUSH1 0x20 DUP4 PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E28 DUP3 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4C DUP2 PUSH2 0x1E10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD RETURNDATASIZE DUP15 0xBD SWAP10 PUSH10 0xF34F36D43D7D5A1B5F94 CALLDATALOAD 0x29 PUSH14 0xB7326ADE07F0A6B7544A171D8964 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "292:2224:10:-:0;;;557:6;532:31;;815:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;927:5:9;917:7;;:15;;;;;;;;;;;;;;;;;;905:5:10;889:4;;:22;;;;;;;;;;;;;;;;;;928:5;921:4;;:12;;;;;;;;;;;;;;;;;;943:42;1962:4:0;954:18:10;;974:10;943;;;:42;;:::i;:::-;995:35;477:24;1019:10;995;;;:35;;:::i;:::-;815:222;;292:2224;;6049:110:0;6127:25;6138:4;6144:7;6127:10;;;:25;;:::i;:::-;6049:110;;:::o;6537:224::-;6611:22;6619:4;6625:7;6611;;;:22;;:::i;:::-;6606:149;;6681:4;6649:6;:12;6656:4;6649:12;;;;;;;;;;;:20;;:29;6670:7;6649:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6731:12;:10;;;:12;;:::i;:::-;6704:40;;6722:7;6704:40;;6716:4;6704:40;;;;;;;;;;6606:149;6537:224;;:::o;2799:137::-;2877:4;2900:6;:12;2907:4;2900:12;;;;;;;;;;;:20;;:29;2921:7;2900:29;;;;;;;;;;;;;;;;;;;;;;;;;2893:36;;2799:137;;;;:::o;587:96:2:-;640:7;666:10;659:17;;587:96;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;292:2224:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 2262,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1048": {
									"entryPoint": 2576,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SQFi_1043": {
									"entryPoint": 1385,
									"id": 1043,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_124": {
									"entryPoint": 3014,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_275": {
									"entryPoint": 3171,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_615": {
									"entryPoint": 3006,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_305": {
									"entryPoint": 3395,
									"id": 305,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@amount1_1053": {
									"entryPoint": 2894,
									"id": 1053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bytes32ToAmount16_1158": {
									"entryPoint": 2348,
									"id": 1158,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createSQFI_1231": {
									"entryPoint": 1445,
									"id": 1231,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@editSupportedFee_1177": {
									"entryPoint": 2164,
									"id": 1177,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@fee1_1050": {
									"entryPoint": 2269,
									"id": 1050,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_139": {
									"entryPoint": 1181,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_159": {
									"entryPoint": 1213,
									"id": 159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 2057,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_964": {
									"entryPoint": 1423,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_202": {
									"entryPoint": 1254,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_179": {
									"entryPoint": 2307,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_62": {
									"entryPoint": 860,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_648": {
									"entryPoint": 2900,
									"id": 648,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2024": {
									"entryPoint": 3621,
									"id": 2024,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uncraft_1247": {
									"entryPoint": 982,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1285": {
									"entryPoint": 2612,
									"id": 1285,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5169,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5972,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$16_memory_ptr__to_t_array$_t_uint256_$16_memory_ptr__fromStack_reversed": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISQFItem_$840__to_t_address__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$16_memory_ptr": {
									"entryPoint": 5524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$16_memory_ptr": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$16_memory_ptr": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint8": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISQFItem_$840_to_t_address": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint8": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 5864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25121:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:14",
														"type": ""
													}
												],
												"src": "1518:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:14"
															},
															"nodeType": "YulIf",
															"src": "1654:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:14",
														"type": ""
													}
												],
												"src": "1601:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:14",
														"type": ""
													}
												],
												"src": "1729:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:14"
															},
															"nodeType": "YulIf",
															"src": "1950:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:14",
														"type": ""
													}
												],
												"src": "1874:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2275:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2236:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2246:7:14",
														"type": ""
													}
												],
												"src": "2209:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2335:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2392:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2394:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2394:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2358:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2383:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2365:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2365:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2355:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:43:14"
															},
															"nodeType": "YulIf",
															"src": "2345:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2328:5:14",
														"type": ""
													}
												],
												"src": "2292:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2472:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2482:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2504:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2491:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2482:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2520:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2520:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2450:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2458:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2466:5:14",
														"type": ""
													}
												],
												"src": "2420:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2677:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:32:14"
															},
															"nodeType": "YulIf",
															"src": "2641:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2770:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2799:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2814:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2849:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2860:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2845:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2845:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2869:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2824:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2814:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2601:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2612:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2624:6:14",
														"type": ""
													}
												],
												"src": "2565:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2965:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2982:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3005:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2987:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2987:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2975:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2953:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2960:3:14",
														"type": ""
													}
												],
												"src": "2900:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3122:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3132:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3144:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3140:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3132:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3212:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3225:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3236:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3221:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3168:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3094:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3106:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3117:4:14",
														"type": ""
													}
												],
												"src": "3024:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3297:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3307:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3329:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3307:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3279:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3289:7:14",
														"type": ""
													}
												],
												"src": "3252:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3429:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3439:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3450:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3439:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3411:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3421:7:14",
														"type": ""
													}
												],
												"src": "3384:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3529:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3586:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3595:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3598:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3588:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3588:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3552:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3577:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3559:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3559:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3549:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:43:14"
															},
															"nodeType": "YulIf",
															"src": "3539:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3522:5:14",
														"type": ""
													}
												],
												"src": "3486:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3666:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3741:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3714:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3660:5:14",
														"type": ""
													}
												],
												"src": "3614:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3842:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3888:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3890:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3890:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3890:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3863:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3872:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:32:14"
															},
															"nodeType": "YulIf",
															"src": "3852:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3981:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3996:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4000:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4025:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4060:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4071:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4056:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4056:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4080:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4035:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4035:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4025:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4108:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4123:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4127:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4153:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3804:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3815:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3827:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3835:6:14",
														"type": ""
													}
												],
												"src": "3759:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4271:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4281:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4288:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4257:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4267:3:14",
														"type": ""
													}
												],
												"src": "4239:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4415:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4415:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4406:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4406:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4388:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4375:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4345:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4355:9:14",
														"type": ""
													}
												],
												"src": "4305:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4513:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4523:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4567:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4536:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4523:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4503:9:14",
														"type": ""
													}
												],
												"src": "4453:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4671:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4715:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4684:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4671:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISQFItem_$840_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4641:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4651:9:14",
														"type": ""
													}
												],
												"src": "4585:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4814:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4831:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4883:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISQFItem_$840_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4836:46:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4836:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4824:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4824:66:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4824:66:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4802:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4809:3:14",
														"type": ""
													}
												],
												"src": "4733:163:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5016:140:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5026:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5038:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5026:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5122:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5062:59:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:87:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5062:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISQFItem_$840__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4988:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5000:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5011:4:14",
														"type": ""
													}
												],
												"src": "4902:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5268:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5271:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5261:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5162:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5374:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5391:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5384:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5285:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5484:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5491:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5480:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5480:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5500:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5439:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5449:6:14",
														"type": ""
													}
												],
												"src": "5408:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5544:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5561:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5564:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5554:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5658:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5661:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5651:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5651:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5675:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5675:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5675:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5516:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5755:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5777:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5807:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5785:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5785:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5773:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5759:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5924:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5926:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5926:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5926:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5867:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5879:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5864:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5903:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5900:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5861:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:62:14"
															},
															"nodeType": "YulIf",
															"src": "5858:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5966:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5955:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5731:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5739:4:14",
														"type": ""
													}
												],
												"src": "5702:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6030:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6040:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6050:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6040:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6099:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6107:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6079:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6079:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6014:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6023:6:14",
														"type": ""
													}
												],
												"src": "5989:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6191:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6298:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6268:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6276:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6265:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:30:14"
															},
															"nodeType": "YulIf",
															"src": "6262:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6328:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6358:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6336:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6336:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6328:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6402:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6414:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6420:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6410:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6402:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6175:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6186:4:14",
														"type": ""
													}
												],
												"src": "6124:308:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6489:103:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6512:3:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6517:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6522:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6499:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6499:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6570:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6575:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6566:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6566:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6584:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6559:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6559:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6471:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6476:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6481:6:14",
														"type": ""
													}
												],
												"src": "6438:154:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6682:328:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6692:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6717:41:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6717:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6701:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6701:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6692:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6783:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6776:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6776:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6776:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6806:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6821:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6828:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6817:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6810:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6871:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6873:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6873:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6873:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6852:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6857:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6848:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6848:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6866:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6845:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:25:14"
															},
															"nodeType": "YulIf",
															"src": "6842:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6987:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6992:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6997:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6963:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6963:41:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6655:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6660:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6668:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6676:5:14",
														"type": ""
													}
												],
												"src": "6598:412:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:278:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7141:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7143:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7143:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7143:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7120:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7128:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7116:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7116:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7135:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7112:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:35:14"
															},
															"nodeType": "YulIf",
															"src": "7102:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7233:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7260:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7247:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7237:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7276:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7337:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7345:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7333:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7333:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7352:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7360:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7285:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7276:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7070:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7078:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7086:5:14",
														"type": ""
													}
												],
												"src": "7030:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7452:433:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7498:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7500:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7500:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7500:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7473:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7482:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7469:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7469:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7494:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7465:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7465:32:14"
															},
															"nodeType": "YulIf",
															"src": "7462:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "7591:287:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7606:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7637:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7648:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7633:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7633:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7620:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7620:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7610:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7698:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7700:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7700:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7700:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7670:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7678:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7667:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7667:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "7664:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7795:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7840:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7851:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7836:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7836:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7860:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7805:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7805:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7795:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7422:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7433:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7445:6:14",
														"type": ""
													}
												],
												"src": "7376:509:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7956:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7973:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7996:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7978:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7978:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7944:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7951:3:14",
														"type": ""
													}
												],
												"src": "7891:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8113:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8123:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8135:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8146:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8203:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8216:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8227:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8212:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8212:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8159:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8159:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8085:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8097:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8108:4:14",
														"type": ""
													}
												],
												"src": "8015:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8326:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8372:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8374:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8374:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8374:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8347:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8356:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8368:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8339:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8339:32:14"
															},
															"nodeType": "YulIf",
															"src": "8336:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "8465:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8480:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8494:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8484:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8509:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8544:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8555:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8540:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8540:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8564:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8519:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8519:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8509:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8592:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8607:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8621:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8611:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8637:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8672:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8683:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8668:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8668:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8692:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8647:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8647:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8637:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8288:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8299:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8311:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8319:6:14",
														"type": ""
													}
												],
												"src": "8243:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8788:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8805:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8828:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8810:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8810:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8798:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8798:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8798:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8776:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8783:3:14",
														"type": ""
													}
												],
												"src": "8723:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8945:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8955:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8967:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8978:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8963:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8955:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9035:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9048:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9059:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9044:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9044:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8991:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8991:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8991:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8917:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8929:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8940:4:14",
														"type": ""
													}
												],
												"src": "8847:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9148:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9159:14:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9169:4:14",
																"type": "",
																"value": "0x10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$16_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9131:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9141:6:14",
														"type": ""
													}
												],
												"src": "9075:105:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9296:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9306:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9321:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9306:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9268:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9273:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9284:11:14",
														"type": ""
													}
												],
												"src": "9186:144:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9407:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9417:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9425:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9417:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$16_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9394:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9402:4:14",
														"type": ""
													}
												],
												"src": "9336:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9496:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9513:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9536:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9518:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9518:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9506:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9506:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9506:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9484:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9491:3:14",
														"type": ""
													}
												],
												"src": "9441:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9635:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9679:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9687:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9645:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9645:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9645:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9700:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9718:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9723:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9714:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9700:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9608:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9616:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9624:10:14",
														"type": ""
													}
												],
												"src": "9555:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9814:38:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9824:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9836:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9841:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9832:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9824:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$16_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9801:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9809:4:14",
														"type": ""
													}
												],
												"src": "9740:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10006:586:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10016:67:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10077:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$16_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10030:46:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:53:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10020:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10092:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10172:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10177:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10099:72:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10099:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10092:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10193:70:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10257:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$16_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10208:48:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10208:55:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10197:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10272:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10286:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10276:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10362:223:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10376:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10403:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10397:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10397:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10380:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10423:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10474:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10489:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10430:43:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10430:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10423:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10506:69:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10568:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$16_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10516:51:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10516:59:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10506:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10324:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10327:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10321:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10321:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10335:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10337:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10346:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10349:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10342:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10342:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10337:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10306:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10308:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10317:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10312:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10302:283:14"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9993:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10000:3:14",
														"type": ""
													}
												],
												"src": "9892:700:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10744:173:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10754:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10766:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10777:3:14",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10762:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10762:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10754:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10883:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10896:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10907:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10892:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10892:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10791:91:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10791:119:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10791:119:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$16_memory_ptr__to_t_array$_t_uint256_$16_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10716:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10728:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10739:4:14",
														"type": ""
													}
												],
												"src": "10598:319:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11019:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11036:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11041:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11029:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11029:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11029:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11057:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11076:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11081:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11072:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11072:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11057:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10991:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10996:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11007:11:14",
														"type": ""
													}
												],
												"src": "10923:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11204:128:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11226:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11234:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11222:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11222:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11238:34:14",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11215:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11215:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11215:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11294:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11290:15:14"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11307:17:14",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11283:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11283:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11196:6:14",
														"type": ""
													}
												],
												"src": "11098:234:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11484:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11494:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11560:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:2:14",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11501:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11501:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11494:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11666:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "11577:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11577:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11577:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11679:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11690:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11695:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11686:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11679:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11472:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11480:3:14",
														"type": ""
													}
												],
												"src": "11338:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11881:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11891:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11903:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11914:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11899:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11899:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11891:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11938:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11949:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11934:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11934:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11957:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11963:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11953:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11953:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11927:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11927:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11927:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11983:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12117:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11991:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11983:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11861:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11876:4:14",
														"type": ""
													}
												],
												"src": "11710:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12241:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12263:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12271:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12259:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12259:14:14"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12275:18:14",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12252:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12252:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12252:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12233:6:14",
														"type": ""
													}
												],
												"src": "12135:166:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12453:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12463:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12529:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12534:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12470:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12470:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12463:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12635:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "12546:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12546:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12648:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12659:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12664:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12655:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12655:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12648:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12441:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12449:3:14",
														"type": ""
													}
												],
												"src": "12307:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12850:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12860:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12872:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12883:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12868:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12868:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12860:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12907:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12918:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12903:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12903:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12926:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12932:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12922:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12922:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12896:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12896:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12896:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12952:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13086:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12960:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12960:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12952:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12830:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12845:4:14",
														"type": ""
													}
												],
												"src": "12679:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13258:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13268:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13280:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13291:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13276:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13276:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13268:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13348:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13361:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13372:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13357:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13357:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13304:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13304:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13429:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13442:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13453:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13438:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13438:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13385:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13385:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13385:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13511:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13524:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13535:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13467:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13467:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13467:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13214:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13226:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13234:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13242:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13253:4:14",
														"type": ""
													}
												],
												"src": "13104:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13592:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13646:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13655:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13658:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13648:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13648:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13648:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13615:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13637:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13622:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13622:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13612:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13612:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13605:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13605:40:14"
															},
															"nodeType": "YulIf",
															"src": "13602:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13585:5:14",
														"type": ""
													}
												],
												"src": "13552:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13734:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13744:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13759:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13753:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13753:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13744:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13799:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "13775:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13712:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13720:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13728:5:14",
														"type": ""
													}
												],
												"src": "13674:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13891:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13937:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13939:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13939:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13939:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13912:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13921:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13908:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13908:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13933:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13904:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:32:14"
															},
															"nodeType": "YulIf",
															"src": "13901:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "14030:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14045:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14059:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14049:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14074:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14117:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14128:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14113:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14113:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14137:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14084:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14084:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14074:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13861:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13872:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13884:6:14",
														"type": ""
													}
												],
												"src": "13817:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14227:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14238:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14254:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14248:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14248:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14238:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14210:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14220:6:14",
														"type": ""
													}
												],
												"src": "14168:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14322:258:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14332:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14341:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14336:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14401:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14426:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14431:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14422:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14422:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14445:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14450:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14441:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14441:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14435:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14435:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14415:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14415:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14415:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14362:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14365:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14359:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14359:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14373:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14375:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14384:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14387:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14380:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14380:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14375:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14355:3:14",
																"statements": []
															},
															"src": "14351:113:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14498:76:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14548:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14553:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14544:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14544:16:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14562:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14537:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14537:27:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14537:27:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14479:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14482:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14476:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14476:13:14"
															},
															"nodeType": "YulIf",
															"src": "14473:101:14"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14304:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14309:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14314:6:14",
														"type": ""
													}
												],
												"src": "14273:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14678:272:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14688:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14735:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14702:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14702:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14692:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14750:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14816:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14821:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14757:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14757:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14863:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14870:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14859:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14859:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14877:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14882:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14837:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14837:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14837:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14898:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14909:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14936:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14914:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14914:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14905:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14905:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14898:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14659:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14666:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14674:3:14",
														"type": ""
													}
												],
												"src": "14586:364:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15102:277:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15112:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15124:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15135:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15120:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15120:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15112:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15192:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15205:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15216:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15201:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15201:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15148:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15240:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15251:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15236:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15236:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15260:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15266:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15256:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15256:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15229:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15229:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15229:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15286:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15358:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15367:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15294:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15294:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15286:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15066:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15078:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15086:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15097:4:14",
														"type": ""
													}
												],
												"src": "14956:423:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15448:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15458:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15473:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15467:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15467:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15458:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15516:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15489:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15489:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15489:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15426:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15434:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15442:5:14",
														"type": ""
													}
												],
												"src": "15385:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15611:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15657:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15659:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15659:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15659:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15632:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15641:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15628:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15628:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15653:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15624:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:32:14"
															},
															"nodeType": "YulIf",
															"src": "15621:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "15750:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15765:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15779:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15769:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15794:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15840:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15851:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15836:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15836:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15860:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15804:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15804:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15794:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15581:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15592:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15604:6:14",
														"type": ""
													}
												],
												"src": "15534:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16073:371:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16083:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16095:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16106:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16091:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16091:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16083:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16164:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16177:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16188:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16173:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16173:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16120:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16120:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16120:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16245:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16258:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16269:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16254:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16201:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16201:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16201:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16327:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16340:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16351:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16336:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16336:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16283:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16283:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16283:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16409:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16422:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16433:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16418:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16418:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16365:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16365:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16365:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16021:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16033:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16041:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16049:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16057:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16068:4:14",
														"type": ""
													}
												],
												"src": "15891:553:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16493:43:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16503:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16518:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16525:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16514:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16514:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16503:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16475:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16485:7:14",
														"type": ""
													}
												],
												"src": "16450:86:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16570:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16587:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16590:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16580:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16580:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16580:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16684:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16687:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16677:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16677:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16677:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16708:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16711:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16701:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16701:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16701:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16542:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16760:138:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16770:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16791:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "16775:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16775:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16770:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16802:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16823:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "16807:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16807:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16802:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16847:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16849:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16849:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16849:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16844:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16837:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16837:9:14"
															},
															"nodeType": "YulIf",
															"src": "16834:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16878:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16887:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16890:1:14"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "16883:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16883:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16878:1:14"
																}
															]
														}
													]
												},
												"name": "mod_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16749:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16752:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16758:1:14",
														"type": ""
													}
												],
												"src": "16728:170:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16932:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16949:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16952:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16942:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16942:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16942:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17046:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17049:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17039:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17039:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17039:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17070:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17073:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17063:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17063:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17063:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16904:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17141:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17151:34:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17176:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17179:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17172:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17172:13:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17151:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17122:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17132:8:14",
														"type": ""
													}
												],
												"src": "17090:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17271:775:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17281:15:14",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "17290:6:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17281:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17305:14:14",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "17314:5:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17305:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17363:677:14",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17451:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "17453:16:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17453:18:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17453:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17429:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "17439:3:14"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "17444:4:14"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "17435:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17435:14:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "17426:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17426:24:14"
																		},
																		"nodeType": "YulIf",
																		"src": "17423:50:14"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17518:419:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "17898:25:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "17911:5:14"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "17918:4:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "17907:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17907:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "17898:5:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17493:8:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17503:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "17489:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17489:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "17486:451:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17950:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17962:4:14"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17968:4:14"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "17958:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17958:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "17950:4:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17986:44:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "18021:8:14"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "17998:22:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17998:32:14"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "17986:8:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17339:8:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17349:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17336:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17336:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17352:2:14",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17332:3:14",
																"statements": []
															},
															"src": "17328:712:14"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "17226:6:14",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "17234:5:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17241:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "17251:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17259:5:14",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17266:4:14",
														"type": ""
													}
												],
												"src": "17198:848:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18112:1013:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18307:20:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18309:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18318:1:14",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18309:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18320:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18297:8:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18290:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18290:16:14"
															},
															"nodeType": "YulIf",
															"src": "18287:40:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18352:20:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18354:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18363:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18354:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18365:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18346:4:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18339:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18339:12:14"
															},
															"nodeType": "YulIf",
															"src": "18336:36:14"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18482:20:14",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "18484:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18493:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "18484:5:14"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "18495:5:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18475:27:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18480:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18526:176:14",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18561:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "18563:16:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18563:18:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18563:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "18546:8:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18556:3:14",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "18543:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18543:17:14"
																				},
																				"nodeType": "YulIf",
																				"src": "18540:43:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "18596:25:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18609:1:14",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "18612:8:14"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "18605:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18605:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "18596:5:14"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "18652:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "18654:16:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18654:18:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "18654:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "18640:5:14"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "18647:3:14"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "18637:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18637:14:14"
																				},
																				"nodeType": "YulIf",
																				"src": "18634:40:14"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "18687:5:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18511:191:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18516:1:14",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "18432:4:14"
															},
															"nodeType": "YulSwitch",
															"src": "18425:277:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18834:123:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18848:28:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "18861:4:14"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "18867:8:14"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "18857:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18857:19:14"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18848:5:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "18907:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "18909:16:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18909:18:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18909:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "18895:5:14"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "18902:3:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "18892:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18892:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "18889:40:14"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18942:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "18737:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18743:2:14",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18734:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18734:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "18751:8:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18761:2:14",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18748:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18748:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18730:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18730:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "18786:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18792:3:14",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18783:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18783:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "18801:8:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18811:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "18798:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18798:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18779:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18779:36:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18714:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18714:111:14"
															},
															"nodeType": "YulIf",
															"src": "18711:246:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18967:57:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19001:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19004:4:14"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19010:8:14"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "19020:3:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "18982:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18982:42:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18967:5:14"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "18974:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19063:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19065:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19065:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19065:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "19040:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "19051:3:14"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "19056:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "19047:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19047:14:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19037:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19037:25:14"
															},
															"nodeType": "YulIf",
															"src": "19034:51:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19094:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "19107:5:14"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19114:4:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19103:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19103:16:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19094:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "18082:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "18088:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "18098:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "18106:5:14",
														"type": ""
													}
												],
												"src": "18052:1073:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19195:217:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19205:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19231:4:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19213:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19213:23:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "19205:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19245:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19273:8:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "19257:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19257:25:14"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "19245:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19292:113:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19322:4:14"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19328:8:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19338:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "19301:20:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19301:104:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19292:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "19170:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "19176:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "19189:5:14",
														"type": ""
													}
												],
												"src": "19131:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19446:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19463:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19466:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19456:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19456:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19456:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19560:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19563:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19553:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19553:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19553:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19584:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19587:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19577:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19577:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19577:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "19418:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19652:300:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19662:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19685:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19667:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19667:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19662:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19696:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19719:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19701:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19701:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19696:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19894:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19896:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19896:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19896:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19806:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19799:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19799:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19792:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19792:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19814:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19821:66:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19889:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "19817:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19817:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19811:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19811:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19788:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19788:105:14"
															},
															"nodeType": "YulIf",
															"src": "19785:131:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19926:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19941:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19944:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19937:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19937:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19926:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19635:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19638:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19644:7:14",
														"type": ""
													}
												],
												"src": "19604:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19998:139:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20008:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20029:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20013:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20013:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20008:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20040:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20061:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20045:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20045:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20040:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20085:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20087:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20087:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20087:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20082:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20075:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20075:9:14"
															},
															"nodeType": "YulIf",
															"src": "20072:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20117:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20126:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20129:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20122:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20122:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20117:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19987:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19990:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19996:1:14",
														"type": ""
													}
												],
												"src": "19958:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20187:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20197:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20220:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20202:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20202:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20197:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20231:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20254:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20236:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20236:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20231:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20394:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20396:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20396:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20396:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20315:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20322:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20390:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20318:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20318:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20312:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20312:81:14"
															},
															"nodeType": "YulIf",
															"src": "20309:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20426:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20437:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20440:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20433:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20433:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20426:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20174:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20177:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20183:3:14",
														"type": ""
													}
												],
												"src": "20143:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20495:126:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20505:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20530:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20514:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20514:22:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20505:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20564:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20566:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20566:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20566:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20551:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20558:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20548:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20548:15:14"
															},
															"nodeType": "YulIf",
															"src": "20545:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20595:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20606:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20613:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20602:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20602:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20595:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20481:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20491:3:14",
														"type": ""
													}
												],
												"src": "20454:167:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20753:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20763:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20775:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20786:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20771:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20771:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20763:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20843:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20856:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20867:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20852:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20852:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20799:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20799:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20799:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20924:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20937:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20948:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20933:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20933:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20880:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20880:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20880:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20717:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20729:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20737:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20748:4:14",
														"type": ""
													}
												],
												"src": "20627:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21079:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21089:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21104:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21089:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21051:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21056:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21067:11:14",
														"type": ""
													}
												],
												"src": "20965:148:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21225:67:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21247:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21255:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21243:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21243:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21259:25:14",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21236:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21236:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21236:49:14"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21217:6:14",
														"type": ""
													}
												],
												"src": "21119:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21462:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21472:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21556:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21561:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21479:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21479:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21472:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21662:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "21573:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21573:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21573:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21675:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21686:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21691:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21682:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21682:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21675:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21450:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21458:3:14",
														"type": ""
													}
												],
												"src": "21298:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21816:267:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21826:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21873:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21840:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21840:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21830:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21888:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21972:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21977:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21895:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21895:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21888:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22019:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22026:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22015:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22015:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22033:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22038:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "21993:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21993:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21993:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22054:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22065:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22070:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22061:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22061:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22054:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21797:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21804:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21812:3:14",
														"type": ""
													}
												],
												"src": "21706:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22195:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22217:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22225:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22213:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22213:14:14"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22229:19:14",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22206:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22206:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22206:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22187:6:14",
														"type": ""
													}
												],
												"src": "22089:167:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22426:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22436:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22520:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22525:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22443:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22443:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22436:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22626:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "22537:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22537:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22537:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22639:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22650:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22655:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22646:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22646:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22639:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22414:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22422:3:14",
														"type": ""
													}
												],
												"src": "22262:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23056:581:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23067:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23218:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23074:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23074:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23067:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23232:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23321:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23330:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23239:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23239:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23232:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23344:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23495:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23351:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23351:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23344:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23509:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23598:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23607:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23516:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23516:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23509:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23621:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23628:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23621:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23027:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23033:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23041:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23052:3:14",
														"type": ""
													}
												],
												"src": "22670:967:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23761:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23771:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23783:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23794:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23779:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23779:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23771:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23818:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23829:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23814:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23814:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23837:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23843:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23833:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23833:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23807:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23807:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23807:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23863:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23935:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23944:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23871:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23871:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23863:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23733:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23745:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23756:4:14",
														"type": ""
													}
												],
												"src": "23643:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24005:128:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24015:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24042:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24024:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24024:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24015:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24076:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24078:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24078:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24078:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24063:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24070:4:14",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "24060:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24060:15:14"
															},
															"nodeType": "YulIf",
															"src": "24057:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24107:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24118:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24125:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "24114:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24114:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24107:3:14"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23991:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24001:3:14",
														"type": ""
													}
												],
												"src": "23962:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24245:76:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24267:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24275:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24263:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24263:14:14"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24279:34:14",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24256:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24256:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24256:58:14"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24237:6:14",
														"type": ""
													}
												],
												"src": "24139:182:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24473:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24483:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24549:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24554:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24490:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24490:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24483:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24655:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "24566:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24566:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24566:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24668:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24679:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24684:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24675:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24675:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24668:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24461:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24469:3:14",
														"type": ""
													}
												],
												"src": "24327:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24870:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24880:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24892:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24903:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24888:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24888:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24880:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24927:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24938:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24923:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24923:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24946:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24952:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24942:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24942:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24916:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24916:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24916:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24972:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25106:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24980:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24980:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24972:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24850:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24865:4:14",
														"type": ""
													}
												],
												"src": "24699:419:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISQFItem_$840_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISQFItem_$840_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISQFItem_$840__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$16_memory_ptr(value) -> length {\n\n        length := 0x10\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$16_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$16_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[16] -> uint256[16]\n    function abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$16_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$16_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$16_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$16_memory_ptr__to_t_array$_t_uint256_$16_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 512)\n\n        abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_div_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806391d14854116100a2578063d547741f11610071578063d547741f146102b8578063dd23faf3146102d4578063e63ab1e914610304578063f3fef3a314610322578063f400fde41461033e5761010b565b806391d1485414610230578063945099bc14610260578063a217fddf1461027c578063c60982561461029a5761010b565b806336568abe116100de57806336568abe146101a857806352c6159f146101c45780635c975abb146101e2578063841acc5d146102005761010b565b806301ffc9a7146101105780630a1ac65714610140578063248a9ca31461015c5780632f2ff15d1461018c575b600080fd5b61012a600480360381019061012591906110f0565b61035c565b6040516101379190611138565b60405180910390f35b61015a60048036038101906101559190611189565b6103d6565b005b610176600480360381019061017191906111ec565b61049d565b6040516101839190611228565b60405180910390f35b6101a660048036038101906101a191906112a1565b6104bd565b005b6101c260048036038101906101bd91906112a1565b6104e6565b005b6101cc610569565b6040516101d99190611340565b60405180910390f35b6101ea61058f565b6040516101f79190611138565b60405180910390f35b61021a600480360381019061021591906114a1565b6105a5565b60405161022791906114f9565b60405180910390f35b61024a600480360381019061024591906112a1565b610809565b6040516102579190611138565b60405180910390f35b61027a60048036038101906102759190611514565b610874565b005b6102846108d6565b6040516102919190611228565b60405180910390f35b6102a26108dd565b6040516102af9190611563565b60405180910390f35b6102d260048036038101906102cd91906112a1565b610903565b005b6102ee60048036038101906102e991906111ec565b61092c565b6040516102fb9190611629565b60405180910390f35b61030c610a10565b6040516103199190611228565b60405180910390f35b61033c60048036038101906103379190611514565b610a34565b005b610346610b4e565b60405161035391906114f9565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cf57506103ce82610b54565b5b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040161043191906114f9565b600060405180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b505050507f950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c18160405161049291906114f9565b60405180910390a150565b600060016000838152602001908152602001600020600101549050919050565b6104c68261049d565b6104d7816104d2610bbe565b610bc6565b6104e18383610c63565b505050565b6104ee610bbe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461055b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610552906116c8565b60405180910390fd5b6105658282610d43565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900460ff16905090565b60006105af61058f565b156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690611734565b60405180910390fd5b60006004541180156106505750600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156106fb57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306004546040518463ffffffff1660e01b81526004016106b693929190611754565b6020604051808303816000875af11580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f991906117b7565b505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d204c45e33856040518363ffffffff1660e01b815260040161075a92919061185b565b6020604051808303816000875af1158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d91906118a0565b90507f9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d3382600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004546040516107f894939291906118cd565b60405180910390a180915050919050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b61088981610884610bbe565b610bc6565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600481905550505050565b6000801b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61090c8261049d565b61091d81610918610bbe565b610bc6565b6109278383610d43565b505050565b610934611061565b60005b60208160ff161015610a0a576000600282610952919061194e565b60ff1614610961576000610964565b60015b6101006109719190611ae1565b838260ff166020811061098757610986611b2c565b5b1a60f81b60f81c60ff1661099b9190611b5b565b826002836109a99190611bb5565b60ff16601081106109bd576109bc611b2c565b5b60200201516109cc9190611be6565b826002836109da9190611bb5565b60ff16601081106109ee576109ed611b2c565b5b6020020181815250508080610a0290611c3c565b915050610937565b50919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000801b610a4981610a44610bbe565b610bc6565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac9573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ac3573d6000803e3d6000fd5b50610b49565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b04929190611c65565b6020604051808303816000875af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4791906117b7565b505b505050565b60045481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610bd08282610809565b610c5f57610bf58173ffffffffffffffffffffffffffffffffffffffff166014610e25565b610c038360001c6020610e25565b604051602001610c14929190611d62565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c569190611d9c565b60405180910390fd5b5050565b610c6d8282610809565b610d3f57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ce4610bbe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610d4d8282610809565b15610e215760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610dc6610bbe565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b606060006002836002610e389190611b5b565b610e429190611be6565b67ffffffffffffffff811115610e5b57610e5a611376565b5b6040519080825280601f01601f191660200182016040528015610e8d5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610ec557610ec4611b2c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f2957610f28611b2c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610f699190611b5b565b610f739190611be6565b90505b6001811115611013577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610fb557610fb4611b2c565b5b1a60f81b828281518110610fcc57610fcb611b2c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061100c90611dbe565b9050610f76565b5060008414611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e90611e33565b60405180910390fd5b8091505092915050565b604051806102000160405280601090602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110cd81611098565b81146110d857600080fd5b50565b6000813590506110ea816110c4565b92915050565b6000602082840312156111065761110561108e565b5b6000611114848285016110db565b91505092915050565b60008115159050919050565b6111328161111d565b82525050565b600060208201905061114d6000830184611129565b92915050565b6000819050919050565b61116681611153565b811461117157600080fd5b50565b6000813590506111838161115d565b92915050565b60006020828403121561119f5761119e61108e565b5b60006111ad84828501611174565b91505092915050565b6000819050919050565b6111c9816111b6565b81146111d457600080fd5b50565b6000813590506111e6816111c0565b92915050565b6000602082840312156112025761120161108e565b5b6000611210848285016111d7565b91505092915050565b611222816111b6565b82525050565b600060208201905061123d6000830184611219565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126e82611243565b9050919050565b61127e81611263565b811461128957600080fd5b50565b60008135905061129b81611275565b92915050565b600080604083850312156112b8576112b761108e565b5b60006112c6858286016111d7565b92505060206112d78582860161128c565b9150509250929050565b6000819050919050565b60006113066113016112fc84611243565b6112e1565b611243565b9050919050565b6000611318826112eb565b9050919050565b600061132a8261130d565b9050919050565b61133a8161131f565b82525050565b60006020820190506113556000830184611331565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113ae82611365565b810181811067ffffffffffffffff821117156113cd576113cc611376565b5b80604052505050565b60006113e0611084565b90506113ec82826113a5565b919050565b600067ffffffffffffffff82111561140c5761140b611376565b5b61141582611365565b9050602081019050919050565b82818337600083830152505050565b600061144461143f846113f1565b6113d6565b9050828152602081018484840111156114605761145f611360565b5b61146b848285611422565b509392505050565b600082601f8301126114885761148761135b565b5b8135611498848260208601611431565b91505092915050565b6000602082840312156114b7576114b661108e565b5b600082013567ffffffffffffffff8111156114d5576114d4611093565b5b6114e184828501611473565b91505092915050565b6114f381611153565b82525050565b600060208201905061150e60008301846114ea565b92915050565b6000806040838503121561152b5761152a61108e565b5b60006115398582860161128c565b925050602061154a85828601611174565b9150509250929050565b61155d81611263565b82525050565b60006020820190506115786000830184611554565b92915050565b600060109050919050565b600081905092915050565b6000819050919050565b6115a781611153565b82525050565b60006115b9838361159e565b60208301905092915050565b6000602082019050919050565b6115db8161157e565b6115e58184611589565b92506115f082611594565b8060005b8381101561162157815161160887826115ad565b9650611613836115c5565b9250506001810190506115f4565b505050505050565b60006102008201905061163f60008301846115d2565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006116b2602f83611645565b91506116bd82611656565b604082019050919050565b600060208201905081810360008301526116e1816116a5565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061171e601083611645565b9150611729826116e8565b602082019050919050565b6000602082019050818103600083015261174d81611711565b9050919050565b60006060820190506117696000830186611554565b6117766020830185611554565b61178360408301846114ea565b949350505050565b6117948161111d565b811461179f57600080fd5b50565b6000815190506117b18161178b565b92915050565b6000602082840312156117cd576117cc61108e565b5b60006117db848285016117a2565b91505092915050565b600081519050919050565b60005b8381101561180d5780820151818401526020810190506117f2565b8381111561181c576000848401525b50505050565b600061182d826117e4565b6118378185611645565b93506118478185602086016117ef565b61185081611365565b840191505092915050565b60006040820190506118706000830185611554565b81810360208301526118828184611822565b90509392505050565b60008151905061189a8161115d565b92915050565b6000602082840312156118b6576118b561108e565b5b60006118c48482850161188b565b91505092915050565b60006080820190506118e26000830187611554565b6118ef60208301866114ea565b6118fc6040830185611554565b61190960608301846114ea565b95945050505050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195982611912565b915061196483611912565b9250826119745761197361191f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115611a05578086048111156119e1576119e061197f565b5b60018516156119f05780820291505b80810290506119fe856119ae565b94506119c5565b94509492505050565b600082611a1e5760019050611ada565b81611a2c5760009050611ada565b8160018114611a425760028114611a4c57611a7b565b6001915050611ada565b60ff841115611a5e57611a5d61197f565b5b8360020a915084821115611a7557611a7461197f565b5b50611ada565b5060208310610133831016604e8410600b8410161715611ab05782820a905083811115611aab57611aaa61197f565b5b611ada565b611abd84848460016119bb565b92509050818404811115611ad457611ad361197f565b5b81810290505b9392505050565b6000611aec82611153565b9150611af783611912565b9250611b247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a0e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b6682611153565b9150611b7183611153565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611baa57611ba961197f565b5b828202905092915050565b6000611bc082611912565b9150611bcb83611912565b925082611bdb57611bda61191f565b5b828204905092915050565b6000611bf182611153565b9150611bfc83611153565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c3157611c3061197f565b5b828201905092915050565b6000611c4782611912565b915060ff8203611c5a57611c5961197f565b5b600182019050919050565b6000604082019050611c7a6000830185611554565b611c8760208301846114ea565b9392505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611ccf601783611c8e565b9150611cda82611c99565b601782019050919050565b6000611cf0826117e4565b611cfa8185611c8e565b9350611d0a8185602086016117ef565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611d4c601183611c8e565b9150611d5782611d16565b601182019050919050565b6000611d6d82611cc2565b9150611d798285611ce5565b9150611d8482611d3f565b9150611d908284611ce5565b91508190509392505050565b60006020820190508181036000830152611db68184611822565b905092915050565b6000611dc982611153565b915060008203611ddc57611ddb61197f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611e1d602083611645565b9150611e2882611de7565b602082019050919050565b60006020820190508181036000830152611e4c81611e10565b905091905056fea2646970667358221220073d8ebd9969f34f36d43d7d5a1b5f9435296db7326ade07f0a6b7544a171d8964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xDD23FAF3 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0x33E JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x945099BC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xC6098256 EQ PUSH2 0x29A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x52C6159F EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x841ACC5D EQ PUSH2 0x200 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA1AC657 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1629 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CF JUMPI POP PUSH2 0x3CE DUP3 PUSH2 0xB54 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x950DCD4A7087BBF2CEE08268E1B26AC45FB310D3AE443D0FE53714B713DA45C1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 DUP3 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x4D7 DUP2 PUSH2 0x4D2 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x4E1 DUP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4EE PUSH2 0xBBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH2 0xD43 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AF PUSH2 0x58F JUMP JUMPDEST ISZERO PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT DUP1 ISZERO PUSH2 0x650 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x6FB JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD204C45E CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75A SWAP3 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x779 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST SWAP1 POP PUSH32 0x9E6E3ACB506BF1D2ADB1D8565252E575763EE07D1DEBFCC2C830682895B3137D CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x7F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x889 DUP2 PUSH2 0x884 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x90C DUP3 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x91D DUP2 PUSH2 0x918 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x927 DUP4 DUP4 PUSH2 0xD43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x934 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0x961 JUMPI PUSH1 0x0 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100 PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST DUP4 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x987 JUMPI PUSH2 0x986 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH2 0x99B SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0x9BD JUMPI PUSH2 0x9BC PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xA02 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x937 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xA49 DUP2 PUSH2 0xA44 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC9 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xB49 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP3 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBD0 DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xC5F JUMPI PUSH2 0xBF5 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0xC03 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC14 SWAP3 SWAP2 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC6D DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xD3F JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE4 PUSH2 0xBBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD4D DUP3 DUP3 PUSH2 0x809 JUMP JUMPDEST ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xDC6 PUSH2 0xBBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH2 0xE42 SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE5B JUMPI PUSH2 0xE5A PUSH2 0x1376 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x1BE6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1013 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0x1B2C JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x100C SWAP1 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 POP PUSH2 0xF76 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x200 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0x1098 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EA DUP2 PUSH2 0x10C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1114 DUP5 DUP3 DUP6 ADD PUSH2 0x10DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1132 DUP2 PUSH2 0x111D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1166 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP2 EQ PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1183 DUP2 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH2 0x119E PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP5 DUP3 DUP6 ADD PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C9 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E6 DUP2 PUSH2 0x11C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1210 DUP5 DUP3 DUP6 ADD PUSH2 0x11D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126E DUP3 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127E DUP2 PUSH2 0x1263 JUMP JUMPDEST DUP2 EQ PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129B DUP2 PUSH2 0x1275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B8 JUMPI PUSH2 0x12B7 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C6 DUP6 DUP3 DUP7 ADD PUSH2 0x11D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D7 DUP6 DUP3 DUP7 ADD PUSH2 0x128C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1306 PUSH2 0x1301 PUSH2 0x12FC DUP5 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1318 DUP3 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132A DUP3 PUSH2 0x130D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0x131F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1355 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x13AE DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13CD JUMPI PUSH2 0x13CC PUSH2 0x1376 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E0 PUSH2 0x1084 JUMP JUMPDEST SWAP1 POP PUSH2 0x13EC DUP3 DUP3 PUSH2 0x13A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140C JUMPI PUSH2 0x140B PUSH2 0x1376 JUMP JUMPDEST JUMPDEST PUSH2 0x1415 DUP3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1444 PUSH2 0x143F DUP5 PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x1360 JUMP JUMPDEST JUMPDEST PUSH2 0x146B DUP5 DUP3 DUP6 PUSH2 0x1422 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x135B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1498 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B6 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D4 PUSH2 0x1093 JUMP JUMPDEST JUMPDEST PUSH2 0x14E1 DUP5 DUP3 DUP6 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F3 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1539 DUP6 DUP3 DUP7 ADD PUSH2 0x128C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x154A DUP6 DUP3 DUP7 ADD PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x1263 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1578 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A7 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP4 DUP4 PUSH2 0x159E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0x157E JUMP JUMPDEST PUSH2 0x15E5 DUP2 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP3 POP PUSH2 0x15F0 DUP3 PUSH2 0x1594 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1621 JUMPI DUP2 MLOAD PUSH2 0x1608 DUP8 DUP3 PUSH2 0x15AD JUMP JUMPDEST SWAP7 POP PUSH2 0x1613 DUP4 PUSH2 0x15C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15F4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x163F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B2 PUSH1 0x2F DUP4 PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP PUSH2 0x16BD DUP3 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16E1 DUP2 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171E PUSH1 0x10 DUP4 PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP PUSH2 0x1729 DUP3 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174D DUP2 PUSH2 0x1711 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1769 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1776 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1783 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x111D JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17B1 DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP5 DUP3 DUP6 ADD PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x180D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17F2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x1837 DUP2 DUP6 PUSH2 0x1645 JUMP JUMPDEST SWAP4 POP PUSH2 0x1847 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x1850 DUP2 PUSH2 0x1365 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1870 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1882 DUP2 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x189A DUP2 PUSH2 0x115D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH2 0x18B5 PUSH2 0x108E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP5 DUP3 DUP6 ADD PUSH2 0x188B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x18E2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x18EF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x18FC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1909 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1959 DUP3 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x191F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1A05 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x19F0 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x19FE DUP6 PUSH2 0x19AE JUMP JUMPDEST SWAP5 POP PUSH2 0x19C5 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A1E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1ADA JUMP JUMPDEST DUP2 PUSH2 0x1A2C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1ADA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A42 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A4C JUMPI PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1ADA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5D PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1A75 JUMPI PUSH2 0x1A74 PUSH2 0x197F JUMP JUMPDEST JUMPDEST POP PUSH2 0x1ADA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1AB0 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x1AAA PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH2 0x1ADA JUMP JUMPDEST PUSH2 0x1ABD DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF7 DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP PUSH2 0x1B24 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B71 DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1BAA JUMPI PUSH2 0x1BA9 PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC0 DUP3 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCB DUP4 PUSH2 0x1912 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1BDB JUMPI PUSH2 0x1BDA PUSH2 0x191F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF1 DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFC DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x197F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 DUP3 PUSH2 0x1912 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x1C5A JUMPI PUSH2 0x1C59 PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1C87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCF PUSH1 0x17 DUP4 PUSH2 0x1C8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDA DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x1CFA DUP2 DUP6 PUSH2 0x1C8E JUMP JUMPDEST SWAP4 POP PUSH2 0x1D0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17EF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4C PUSH1 0x11 DUP4 PUSH2 0x1C8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1D57 DUP3 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6D DUP3 PUSH2 0x1CC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D79 DUP3 DUP6 PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D84 DUP3 PUSH2 0x1D3F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D90 DUP3 DUP5 PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC9 DUP3 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1DDC JUMPI PUSH2 0x1DDB PUSH2 0x197F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1D PUSH1 0x20 DUP4 PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E28 DUP3 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E4C DUP2 PUSH2 0x1E10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD RETURNDATASIZE DUP15 0xBD SWAP10 PUSH10 0xF34F36D43D7D5A1B5F94 CALLDATALOAD 0x29 PUSH14 0xB7326ADE07F0A6B7544A171D8964 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "292:2224:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2510:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2093:133:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3882:121:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4253:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5270:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;413:20:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1034:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1539:481:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2799:137:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1359:174:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1917:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;507:19:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4632:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1043:311:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2232:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;532:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:202:0;2595:4;2633:32;2618:47;;;:11;:47;;;;:87;;;;2669:36;2693:11;2669:23;:36::i;:::-;2618:87;2611:94;;2510:202;;;:::o;2093:133:10:-;2166:4;;;;;;;;;;;:9;;;2176:7;2166:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:20;2211:7;2199:20;;;;;;:::i;:::-;;;;;;;;2093:133;:::o;3882:121:0:-;3948:7;3974:6;:12;3981:4;3974:12;;;;;;;;;;;:22;;;3967:29;;3882:121;;;:::o;4253:145::-;4336:18;4349:4;4336:12;:18::i;:::-;2395:30;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;4366:25:::1;4377:4;4383:7;4366:10;:25::i;:::-;4253:145:::0;;;:::o;5270:214::-;5376:12;:10;:12::i;:::-;5365:23;;:7;:23;;;5357:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5451:26;5463:4;5469:7;5451:11;:26::i;:::-;5270:214;;:::o;413:20:10:-;;;;;;;;;;;;;:::o;1034:84:9:-;1081:4;1104:7;;;;;;;;;;;1097:14;;1034:84;:::o;1539:481:10:-;1628:7;1348:8:9;:6;:8::i;:::-;1347:9;1339:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1661:1:10::1;1651:7;;:11;:35;;;;;1682:3;1666:20;;:4;;;;;;;;;;;:20;;;;1651:35;1647:127;;;1709:4;;;;;;;;;;;1702:25;;;1728:10;1748:4;1755:7;;1702:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1647:127;1783:15;1801:4;;;;;;;;;;;:13;;;1828:10;1852:9;1801:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1783:88;;1886:103;1909:10;1933:7;1954:4;;;;;;;;;;;1972:7;;1886:103;;;;;;;;;:::i;:::-;;;;;;;;2006:7;1999:14;;;1539:481:::0;;;:::o;2799:137:0:-;2877:4;2900:6;:12;2907:4;2900:12;;;;;;;;;;;:20;;:29;2921:7;2900:29;;;;;;;;;;;;;;;;;;;;;;;;;2893:36;;2799:137;;;;:::o;1359:174:10:-;1962:4:0;1456:18:10;;2395:30:0;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;1493:5:10::1;1486:4;;:12;;;;;;;;;;;;;;;;;;1518:8;1508:7;:18;;;;1359:174:::0;;;:::o;1917:49:0:-;1962:4;1917:49;;;:::o;507:19:10:-;;;;;;;;;;;;;:::o;4632:147:0:-;4716:18;4729:4;4716:12;:18::i;:::-;2395:30;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;4746:26:::1;4758:4;4764:7;4746:11;:26::i;:::-;4632:147:::0;;;:::o;1043:311:10:-;1129:25;;:::i;:::-;1175:7;1170:178;1192:2;1188:1;:6;;;1170:178;;;1327:1;1322;1318;:5;;;;:::i;:::-;:10;;;:18;;1335:1;1318:18;;;1331:1;1318:18;1312:3;:25;;;;:::i;:::-;1285:4;1290:1;1285:7;;;;;;;;;:::i;:::-;;;;;1279:14;;:58;;;;;;:::i;:::-;1247:6;1258:1;1254;:5;;;;:::i;:::-;1247:13;;;;;;;;;:::i;:::-;;;;;;:90;;;;:::i;:::-;1215:6;1226:1;1222;:5;;;;:::i;:::-;1215:13;;;;;;;;;:::i;:::-;;;;;:122;;;;;1196:3;;;;;:::i;:::-;;;;1170:178;;;;1043:311;;;:::o;439:62::-;477:24;439:62;:::o;2232:282::-;1962:4:0;2313:18:10;;2395:30:0;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;2368:3:10::1;2351:21;;:5;:21;;::::0;2347:161:::1;;2396:10;2388:28;;:36;2417:6;2388:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2347:161;;;2462:5;2455:22;;;2478:10;2490:6;2455:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2347:161;2232:282:::0;;;:::o;532:31::-;;;;:::o;763:155:3:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;587:96:2:-;640:7;666:10;659:17;;587:96;:::o;3217:484:0:-;3297:22;3305:4;3311:7;3297;:22::i;:::-;3292:403;;3480:41;3508:7;3480:41;;3518:2;3480:19;:41::i;:::-;3592:38;3620:4;3612:13;;3627:2;3592:19;:38::i;:::-;3387:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3335:349;;;;;;;;;;;:::i;:::-;;;;;;;;3292:403;3217:484;;:::o;6537:224::-;6611:22;6619:4;6625:7;6611;:22::i;:::-;6606:149;;6681:4;6649:6;:12;6656:4;6649:12;;;;;;;;;;;:20;;:29;6670:7;6649:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6731:12;:10;:12::i;:::-;6704:40;;6722:7;6704:40;;6716:4;6704:40;;;;;;;;;;6606:149;6537:224;;:::o;6767:225::-;6841:22;6849:4;6855:7;6841;:22::i;:::-;6837:149;;;6911:5;6879:6;:12;6886:4;6879:12;;;;;;;;;;;:20;;:29;6900:7;6879:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6962:12;:10;:12::i;:::-;6935:40;;6953:7;6935:40;;6947:4;6935:40;;;;;;;;;;6837:149;6767:225;;:::o;1535:441:13:-;1610:13;1635:19;1680:1;1671:6;1667:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:47;;1692:15;:6;1699:1;1692:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1717;:6;1724:1;1717:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1747:9;1772:1;1763:6;1759:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;1813:12;1834:3;1826:5;:11;1813:25;;;;;;;:::i;:::-;;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1862:1;1852:11;;;;;1782:3;;;;:::i;:::-;;;1742:132;;;;1900:1;1891:5;:10;1883:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1962:6;1948:21;;;1535:441;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:77::-;2246:7;2275:5;2264:16;;2209:77;;;:::o;2292:122::-;2365:24;2383:5;2365:24;:::i;:::-;2358:5;2355:35;2345:63;;2404:1;2401;2394:12;2345:63;2292:122;:::o;2420:139::-;2466:5;2504:6;2491:20;2482:29;;2520:33;2547:5;2520:33;:::i;:::-;2420:139;;;;:::o;2565:329::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2799:1;2824:53;2869:7;2860:6;2849:9;2845:22;2824:53;:::i;:::-;2814:63;;2770:117;2565:329;;;;:::o;2900:118::-;2987:24;3005:5;2987:24;:::i;:::-;2982:3;2975:37;2900:118;;:::o;3024:222::-;3117:4;3155:2;3144:9;3140:18;3132:26;;3168:71;3236:1;3225:9;3221:17;3212:6;3168:71;:::i;:::-;3024:222;;;;:::o;3252:126::-;3289:7;3329:42;3322:5;3318:54;3307:65;;3252:126;;;:::o;3384:96::-;3421:7;3450:24;3468:5;3450:24;:::i;:::-;3439:35;;3384:96;;;:::o;3486:122::-;3559:24;3577:5;3559:24;:::i;:::-;3552:5;3549:35;3539:63;;3598:1;3595;3588:12;3539:63;3486:122;:::o;3614:139::-;3660:5;3698:6;3685:20;3676:29;;3714:33;3741:5;3714:33;:::i;:::-;3614:139;;;;:::o;3759:474::-;3827:6;3835;3884:2;3872:9;3863:7;3859:23;3855:32;3852:119;;;3890:79;;:::i;:::-;3852:119;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3759:474;;;;;:::o;4239:60::-;4267:3;4288:5;4281:12;;4239:60;;;:::o;4305:142::-;4355:9;4388:53;4406:34;4415:24;4433:5;4415:24;:::i;:::-;4406:34;:::i;:::-;4388:53;:::i;:::-;4375:66;;4305:142;;;:::o;4453:126::-;4503:9;4536:37;4567:5;4536:37;:::i;:::-;4523:50;;4453:126;;;:::o;4585:142::-;4651:9;4684:37;4715:5;4684:37;:::i;:::-;4671:50;;4585:142;;;:::o;4733:163::-;4836:53;4883:5;4836:53;:::i;:::-;4831:3;4824:66;4733:163;;:::o;4902:254::-;5011:4;5049:2;5038:9;5034:18;5026:26;;5062:87;5146:1;5135:9;5131:17;5122:6;5062:87;:::i;:::-;4902:254;;;;:::o;5162:117::-;5271:1;5268;5261:12;5285:117;5394:1;5391;5384:12;5408:102;5449:6;5500:2;5496:7;5491:2;5484:5;5480:14;5476:28;5466:38;;5408:102;;;:::o;5516:180::-;5564:77;5561:1;5554:88;5661:4;5658:1;5651:15;5685:4;5682:1;5675:15;5702:281;5785:27;5807:4;5785:27;:::i;:::-;5777:6;5773:40;5915:6;5903:10;5900:22;5879:18;5867:10;5864:34;5861:62;5858:88;;;5926:18;;:::i;:::-;5858:88;5966:10;5962:2;5955:22;5745:238;5702:281;;:::o;5989:129::-;6023:6;6050:20;;:::i;:::-;6040:30;;6079:33;6107:4;6099:6;6079:33;:::i;:::-;5989:129;;;:::o;6124:308::-;6186:4;6276:18;6268:6;6265:30;6262:56;;;6298:18;;:::i;:::-;6262:56;6336:29;6358:6;6336:29;:::i;:::-;6328:37;;6420:4;6414;6410:15;6402:23;;6124:308;;;:::o;6438:154::-;6522:6;6517:3;6512;6499:30;6584:1;6575:6;6570:3;6566:16;6559:27;6438:154;;;:::o;6598:412::-;6676:5;6701:66;6717:49;6759:6;6717:49;:::i;:::-;6701:66;:::i;:::-;6692:75;;6790:6;6783:5;6776:21;6828:4;6821:5;6817:16;6866:3;6857:6;6852:3;6848:16;6845:25;6842:112;;;6873:79;;:::i;:::-;6842:112;6963:41;6997:6;6992:3;6987;6963:41;:::i;:::-;6682:328;6598:412;;;;;:::o;7030:340::-;7086:5;7135:3;7128:4;7120:6;7116:17;7112:27;7102:122;;7143:79;;:::i;:::-;7102:122;7260:6;7247:20;7285:79;7360:3;7352:6;7345:4;7337:6;7333:17;7285:79;:::i;:::-;7276:88;;7092:278;7030:340;;;;:::o;7376:509::-;7445:6;7494:2;7482:9;7473:7;7469:23;7465:32;7462:119;;;7500:79;;:::i;:::-;7462:119;7648:1;7637:9;7633:17;7620:31;7678:18;7670:6;7667:30;7664:117;;;7700:79;;:::i;:::-;7664:117;7805:63;7860:7;7851:6;7840:9;7836:22;7805:63;:::i;:::-;7795:73;;7591:287;7376:509;;;;:::o;7891:118::-;7978:24;7996:5;7978:24;:::i;:::-;7973:3;7966:37;7891:118;;:::o;8015:222::-;8108:4;8146:2;8135:9;8131:18;8123:26;;8159:71;8227:1;8216:9;8212:17;8203:6;8159:71;:::i;:::-;8015:222;;;;:::o;8243:474::-;8311:6;8319;8368:2;8356:9;8347:7;8343:23;8339:32;8336:119;;;8374:79;;:::i;:::-;8336:119;8494:1;8519:53;8564:7;8555:6;8544:9;8540:22;8519:53;:::i;:::-;8509:63;;8465:117;8621:2;8647:53;8692:7;8683:6;8672:9;8668:22;8647:53;:::i;:::-;8637:63;;8592:118;8243:474;;;;;:::o;8723:118::-;8810:24;8828:5;8810:24;:::i;:::-;8805:3;8798:37;8723:118;;:::o;8847:222::-;8940:4;8978:2;8967:9;8963:18;8955:26;;8991:71;9059:1;9048:9;9044:17;9035:6;8991:71;:::i;:::-;8847:222;;;;:::o;9075:105::-;9141:6;9169:4;9159:14;;9075:105;;;:::o;9186:144::-;9284:11;9321:3;9306:18;;9186:144;;;;:::o;9336:99::-;9402:4;9425:3;9417:11;;9336:99;;;:::o;9441:108::-;9518:24;9536:5;9518:24;:::i;:::-;9513:3;9506:37;9441:108;;:::o;9555:179::-;9624:10;9645:46;9687:3;9679:6;9645:46;:::i;:::-;9723:4;9718:3;9714:14;9700:28;;9555:179;;;;:::o;9740:112::-;9809:4;9841;9836:3;9832:14;9824:22;;9740:112;;;:::o;9892:700::-;10030:53;10077:5;10030:53;:::i;:::-;10099:85;10177:6;10172:3;10099:85;:::i;:::-;10092:92;;10208:55;10257:5;10208:55;:::i;:::-;10286:7;10317:1;10302:283;10327:6;10324:1;10321:13;10302:283;;;10403:6;10397:13;10430:63;10489:3;10474:13;10430:63;:::i;:::-;10423:70;;10516:59;10568:6;10516:59;:::i;:::-;10506:69;;10362:223;10349:1;10346;10342:9;10337:14;;10302:283;;;10306:14;10006:586;;;9892:700;;:::o;10598:319::-;10739:4;10777:3;10766:9;10762:19;10754:27;;10791:119;10907:1;10896:9;10892:17;10883:6;10791:119;:::i;:::-;10598:319;;;;:::o;10923:169::-;11007:11;11041:6;11036:3;11029:19;11081:4;11076:3;11072:14;11057:29;;10923:169;;;;:::o;11098:234::-;11238:34;11234:1;11226:6;11222:14;11215:58;11307:17;11302:2;11294:6;11290:15;11283:42;11098:234;:::o;11338:366::-;11480:3;11501:67;11565:2;11560:3;11501:67;:::i;:::-;11494:74;;11577:93;11666:3;11577:93;:::i;:::-;11695:2;11690:3;11686:12;11679:19;;11338:366;;;:::o;11710:419::-;11876:4;11914:2;11903:9;11899:18;11891:26;;11963:9;11957:4;11953:20;11949:1;11938:9;11934:17;11927:47;11991:131;12117:4;11991:131;:::i;:::-;11983:139;;11710:419;;;:::o;12135:166::-;12275:18;12271:1;12263:6;12259:14;12252:42;12135:166;:::o;12307:366::-;12449:3;12470:67;12534:2;12529:3;12470:67;:::i;:::-;12463:74;;12546:93;12635:3;12546:93;:::i;:::-;12664:2;12659:3;12655:12;12648:19;;12307:366;;;:::o;12679:419::-;12845:4;12883:2;12872:9;12868:18;12860:26;;12932:9;12926:4;12922:20;12918:1;12907:9;12903:17;12896:47;12960:131;13086:4;12960:131;:::i;:::-;12952:139;;12679:419;;;:::o;13104:442::-;13253:4;13291:2;13280:9;13276:18;13268:26;;13304:71;13372:1;13361:9;13357:17;13348:6;13304:71;:::i;:::-;13385:72;13453:2;13442:9;13438:18;13429:6;13385:72;:::i;:::-;13467;13535:2;13524:9;13520:18;13511:6;13467:72;:::i;:::-;13104:442;;;;;;:::o;13552:116::-;13622:21;13637:5;13622:21;:::i;:::-;13615:5;13612:32;13602:60;;13658:1;13655;13648:12;13602:60;13552:116;:::o;13674:137::-;13728:5;13759:6;13753:13;13744:22;;13775:30;13799:5;13775:30;:::i;:::-;13674:137;;;;:::o;13817:345::-;13884:6;13933:2;13921:9;13912:7;13908:23;13904:32;13901:119;;;13939:79;;:::i;:::-;13901:119;14059:1;14084:61;14137:7;14128:6;14117:9;14113:22;14084:61;:::i;:::-;14074:71;;14030:125;13817:345;;;;:::o;14168:99::-;14220:6;14254:5;14248:12;14238:22;;14168:99;;;:::o;14273:307::-;14341:1;14351:113;14365:6;14362:1;14359:13;14351:113;;;14450:1;14445:3;14441:11;14435:18;14431:1;14426:3;14422:11;14415:39;14387:2;14384:1;14380:10;14375:15;;14351:113;;;14482:6;14479:1;14476:13;14473:101;;;14562:1;14553:6;14548:3;14544:16;14537:27;14473:101;14322:258;14273:307;;;:::o;14586:364::-;14674:3;14702:39;14735:5;14702:39;:::i;:::-;14757:71;14821:6;14816:3;14757:71;:::i;:::-;14750:78;;14837:52;14882:6;14877:3;14870:4;14863:5;14859:16;14837:52;:::i;:::-;14914:29;14936:6;14914:29;:::i;:::-;14909:3;14905:39;14898:46;;14678:272;14586:364;;;;:::o;14956:423::-;15097:4;15135:2;15124:9;15120:18;15112:26;;15148:71;15216:1;15205:9;15201:17;15192:6;15148:71;:::i;:::-;15266:9;15260:4;15256:20;15251:2;15240:9;15236:18;15229:48;15294:78;15367:4;15358:6;15294:78;:::i;:::-;15286:86;;14956:423;;;;;:::o;15385:143::-;15442:5;15473:6;15467:13;15458:22;;15489:33;15516:5;15489:33;:::i;:::-;15385:143;;;;:::o;15534:351::-;15604:6;15653:2;15641:9;15632:7;15628:23;15624:32;15621:119;;;15659:79;;:::i;:::-;15621:119;15779:1;15804:64;15860:7;15851:6;15840:9;15836:22;15804:64;:::i;:::-;15794:74;;15750:128;15534:351;;;;:::o;15891:553::-;16068:4;16106:3;16095:9;16091:19;16083:27;;16120:71;16188:1;16177:9;16173:17;16164:6;16120:71;:::i;:::-;16201:72;16269:2;16258:9;16254:18;16245:6;16201:72;:::i;:::-;16283;16351:2;16340:9;16336:18;16327:6;16283:72;:::i;:::-;16365;16433:2;16422:9;16418:18;16409:6;16365:72;:::i;:::-;15891:553;;;;;;;:::o;16450:86::-;16485:7;16525:4;16518:5;16514:16;16503:27;;16450:86;;;:::o;16542:180::-;16590:77;16587:1;16580:88;16687:4;16684:1;16677:15;16711:4;16708:1;16701:15;16728:170;16758:1;16775:18;16791:1;16775:18;:::i;:::-;16770:23;;16807:18;16823:1;16807:18;:::i;:::-;16802:23;;16844:1;16834:35;;16849:18;;:::i;:::-;16834:35;16890:1;16887;16883:9;16878:14;;16728:170;;;;:::o;16904:180::-;16952:77;16949:1;16942:88;17049:4;17046:1;17039:15;17073:4;17070:1;17063:15;17090:102;17132:8;17179:5;17176:1;17172:13;17151:34;;17090:102;;;:::o;17198:848::-;17259:5;17266:4;17290:6;17281:15;;17314:5;17305:14;;17328:712;17349:1;17339:8;17336:15;17328:712;;;17444:4;17439:3;17435:14;17429:4;17426:24;17423:50;;;17453:18;;:::i;:::-;17423:50;17503:1;17493:8;17489:16;17486:451;;;17918:4;17911:5;17907:16;17898:25;;17486:451;17968:4;17962;17958:15;17950:23;;17998:32;18021:8;17998:32;:::i;:::-;17986:44;;17328:712;;;17198:848;;;;;;;:::o;18052:1073::-;18106:5;18297:8;18287:40;;18318:1;18309:10;;18320:5;;18287:40;18346:4;18336:36;;18363:1;18354:10;;18365:5;;18336:36;18432:4;18480:1;18475:27;;;;18516:1;18511:191;;;;18425:277;;18475:27;18493:1;18484:10;;18495:5;;;18511:191;18556:3;18546:8;18543:17;18540:43;;;18563:18;;:::i;:::-;18540:43;18612:8;18609:1;18605:16;18596:25;;18647:3;18640:5;18637:14;18634:40;;;18654:18;;:::i;:::-;18634:40;18687:5;;;18425:277;;18811:2;18801:8;18798:16;18792:3;18786:4;18783:13;18779:36;18761:2;18751:8;18748:16;18743:2;18737:4;18734:12;18730:35;18714:111;18711:246;;;18867:8;18861:4;18857:19;18848:28;;18902:3;18895:5;18892:14;18889:40;;;18909:18;;:::i;:::-;18889:40;18942:5;;18711:246;18982:42;19020:3;19010:8;19004:4;19001:1;18982:42;:::i;:::-;18967:57;;;;19056:4;19051:3;19047:14;19040:5;19037:25;19034:51;;;19065:18;;:::i;:::-;19034:51;19114:4;19107:5;19103:16;19094:25;;18052:1073;;;;;;:::o;19131:281::-;19189:5;19213:23;19231:4;19213:23;:::i;:::-;19205:31;;19257:25;19273:8;19257:25;:::i;:::-;19245:37;;19301:104;19338:66;19328:8;19322:4;19301:104;:::i;:::-;19292:113;;19131:281;;;;:::o;19418:180::-;19466:77;19463:1;19456:88;19563:4;19560:1;19553:15;19587:4;19584:1;19577:15;19604:348;19644:7;19667:20;19685:1;19667:20;:::i;:::-;19662:25;;19701:20;19719:1;19701:20;:::i;:::-;19696:25;;19889:1;19821:66;19817:74;19814:1;19811:81;19806:1;19799:9;19792:17;19788:105;19785:131;;;19896:18;;:::i;:::-;19785:131;19944:1;19941;19937:9;19926:20;;19604:348;;;;:::o;19958:179::-;19996:1;20013:18;20029:1;20013:18;:::i;:::-;20008:23;;20045:18;20061:1;20045:18;:::i;:::-;20040:23;;20082:1;20072:35;;20087:18;;:::i;:::-;20072:35;20129:1;20126;20122:9;20117:14;;19958:179;;;;:::o;20143:305::-;20183:3;20202:20;20220:1;20202:20;:::i;:::-;20197:25;;20236:20;20254:1;20236:20;:::i;:::-;20231:25;;20390:1;20322:66;20318:74;20315:1;20312:81;20309:107;;;20396:18;;:::i;:::-;20309:107;20440:1;20437;20433:9;20426:16;;20143:305;;;;:::o;20454:167::-;20491:3;20514:22;20530:5;20514:22;:::i;:::-;20505:31;;20558:4;20551:5;20548:15;20545:41;;20566:18;;:::i;:::-;20545:41;20613:1;20606:5;20602:13;20595:20;;20454:167;;;:::o;20627:332::-;20748:4;20786:2;20775:9;20771:18;20763:26;;20799:71;20867:1;20856:9;20852:17;20843:6;20799:71;:::i;:::-;20880:72;20948:2;20937:9;20933:18;20924:6;20880:72;:::i;:::-;20627:332;;;;;:::o;20965:148::-;21067:11;21104:3;21089:18;;20965:148;;;;:::o;21119:173::-;21259:25;21255:1;21247:6;21243:14;21236:49;21119:173;:::o;21298:402::-;21458:3;21479:85;21561:2;21556:3;21479:85;:::i;:::-;21472:92;;21573:93;21662:3;21573:93;:::i;:::-;21691:2;21686:3;21682:12;21675:19;;21298:402;;;:::o;21706:377::-;21812:3;21840:39;21873:5;21840:39;:::i;:::-;21895:89;21977:6;21972:3;21895:89;:::i;:::-;21888:96;;21993:52;22038:6;22033:3;22026:4;22019:5;22015:16;21993:52;:::i;:::-;22070:6;22065:3;22061:16;22054:23;;21816:267;21706:377;;;;:::o;22089:167::-;22229:19;22225:1;22217:6;22213:14;22206:43;22089:167;:::o;22262:402::-;22422:3;22443:85;22525:2;22520:3;22443:85;:::i;:::-;22436:92;;22537:93;22626:3;22537:93;:::i;:::-;22655:2;22650:3;22646:12;22639:19;;22262:402;;;:::o;22670:967::-;23052:3;23074:148;23218:3;23074:148;:::i;:::-;23067:155;;23239:95;23330:3;23321:6;23239:95;:::i;:::-;23232:102;;23351:148;23495:3;23351:148;:::i;:::-;23344:155;;23516:95;23607:3;23598:6;23516:95;:::i;:::-;23509:102;;23628:3;23621:10;;22670:967;;;;;:::o;23643:313::-;23756:4;23794:2;23783:9;23779:18;23771:26;;23843:9;23837:4;23833:20;23829:1;23818:9;23814:17;23807:47;23871:78;23944:4;23935:6;23871:78;:::i;:::-;23863:86;;23643:313;;;;:::o;23962:171::-;24001:3;24024:24;24042:5;24024:24;:::i;:::-;24015:33;;24070:4;24063:5;24060:15;24057:41;;24078:18;;:::i;:::-;24057:41;24125:1;24118:5;24114:13;24107:20;;23962:171;;;:::o;24139:182::-;24279:34;24275:1;24267:6;24263:14;24256:58;24139:182;:::o;24327:366::-;24469:3;24490:67;24554:2;24549:3;24490:67;:::i;:::-;24483:74;;24566:93;24655:3;24566:93;:::i;:::-;24684:2;24679:3;24675:12;24668:19;;24327:366;;;:::o;24699:419::-;24865:4;24903:2;24892:9;24888:18;24880:26;;24952:9;24946:4;24942:20;24938:1;24927:9;24923:17;24916:47;24980:131;25106:4;24980:131;:::i;:::-;24972:139;;24699:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1563400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "402",
								"PAUSER_ROLE()": "395",
								"SQFi()": "infinite",
								"amount1()": "2539",
								"bytes32ToAmount16(bytes32)": "infinite",
								"createSQFI(string)": "infinite",
								"editSupportedFee(address,uint256)": "infinite",
								"fee1()": "2603",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3163",
								"paused()": "2546",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"uncraft(uint256)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 557,
									"end": 563,
									"name": "PUSH",
									"source": 10,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 532,
									"end": 563,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 532,
									"end": 563,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 927,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 917,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 917,
									"end": 932,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 917,
									"end": 932,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 889,
									"end": 893,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 893,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 889,
									"end": 911,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 889,
									"end": 911,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 889,
									"end": 911,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 889,
									"end": 911,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 889,
									"end": 911,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 933,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 921,
									"end": 925,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 921,
									"end": 925,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 921,
									"end": 933,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 943,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 972,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 954,
									"end": 972,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 974,
									"end": 984,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 943,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 943,
									"end": 953,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 943,
									"end": 953,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 943,
									"end": 985,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 943,
									"end": 985,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 943,
									"end": 985,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 943,
									"end": 985,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 943,
									"end": 985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 995,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 477,
									"end": 501,
									"name": "PUSH",
									"source": 10,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1019,
									"end": 1029,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 995,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 995,
									"end": 1005,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1005,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 995,
									"end": 1030,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1030,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 995,
									"end": 1030,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 995,
									"end": 1030,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 995,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 815,
									"end": 1037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6138,
									"end": 6142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6144,
									"end": 6151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6127,
									"end": 6137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6127,
									"end": 6137,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6619,
									"end": 6623,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6625,
									"end": 6632,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6618,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6611,
									"end": 6618,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6611,
									"end": 6618,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6681,
									"end": 6685,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6649,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6656,
									"end": 6660,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6670,
									"end": 6677,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6722,
									"end": 6729,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6716,
									"end": 6720,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2877,
									"end": 2881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2906,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2920,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2921,
									"end": 2928,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2893,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2893,
									"end": 2929,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 587,
									"end": 683,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 587,
									"end": 683,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 640,
									"end": 647,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 676,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 659,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 659,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 587,
									"end": 683,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 683,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 2516,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220073d8ebd9969f34f36d43d7d5a1b5f9435296db7326ade07f0a6b7544a171d8964736f6c634300080d0033",
									".code": [
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "DD23FAF3"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "E63AB1E9"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "F3FEF3A3"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "F400FDE4"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "945099BC"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "C6098256"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "52C6159F"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "841ACC5D"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "A1AC657"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 2516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 507,
											"end": 526,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2693,
											"end": 2704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "PUSH",
											"source": 10,
											"value": "950DCD4A7087BBF2CEE08268E1B26AC45FB310D3AE443D0FE53714B713DA45C1"
										},
										{
											"begin": 2211,
											"end": 2218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2219,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2226,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3996,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3974,
											"end": 3996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4349,
											"end": 4353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5376,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1658,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1658,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1662,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1682,
											"end": 1685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1686,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1651,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1752,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1762,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1755,
											"end": 1762,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1647,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1814,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "D204C45E"
										},
										{
											"begin": 1828,
											"end": 1838,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1861,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1801,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "9E6E3ACB506BF1D2ADB1D8565252E575763EE07D1DEBFCC2C830682895B3137D"
										},
										{
											"begin": 1909,
											"end": 1919,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1933,
											"end": 1940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 1979,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 1979,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1989,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 2020,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1526,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1533,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 526,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 507,
											"end": 526,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4729,
											"end": 4733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4764,
											"end": 4771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1318,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1328,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1318,
											"end": 1328,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1328,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1279,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1254,
											"end": 1255,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1247,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1354,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 477,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 439,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 439,
											"end": 501,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2406,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2416,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2388,
											"end": 2416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "8FC"
										},
										{
											"begin": 2417,
											"end": 2423,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2477,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2477,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2347,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2514,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 532,
											"end": 563,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 532,
											"end": 563,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 871,
											"end": 882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 864,
											"end": 911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 864,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 640,
											"end": 647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3305,
											"end": 3309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3620,
											"end": 3624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3625,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6619,
											"end": 6623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6611,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6649,
											"end": 6655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6731,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6849,
											"end": 6853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6911,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6962,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1623,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1681,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1635,
											"end": 1682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1635,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH",
											"source": 13,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1837,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 1826,
											"end": 1831,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1896,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2390,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2511,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2482,
											"end": 2511,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2482,
											"end": 2511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2869,
											"end": 2876,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2845,
											"end": 2867,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2770,
											"end": 2887,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3132,
											"end": 3158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3221,
											"end": 3238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3371,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3549,
											"end": 3584,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3855,
											"end": 3887,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 4080,
											"end": 4087,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4108,
											"end": 4226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4267,
											"end": 4270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4281,
											"end": 4293,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4281,
											"end": 4293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4364,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4441,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4441,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4512,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4573,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4523,
											"end": 4573,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4585,
											"end": 4727,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 4585,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4651,
											"end": 4660,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 4684,
											"end": 4721,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4721,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 4684,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4721,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4671,
											"end": 4721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4585,
											"end": 4727,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4585,
											"end": 4727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4585,
											"end": 4727,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4585,
											"end": 4727,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4733,
											"end": 4896,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 4733,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 4836,
											"end": 4889,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4836,
											"end": 4889,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 4836,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4824,
											"end": 4890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4733,
											"end": 4896,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4733,
											"end": 4896,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4733,
											"end": 4896,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5051,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5062,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5131,
											"end": 5148,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5122,
											"end": 5128,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5062,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 5062,
											"end": 5149,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5149,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 5062,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 5156,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5162,
											"end": 5279,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 5162,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5261,
											"end": 5273,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5402,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 5285,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5392,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5510,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 5408,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5496,
											"end": 5503,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5484,
											"end": 5489,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5494,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5476,
											"end": 5504,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5466,
											"end": 5504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5510,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5510,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5510,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5516,
											"end": 5696,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 5516,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5564,
											"end": 5641,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5642,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5651,
											"end": 5666,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5690,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5702,
											"end": 5983,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 5702,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 5785,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5773,
											"end": 5813,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5903,
											"end": 5913,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5900,
											"end": 5922,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5879,
											"end": 5897,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5867,
											"end": 5877,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 5898,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5923,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5946,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 5858,
											"end": 5946,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 5926,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5946,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 5858,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5966,
											"end": 5976,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5962,
											"end": 5964,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5955,
											"end": 5977,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5745,
											"end": 5983,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5702,
											"end": 5983,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5702,
											"end": 5983,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5702,
											"end": 5983,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6118,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 5989,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 6050,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6040,
											"end": 6070,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6040,
											"end": 6070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6099,
											"end": 6105,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 6079,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5989,
											"end": 6118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5989,
											"end": 6118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5989,
											"end": 6118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5989,
											"end": 6118,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6124,
											"end": 6432,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 6124,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6186,
											"end": 6190,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6268,
											"end": 6274,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6262,
											"end": 6318,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6262,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 6262,
											"end": 6318,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6262,
											"end": 6318,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 6262,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 6336,
											"end": 6365,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6336,
											"end": 6365,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 6336,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6328,
											"end": 6365,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6328,
											"end": 6365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6424,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6418,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6410,
											"end": 6425,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6402,
											"end": 6425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6124,
											"end": 6432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6124,
											"end": 6432,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6124,
											"end": 6432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6124,
											"end": 6432,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6438,
											"end": 6592,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 6438,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6517,
											"end": 6520,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6512,
											"end": 6515,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6499,
											"end": 6529,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 6584,
											"end": 6585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6581,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6570,
											"end": 6573,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6566,
											"end": 6582,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6559,
											"end": 6586,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6592,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6676,
											"end": 6681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 6717,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6717,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 6717,
											"end": 6766,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6717,
											"end": 6766,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 6717,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6701,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 6701,
											"end": 6767,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6767,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 6701,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6692,
											"end": 6767,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6692,
											"end": 6767,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6783,
											"end": 6788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6776,
											"end": 6797,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6826,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6817,
											"end": 6833,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6866,
											"end": 6869,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6852,
											"end": 6855,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6848,
											"end": 6864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6845,
											"end": 6870,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6954,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 6842,
											"end": 6954,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 6873,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6842,
											"end": 6954,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 6842,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 6997,
											"end": 7003,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6992,
											"end": 6995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 6990,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 6963,
											"end": 7004,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6963,
											"end": 7004,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 6963,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 7010,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 7010,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7086,
											"end": 7091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7138,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7120,
											"end": 7126,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7116,
											"end": 7133,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7102,
											"end": 7224,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7224,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 7102,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7247,
											"end": 7267,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7285,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 7360,
											"end": 7363,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7358,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7345,
											"end": 7349,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7285,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 7285,
											"end": 7364,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7285,
											"end": 7364,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 7285,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7276,
											"end": 7364,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7276,
											"end": 7364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7370,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7496,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7473,
											"end": 7480,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7469,
											"end": 7492,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7465,
											"end": 7497,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7462,
											"end": 7581,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7462,
											"end": 7581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 7462,
											"end": 7581,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7500,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 7500,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 7500,
											"end": 7579,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 7579,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 7500,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7462,
											"end": 7581,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 7462,
											"end": 7581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7620,
											"end": 7651,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7678,
											"end": 7696,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7667,
											"end": 7697,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7664,
											"end": 7781,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7664,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 7664,
											"end": 7781,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7700,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 7700,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 7700,
											"end": 7779,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7700,
											"end": 7779,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 7700,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7664,
											"end": 7781,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 7664,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 7860,
											"end": 7867,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7851,
											"end": 7857,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7836,
											"end": 7858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 7805,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7795,
											"end": 7868,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7795,
											"end": 7868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7591,
											"end": 7878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7376,
											"end": 7885,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7891,
											"end": 8009,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 7891,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7978,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7978,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 7978,
											"end": 8002,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7978,
											"end": 8002,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 7978,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 7976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7966,
											"end": 8003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7891,
											"end": 8009,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7891,
											"end": 8009,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7891,
											"end": 8009,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8146,
											"end": 8148,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 8227,
											"end": 8228,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8225,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8311,
											"end": 8317,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8368,
											"end": 8370,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8356,
											"end": 8365,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8347,
											"end": 8354,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8371,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8455,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 8336,
											"end": 8455,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8374,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 8374,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 8374,
											"end": 8453,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8374,
											"end": 8453,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 8374,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8336,
											"end": 8455,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 8336,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8495,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 8564,
											"end": 8571,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8555,
											"end": 8561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8544,
											"end": 8553,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 8562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8519,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 8519,
											"end": 8572,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8519,
											"end": 8572,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 8519,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8509,
											"end": 8572,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8509,
											"end": 8572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8621,
											"end": 8623,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8647,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 8692,
											"end": 8699,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8683,
											"end": 8689,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8672,
											"end": 8681,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8668,
											"end": 8690,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8647,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 8647,
											"end": 8700,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8647,
											"end": 8700,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 8647,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8592,
											"end": 8710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8717,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8723,
											"end": 8841,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 8723,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8810,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 8828,
											"end": 8833,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8810,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 8810,
											"end": 8834,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8810,
											"end": 8834,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 8810,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8805,
											"end": 8808,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8798,
											"end": 8835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 8841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 8841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 8841,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 8980,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8967,
											"end": 8976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8963,
											"end": 8981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8955,
											"end": 8981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8955,
											"end": 8981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8991,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 9059,
											"end": 9060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8991,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 8991,
											"end": 9062,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8991,
											"end": 9062,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 8991,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9069,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9075,
											"end": 9180,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 9075,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9141,
											"end": 9147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 9159,
											"end": 9173,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9159,
											"end": 9173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9075,
											"end": 9180,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9075,
											"end": 9180,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9075,
											"end": 9180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9075,
											"end": 9180,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9284,
											"end": 9295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9306,
											"end": 9324,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9306,
											"end": 9324,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9330,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9336,
											"end": 9435,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 9336,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9425,
											"end": 9428,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9417,
											"end": 9428,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9417,
											"end": 9428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9336,
											"end": 9435,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9336,
											"end": 9435,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9336,
											"end": 9435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9336,
											"end": 9435,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9441,
											"end": 9549,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 9441,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9518,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 9536,
											"end": 9541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9518,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 9518,
											"end": 9542,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9518,
											"end": 9542,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 9518,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9513,
											"end": 9516,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9441,
											"end": 9549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9441,
											"end": 9549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9441,
											"end": 9549,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 9687,
											"end": 9690,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9679,
											"end": 9685,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 9645,
											"end": 9691,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9645,
											"end": 9691,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 9645,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9723,
											"end": 9727,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9721,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9714,
											"end": 9728,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9700,
											"end": 9728,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9700,
											"end": 9728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9734,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9740,
											"end": 9852,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 9740,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9809,
											"end": 9813,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9841,
											"end": 9845,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9836,
											"end": 9839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9832,
											"end": 9846,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9824,
											"end": 9846,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9824,
											"end": 9846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9852,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9852,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9852,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9892,
											"end": 10592,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 9892,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10030,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 10077,
											"end": 10082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10030,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 10030,
											"end": 10083,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10030,
											"end": 10083,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 10030,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10099,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 10177,
											"end": 10183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10172,
											"end": 10175,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10099,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 10099,
											"end": 10184,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10099,
											"end": 10184,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 10099,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10092,
											"end": 10184,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10092,
											"end": 10184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10208,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 10257,
											"end": 10262,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10208,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 10208,
											"end": 10263,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10263,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 10208,
											"end": 10263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10293,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10327,
											"end": 10333,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10324,
											"end": 10325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10321,
											"end": 10334,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10403,
											"end": 10409,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10397,
											"end": 10410,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 10489,
											"end": 10492,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10474,
											"end": 10487,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 10430,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10423,
											"end": 10493,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 10423,
											"end": 10493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10516,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 10568,
											"end": 10574,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10516,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 10516,
											"end": 10575,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10516,
											"end": 10575,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 10516,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10506,
											"end": 10575,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10506,
											"end": 10575,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 10585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10349,
											"end": 10350,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10342,
											"end": 10351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 10351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 10302,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10006,
											"end": 10592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10006,
											"end": 10592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10006,
											"end": 10592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 10592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 10592,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 10592,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10739,
											"end": 10743,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10777,
											"end": 10780,
											"name": "PUSH",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 10766,
											"end": 10775,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10762,
											"end": 10781,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10754,
											"end": 10781,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10754,
											"end": 10781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10791,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 10907,
											"end": 10908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10896,
											"end": 10905,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10892,
											"end": 10909,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10883,
											"end": 10889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10791,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 10791,
											"end": 10910,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10791,
											"end": 10910,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 10791,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10917,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11007,
											"end": 11018,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11041,
											"end": 11047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11036,
											"end": 11039,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11029,
											"end": 11048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11076,
											"end": 11079,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11072,
											"end": 11086,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11057,
											"end": 11086,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11057,
											"end": 11086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 11092,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11098,
											"end": 11332,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 11098,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11238,
											"end": 11272,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11234,
											"end": 11235,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11222,
											"end": 11236,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11215,
											"end": 11273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11307,
											"end": 11324,
											"name": "PUSH",
											"source": 14,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 11302,
											"end": 11304,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11300,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11290,
											"end": 11305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11283,
											"end": 11325,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11098,
											"end": 11332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11098,
											"end": 11332,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11338,
											"end": 11704,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 11338,
											"end": 11704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11480,
											"end": 11483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 11565,
											"end": 11567,
											"name": "PUSH",
											"source": 14,
											"value": "2F"
										},
										{
											"begin": 11560,
											"end": 11563,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11501,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 11501,
											"end": 11568,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11501,
											"end": 11568,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 11501,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11494,
											"end": 11568,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11494,
											"end": 11568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11577,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 11666,
											"end": 11669,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11577,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 11577,
											"end": 11670,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11577,
											"end": 11670,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 11577,
											"end": 11670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11695,
											"end": 11697,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11690,
											"end": 11693,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11686,
											"end": 11698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11679,
											"end": 11698,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11679,
											"end": 11698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11704,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11710,
											"end": 12129,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 11710,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11876,
											"end": 11880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11903,
											"end": 11912,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11891,
											"end": 11917,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11891,
											"end": 11917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11963,
											"end": 11972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 11961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11953,
											"end": 11973,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11949,
											"end": 11950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 11947,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11934,
											"end": 11951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11927,
											"end": 11974,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11991,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11991,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 11991,
											"end": 12122,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11991,
											"end": 12122,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 11991,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11983,
											"end": 12122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11983,
											"end": 12122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 12129,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 12129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 12129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 12129,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12135,
											"end": 12301,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 12135,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12275,
											"end": 12293,
											"name": "PUSH",
											"source": 14,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12263,
											"end": 12269,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12259,
											"end": 12273,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12252,
											"end": 12294,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12135,
											"end": 12301,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12135,
											"end": 12301,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12307,
											"end": 12673,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 12307,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12449,
											"end": 12452,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12470,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 12534,
											"end": 12536,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12529,
											"end": 12532,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12470,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 12470,
											"end": 12537,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12470,
											"end": 12537,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 12470,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12463,
											"end": 12537,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12463,
											"end": 12537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12546,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 12635,
											"end": 12638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12546,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 12546,
											"end": 12639,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12546,
											"end": 12639,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 12546,
											"end": 12639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12664,
											"end": 12666,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12659,
											"end": 12662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12655,
											"end": 12667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12648,
											"end": 12667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12648,
											"end": 12667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12673,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12673,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12673,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12673,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12679,
											"end": 13098,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 12679,
											"end": 13098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12845,
											"end": 12849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12885,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12872,
											"end": 12881,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12868,
											"end": 12886,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12860,
											"end": 12886,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12860,
											"end": 12886,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12932,
											"end": 12941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12926,
											"end": 12930,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12922,
											"end": 12942,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12918,
											"end": 12919,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12916,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12903,
											"end": 12920,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12896,
											"end": 12943,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12960,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 13086,
											"end": 13090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12960,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 12960,
											"end": 13091,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12960,
											"end": 13091,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 12960,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 13091,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 13091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 13098,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 13098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 13098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 13098,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13253,
											"end": 13257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13293,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13280,
											"end": 13289,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13276,
											"end": 13294,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13268,
											"end": 13294,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13268,
											"end": 13294,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13304,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13361,
											"end": 13370,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13348,
											"end": 13354,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13304,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 13304,
											"end": 13375,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13304,
											"end": 13375,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13304,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 13453,
											"end": 13455,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13442,
											"end": 13451,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13438,
											"end": 13456,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13429,
											"end": 13435,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13385,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 13385,
											"end": 13457,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13385,
											"end": 13457,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 13385,
											"end": 13457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13467,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 13535,
											"end": 13537,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13524,
											"end": 13533,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13520,
											"end": 13538,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13511,
											"end": 13517,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13467,
											"end": 13539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 13467,
											"end": 13539,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13467,
											"end": 13539,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 13467,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13546,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13552,
											"end": 13668,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 13552,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13622,
											"end": 13643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 13637,
											"end": 13642,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13622,
											"end": 13643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 13622,
											"end": 13643,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13622,
											"end": 13643,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 13622,
											"end": 13643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13615,
											"end": 13620,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13612,
											"end": 13644,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 13602,
											"end": 13662,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13658,
											"end": 13659,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13648,
											"end": 13660,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13602,
											"end": 13662,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 13602,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13668,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13728,
											"end": 13733,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13753,
											"end": 13766,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13744,
											"end": 13766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13744,
											"end": 13766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13775,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 13799,
											"end": 13804,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13775,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 13775,
											"end": 13805,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13775,
											"end": 13805,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 13775,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13674,
											"end": 13811,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13884,
											"end": 13890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13921,
											"end": 13930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13912,
											"end": 13919,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 13931,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13904,
											"end": 13936,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13901,
											"end": 14020,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13901,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 13901,
											"end": 14020,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13939,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13939,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 13939,
											"end": 14018,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13939,
											"end": 14018,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 13939,
											"end": 14018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13901,
											"end": 14020,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 13901,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14059,
											"end": 14060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14084,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14128,
											"end": 14134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14117,
											"end": 14126,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14113,
											"end": 14135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14084,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 14084,
											"end": 14145,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14084,
											"end": 14145,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 14084,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14074,
											"end": 14145,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14074,
											"end": 14145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14030,
											"end": 14155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13817,
											"end": 14162,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14168,
											"end": 14267,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 14168,
											"end": 14267,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14254,
											"end": 14259,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14248,
											"end": 14260,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14238,
											"end": 14260,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14238,
											"end": 14260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14267,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14267,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14267,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14168,
											"end": 14267,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14273,
											"end": 14580,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 14273,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14341,
											"end": 14342,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14365,
											"end": 14371,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14362,
											"end": 14363,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14359,
											"end": 14372,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14450,
											"end": 14451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14445,
											"end": 14448,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14452,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14435,
											"end": 14453,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14426,
											"end": 14429,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14422,
											"end": 14433,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14415,
											"end": 14454,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14387,
											"end": 14389,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14380,
											"end": 14390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14375,
											"end": 14390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14351,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14482,
											"end": 14488,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14479,
											"end": 14480,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14476,
											"end": 14489,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14473,
											"end": 14574,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14473,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 14473,
											"end": 14574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14562,
											"end": 14563,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14553,
											"end": 14559,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14548,
											"end": 14551,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14544,
											"end": 14560,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14537,
											"end": 14564,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14473,
											"end": 14574,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 14473,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14273,
											"end": 14580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14273,
											"end": 14580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14273,
											"end": 14580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14273,
											"end": 14580,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14674,
											"end": 14677,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14702,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14735,
											"end": 14740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14702,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 14702,
											"end": 14741,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14702,
											"end": 14741,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 14702,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14757,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 14821,
											"end": 14827,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14816,
											"end": 14819,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14757,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 14757,
											"end": 14828,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14757,
											"end": 14828,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 14757,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14750,
											"end": 14828,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14750,
											"end": 14828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14837,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14882,
											"end": 14888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14877,
											"end": 14880,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14870,
											"end": 14874,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14863,
											"end": 14868,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14859,
											"end": 14875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14837,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 14837,
											"end": 14889,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14837,
											"end": 14889,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 14837,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14914,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 14936,
											"end": 14942,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14914,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 14914,
											"end": 14943,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14914,
											"end": 14943,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 14914,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14909,
											"end": 14912,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14944,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14898,
											"end": 14944,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14898,
											"end": 14944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14678,
											"end": 14950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14586,
											"end": 14950,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15097,
											"end": 15101,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15135,
											"end": 15137,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15124,
											"end": 15133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15120,
											"end": 15138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15138,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15148,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 15216,
											"end": 15217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15205,
											"end": 15214,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15201,
											"end": 15218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15192,
											"end": 15198,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15148,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 15148,
											"end": 15219,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15148,
											"end": 15219,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 15148,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15266,
											"end": 15275,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15260,
											"end": 15264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15256,
											"end": 15276,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15240,
											"end": 15249,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15236,
											"end": 15254,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15229,
											"end": 15277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15294,
											"end": 15372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15358,
											"end": 15364,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15294,
											"end": 15372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 15294,
											"end": 15372,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15294,
											"end": 15372,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 15294,
											"end": 15372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15286,
											"end": 15372,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15286,
											"end": 15372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 15379,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15442,
											"end": 15447,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15473,
											"end": 15479,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15467,
											"end": 15480,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15458,
											"end": 15480,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15458,
											"end": 15480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15489,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 15516,
											"end": 15521,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15489,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 15489,
											"end": 15522,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15489,
											"end": 15522,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 15489,
											"end": 15522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15385,
											"end": 15528,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15604,
											"end": 15610,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15655,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15641,
											"end": 15650,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15632,
											"end": 15639,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15628,
											"end": 15651,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15624,
											"end": 15656,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 15621,
											"end": 15740,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15621,
											"end": 15740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 15621,
											"end": 15740,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15659,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 15659,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 15659,
											"end": 15738,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15659,
											"end": 15738,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 15659,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15621,
											"end": 15740,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 15621,
											"end": 15740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15779,
											"end": 15780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15804,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 15860,
											"end": 15867,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15851,
											"end": 15857,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15840,
											"end": 15849,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15836,
											"end": 15858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15804,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 15804,
											"end": 15868,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15804,
											"end": 15868,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 15804,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15794,
											"end": 15868,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15794,
											"end": 15868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15750,
											"end": 15878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15534,
											"end": 15885,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16068,
											"end": 16072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16106,
											"end": 16109,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 16095,
											"end": 16104,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16091,
											"end": 16110,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16083,
											"end": 16110,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16083,
											"end": 16110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16120,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16177,
											"end": 16186,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16173,
											"end": 16190,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16164,
											"end": 16170,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16120,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 16120,
											"end": 16191,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16120,
											"end": 16191,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 16120,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 16269,
											"end": 16271,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16267,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16245,
											"end": 16251,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 16201,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16283,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 16351,
											"end": 16353,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16340,
											"end": 16349,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16336,
											"end": 16354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16327,
											"end": 16333,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16283,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 16283,
											"end": 16355,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16283,
											"end": 16355,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 16283,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 16433,
											"end": 16435,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16422,
											"end": 16431,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16418,
											"end": 16436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16415,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 16365,
											"end": 16437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15891,
											"end": 16444,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16485,
											"end": 16492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16525,
											"end": 16529,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 16518,
											"end": 16523,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16514,
											"end": 16530,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16503,
											"end": 16530,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16503,
											"end": 16530,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16450,
											"end": 16536,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16542,
											"end": 16722,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 16542,
											"end": 16722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16590,
											"end": 16667,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16587,
											"end": 16588,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16668,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16687,
											"end": 16691,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 16684,
											"end": 16685,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16677,
											"end": 16692,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16711,
											"end": 16715,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16708,
											"end": 16709,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16701,
											"end": 16716,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16758,
											"end": 16759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16775,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 16791,
											"end": 16792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16775,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 16775,
											"end": 16793,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16775,
											"end": 16793,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 16775,
											"end": 16793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16770,
											"end": 16793,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16770,
											"end": 16793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16807,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 16823,
											"end": 16824,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16807,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 16807,
											"end": 16825,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16807,
											"end": 16825,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 16807,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16802,
											"end": 16825,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16802,
											"end": 16825,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16844,
											"end": 16845,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16834,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 16834,
											"end": 16869,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16834,
											"end": 16869,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 16834,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16890,
											"end": 16891,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16887,
											"end": 16888,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16883,
											"end": 16892,
											"name": "MOD",
											"source": 14
										},
										{
											"begin": 16878,
											"end": 16892,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16878,
											"end": 16892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16728,
											"end": 16898,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16904,
											"end": 17084,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 16904,
											"end": 17084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16952,
											"end": 17029,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16949,
											"end": 16950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16942,
											"end": 17030,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17049,
											"end": 17053,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 17046,
											"end": 17047,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 17039,
											"end": 17054,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17073,
											"end": 17077,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17070,
											"end": 17071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17063,
											"end": 17078,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17090,
											"end": 17192,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 17090,
											"end": 17192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17132,
											"end": 17140,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17179,
											"end": 17184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17176,
											"end": 17177,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17172,
											"end": 17185,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 17151,
											"end": 17185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17151,
											"end": 17185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17090,
											"end": 17192,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17090,
											"end": 17192,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17090,
											"end": 17192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17090,
											"end": 17192,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17259,
											"end": 17264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17290,
											"end": 17296,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17281,
											"end": 17296,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17281,
											"end": 17296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17314,
											"end": 17319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17305,
											"end": 17319,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17305,
											"end": 17319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17349,
											"end": 17350,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17339,
											"end": 17347,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17336,
											"end": 17351,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17444,
											"end": 17448,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17439,
											"end": 17442,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17435,
											"end": 17449,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 17429,
											"end": 17433,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17426,
											"end": 17450,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17423,
											"end": 17473,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17423,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 17423,
											"end": 17473,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17453,
											"end": 17471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 17453,
											"end": 17471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 17453,
											"end": 17471,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17453,
											"end": 17471,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 17453,
											"end": 17471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17423,
											"end": 17473,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 17423,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17503,
											"end": 17504,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17493,
											"end": 17501,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17489,
											"end": 17505,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17486,
											"end": 17937,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17486,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 17486,
											"end": 17937,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17918,
											"end": 17922,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17911,
											"end": 17916,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17907,
											"end": 17923,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17898,
											"end": 17923,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17486,
											"end": 17937,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 17486,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17968,
											"end": 17972,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17962,
											"end": 17966,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17958,
											"end": 17973,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 17950,
											"end": 17973,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17950,
											"end": 17973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17998,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 18021,
											"end": 18029,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17998,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 17998,
											"end": 18030,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17998,
											"end": 18030,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 17998,
											"end": 18030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17986,
											"end": 18030,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17986,
											"end": 18030,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 17328,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17198,
											"end": 18046,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18106,
											"end": 18111,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18297,
											"end": 18305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18287,
											"end": 18327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 18287,
											"end": 18327,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18318,
											"end": 18319,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18309,
											"end": 18319,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18309,
											"end": 18319,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18320,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 18320,
											"end": 18325,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18287,
											"end": 18327,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 18287,
											"end": 18327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18346,
											"end": 18350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18336,
											"end": 18372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 18336,
											"end": 18372,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18363,
											"end": 18364,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18364,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18354,
											"end": 18364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18365,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 18365,
											"end": 18370,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18336,
											"end": 18372,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 18336,
											"end": 18372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18432,
											"end": 18436,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18480,
											"end": 18481,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18475,
											"end": 18502,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18475,
											"end": 18502,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18475,
											"end": 18502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 18475,
											"end": 18502,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18516,
											"end": 18517,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18511,
											"end": 18702,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18511,
											"end": 18702,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18511,
											"end": 18702,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 18511,
											"end": 18702,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18425,
											"end": 18702,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 18425,
											"end": 18702,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18475,
											"end": 18502,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 18475,
											"end": 18502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18493,
											"end": 18494,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18484,
											"end": 18494,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18484,
											"end": 18494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 18495,
											"end": 18500,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18511,
											"end": 18702,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 18511,
											"end": 18702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18556,
											"end": 18559,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 18546,
											"end": 18554,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18543,
											"end": 18560,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18540,
											"end": 18583,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18540,
											"end": 18583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 18540,
											"end": 18583,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 18563,
											"end": 18581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18540,
											"end": 18583,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 18540,
											"end": 18583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18612,
											"end": 18620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 18610,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18605,
											"end": 18621,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 18596,
											"end": 18621,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18596,
											"end": 18621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18647,
											"end": 18650,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18640,
											"end": 18645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18637,
											"end": 18651,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18634,
											"end": 18674,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18634,
											"end": 18674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 18634,
											"end": 18674,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18654,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 18654,
											"end": 18672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 18654,
											"end": 18672,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18654,
											"end": 18672,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 18654,
											"end": 18672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18634,
											"end": 18674,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 18634,
											"end": 18674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18687,
											"end": 18692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18687,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 18687,
											"end": 18692,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18425,
											"end": 18702,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 18425,
											"end": 18702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18425,
											"end": 18702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18811,
											"end": 18813,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18801,
											"end": 18809,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18798,
											"end": 18814,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18792,
											"end": 18795,
											"name": "PUSH",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 18786,
											"end": 18790,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18783,
											"end": 18796,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18779,
											"end": 18815,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18761,
											"end": 18763,
											"name": "PUSH",
											"source": 14,
											"value": "4E"
										},
										{
											"begin": 18751,
											"end": 18759,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18748,
											"end": 18764,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18743,
											"end": 18745,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 18737,
											"end": 18741,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18734,
											"end": 18746,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 18730,
											"end": 18765,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 18714,
											"end": 18825,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 18711,
											"end": 18957,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18711,
											"end": 18957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 18711,
											"end": 18957,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18867,
											"end": 18875,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18861,
											"end": 18865,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18857,
											"end": 18876,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 18848,
											"end": 18876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18848,
											"end": 18876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18902,
											"end": 18905,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18895,
											"end": 18900,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18892,
											"end": 18906,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 18889,
											"end": 18929,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18889,
											"end": 18929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 18889,
											"end": 18929,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18889,
											"end": 18929,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 18889,
											"end": 18929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18942,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 18942,
											"end": 18947,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18711,
											"end": 18957,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 18711,
											"end": 18957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18982,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 19020,
											"end": 19023,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 19018,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19004,
											"end": 19008,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19001,
											"end": 19002,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18982,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 18982,
											"end": 19024,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18982,
											"end": 19024,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 18982,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18967,
											"end": 19024,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18967,
											"end": 19024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18967,
											"end": 19024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18967,
											"end": 19024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19056,
											"end": 19060,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19051,
											"end": 19054,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19047,
											"end": 19061,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 19040,
											"end": 19045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19037,
											"end": 19062,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19034,
											"end": 19085,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19034,
											"end": 19085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 19034,
											"end": 19085,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 19065,
											"end": 19083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19034,
											"end": 19085,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 19034,
											"end": 19085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19114,
											"end": 19118,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19107,
											"end": 19112,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19119,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 19094,
											"end": 19119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19094,
											"end": 19119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18052,
											"end": 19125,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19189,
											"end": 19194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19213,
											"end": 19236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 19231,
											"end": 19235,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19213,
											"end": 19236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 19213,
											"end": 19236,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19213,
											"end": 19236,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 19213,
											"end": 19236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19205,
											"end": 19236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19205,
											"end": 19236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19257,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 19273,
											"end": 19281,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19257,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 19257,
											"end": 19282,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19257,
											"end": 19282,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 19257,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19245,
											"end": 19282,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19245,
											"end": 19282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19301,
											"end": 19405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 19338,
											"end": 19404,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19328,
											"end": 19336,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19322,
											"end": 19326,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19301,
											"end": 19405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 19301,
											"end": 19405,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19301,
											"end": 19405,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 19301,
											"end": 19405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19292,
											"end": 19405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19292,
											"end": 19405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19131,
											"end": 19412,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19418,
											"end": 19598,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 19418,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19466,
											"end": 19543,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19463,
											"end": 19464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19456,
											"end": 19544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19563,
											"end": 19567,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 19560,
											"end": 19561,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 19553,
											"end": 19568,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19587,
											"end": 19591,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 19584,
											"end": 19585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19577,
											"end": 19592,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19644,
											"end": 19651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19667,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 19685,
											"end": 19686,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19667,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 19667,
											"end": 19687,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19667,
											"end": 19687,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 19667,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19662,
											"end": 19687,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19662,
											"end": 19687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 19719,
											"end": 19720,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19696,
											"end": 19721,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19696,
											"end": 19721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19889,
											"end": 19890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19821,
											"end": 19887,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19817,
											"end": 19891,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 19814,
											"end": 19815,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19811,
											"end": 19892,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19806,
											"end": 19807,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19799,
											"end": 19808,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19792,
											"end": 19809,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19788,
											"end": 19893,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19944,
											"end": 19945,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19941,
											"end": 19942,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19937,
											"end": 19946,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 19926,
											"end": 19946,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19926,
											"end": 19946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19604,
											"end": 19952,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19996,
											"end": 19997,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20013,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 20029,
											"end": 20030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20013,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 20013,
											"end": 20031,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20013,
											"end": 20031,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 20013,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20008,
											"end": 20031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20008,
											"end": 20031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20045,
											"end": 20063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 20061,
											"end": 20062,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20045,
											"end": 20063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 20045,
											"end": 20063,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20045,
											"end": 20063,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 20045,
											"end": 20063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20040,
											"end": 20063,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20040,
											"end": 20063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20082,
											"end": 20083,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20072,
											"end": 20107,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 20072,
											"end": 20107,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20087,
											"end": 20105,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 20087,
											"end": 20105,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 20087,
											"end": 20105,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20087,
											"end": 20105,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 20087,
											"end": 20105,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20072,
											"end": 20107,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 20072,
											"end": 20107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20129,
											"end": 20130,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20126,
											"end": 20127,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20122,
											"end": 20131,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 20117,
											"end": 20131,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20117,
											"end": 20131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19958,
											"end": 20137,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20183,
											"end": 20186,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20202,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 20220,
											"end": 20221,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20202,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 20202,
											"end": 20222,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20202,
											"end": 20222,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 20202,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20197,
											"end": 20222,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20197,
											"end": 20222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20236,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 20254,
											"end": 20255,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20236,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 20236,
											"end": 20256,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20236,
											"end": 20256,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 20236,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20231,
											"end": 20256,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20231,
											"end": 20256,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20390,
											"end": 20391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20322,
											"end": 20388,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20318,
											"end": 20392,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20315,
											"end": 20316,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20312,
											"end": 20393,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 20309,
											"end": 20416,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20309,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 20309,
											"end": 20416,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20309,
											"end": 20416,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 20309,
											"end": 20416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20440,
											"end": 20441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20437,
											"end": 20438,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20433,
											"end": 20442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20426,
											"end": 20442,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20426,
											"end": 20442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20143,
											"end": 20448,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20454,
											"end": 20621,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 20454,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20491,
											"end": 20494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20514,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 20530,
											"end": 20535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20514,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 20514,
											"end": 20536,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20514,
											"end": 20536,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 20514,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20505,
											"end": 20536,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20505,
											"end": 20536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20558,
											"end": 20562,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 20551,
											"end": 20556,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20548,
											"end": 20563,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20545,
											"end": 20586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 20545,
											"end": 20586,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20566,
											"end": 20584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 20566,
											"end": 20584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 20566,
											"end": 20584,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20566,
											"end": 20584,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 20566,
											"end": 20584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20545,
											"end": 20586,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 20545,
											"end": 20586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20613,
											"end": 20614,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 20606,
											"end": 20611,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20602,
											"end": 20615,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20595,
											"end": 20615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20595,
											"end": 20615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20454,
											"end": 20621,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20454,
											"end": 20621,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20454,
											"end": 20621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20454,
											"end": 20621,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20748,
											"end": 20752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20786,
											"end": 20788,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20775,
											"end": 20784,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20771,
											"end": 20789,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20763,
											"end": 20789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20763,
											"end": 20789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20799,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 20867,
											"end": 20868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20865,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20852,
											"end": 20869,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20843,
											"end": 20849,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20799,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 20799,
											"end": 20870,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20799,
											"end": 20870,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 20799,
											"end": 20870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20880,
											"end": 20952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 20948,
											"end": 20950,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20937,
											"end": 20946,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20933,
											"end": 20951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20924,
											"end": 20930,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20880,
											"end": 20952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 20880,
											"end": 20952,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20880,
											"end": 20952,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 20880,
											"end": 20952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20627,
											"end": 20959,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21067,
											"end": 21078,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21104,
											"end": 21107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21089,
											"end": 21107,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21089,
											"end": 21107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20965,
											"end": 21113,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21119,
											"end": 21292,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 21119,
											"end": 21292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21259,
											"end": 21284,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 21255,
											"end": 21256,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21247,
											"end": 21253,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21243,
											"end": 21257,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21236,
											"end": 21285,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21119,
											"end": 21292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21119,
											"end": 21292,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21298,
											"end": 21700,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 21298,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21458,
											"end": 21461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21479,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 21561,
											"end": 21563,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 21556,
											"end": 21559,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21479,
											"end": 21564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 21479,
											"end": 21564,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21479,
											"end": 21564,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 21479,
											"end": 21564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21472,
											"end": 21564,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21472,
											"end": 21564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21573,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 21662,
											"end": 21665,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21573,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 21573,
											"end": 21666,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21573,
											"end": 21666,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 21573,
											"end": 21666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21691,
											"end": 21693,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 21686,
											"end": 21689,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21682,
											"end": 21694,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21675,
											"end": 21694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21675,
											"end": 21694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21298,
											"end": 21700,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21298,
											"end": 21700,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21298,
											"end": 21700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21298,
											"end": 21700,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21812,
											"end": 21815,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21840,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 21873,
											"end": 21878,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21840,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 21840,
											"end": 21879,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21840,
											"end": 21879,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 21840,
											"end": 21879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21895,
											"end": 21984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 21977,
											"end": 21983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21972,
											"end": 21975,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21895,
											"end": 21984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 21895,
											"end": 21984,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21895,
											"end": 21984,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 21895,
											"end": 21984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21984,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21993,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 22038,
											"end": 22044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22033,
											"end": 22036,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22026,
											"end": 22030,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22019,
											"end": 22024,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 22015,
											"end": 22031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21993,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 21993,
											"end": 22045,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21993,
											"end": 22045,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 21993,
											"end": 22045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22070,
											"end": 22076,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 22065,
											"end": 22068,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22054,
											"end": 22077,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22054,
											"end": 22077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21816,
											"end": 22083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21706,
											"end": 22083,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22089,
											"end": 22256,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 22089,
											"end": 22256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22229,
											"end": 22248,
											"name": "PUSH",
											"source": 14,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 22225,
											"end": 22226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22217,
											"end": 22223,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22213,
											"end": 22227,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22206,
											"end": 22249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22089,
											"end": 22256,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22089,
											"end": 22256,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22262,
											"end": 22664,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 22262,
											"end": 22664,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22422,
											"end": 22425,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22443,
											"end": 22528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 22525,
											"end": 22527,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 22520,
											"end": 22523,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22443,
											"end": 22528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 22443,
											"end": 22528,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22443,
											"end": 22528,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 22443,
											"end": 22528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22436,
											"end": 22528,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22436,
											"end": 22528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22537,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 22626,
											"end": 22629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22537,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 22537,
											"end": 22630,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22537,
											"end": 22630,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 22537,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22655,
											"end": 22657,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 22650,
											"end": 22653,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22646,
											"end": 22658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22639,
											"end": 22658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22639,
											"end": 22658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22262,
											"end": 22664,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22262,
											"end": 22664,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22262,
											"end": 22664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22262,
											"end": 22664,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23052,
											"end": 23055,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23074,
											"end": 23222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 23218,
											"end": 23221,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23074,
											"end": 23222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 23074,
											"end": 23222,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23074,
											"end": 23222,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 23074,
											"end": 23222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23067,
											"end": 23222,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23067,
											"end": 23222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 23330,
											"end": 23333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23321,
											"end": 23327,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23239,
											"end": 23334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 23239,
											"end": 23334,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23239,
											"end": 23334,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 23239,
											"end": 23334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23232,
											"end": 23334,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23232,
											"end": 23334,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23351,
											"end": 23499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 23495,
											"end": 23498,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23351,
											"end": 23499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 23351,
											"end": 23499,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23351,
											"end": 23499,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 23351,
											"end": 23499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23344,
											"end": 23499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23344,
											"end": 23499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23516,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 23607,
											"end": 23610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23598,
											"end": 23604,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23516,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 23516,
											"end": 23611,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23516,
											"end": 23611,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 23516,
											"end": 23611,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23509,
											"end": 23611,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23509,
											"end": 23611,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23628,
											"end": 23631,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23621,
											"end": 23631,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23621,
											"end": 23631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22670,
											"end": 23637,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23756,
											"end": 23760,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23794,
											"end": 23796,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23779,
											"end": 23797,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23771,
											"end": 23797,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23771,
											"end": 23797,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23843,
											"end": 23852,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23837,
											"end": 23841,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23833,
											"end": 23853,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23829,
											"end": 23830,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23818,
											"end": 23827,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23814,
											"end": 23831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23807,
											"end": 23854,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23871,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 23944,
											"end": 23948,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23935,
											"end": 23941,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23871,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 23871,
											"end": 23949,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23871,
											"end": 23949,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 23871,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23863,
											"end": 23949,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23863,
											"end": 23949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23643,
											"end": 23956,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23962,
											"end": 24133,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 23962,
											"end": 24133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24001,
											"end": 24004,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24024,
											"end": 24048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 24042,
											"end": 24047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24024,
											"end": 24048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 24024,
											"end": 24048,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24024,
											"end": 24048,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 24024,
											"end": 24048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24015,
											"end": 24048,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24015,
											"end": 24048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24070,
											"end": 24074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24063,
											"end": 24068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24060,
											"end": 24075,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 24078,
											"end": 24096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 24078,
											"end": 24096,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24078,
											"end": 24096,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 24078,
											"end": 24096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 24057,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24125,
											"end": 24126,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 24118,
											"end": 24123,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24114,
											"end": 24127,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24107,
											"end": 24127,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24107,
											"end": 24127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23962,
											"end": 24133,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23962,
											"end": 24133,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23962,
											"end": 24133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23962,
											"end": 24133,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24139,
											"end": 24321,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 24139,
											"end": 24321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24279,
											"end": 24313,
											"name": "PUSH",
											"source": 14,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 24275,
											"end": 24276,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24267,
											"end": 24273,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24263,
											"end": 24277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24256,
											"end": 24314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24139,
											"end": 24321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24139,
											"end": 24321,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24327,
											"end": 24693,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 24327,
											"end": 24693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24469,
											"end": 24472,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24490,
											"end": 24557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 24554,
											"end": 24556,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24549,
											"end": 24552,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24490,
											"end": 24557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 24490,
											"end": 24557,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24490,
											"end": 24557,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 24490,
											"end": 24557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24483,
											"end": 24557,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24483,
											"end": 24557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24566,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 24655,
											"end": 24658,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24566,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 24566,
											"end": 24659,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24566,
											"end": 24659,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 24566,
											"end": 24659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24684,
											"end": 24686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24679,
											"end": 24682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24675,
											"end": 24687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24668,
											"end": 24687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24668,
											"end": 24687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24327,
											"end": 24693,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24327,
											"end": 24693,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24327,
											"end": 24693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24327,
											"end": 24693,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24699,
											"end": 25118,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 24699,
											"end": 25118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24865,
											"end": 24869,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24903,
											"end": 24905,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24892,
											"end": 24901,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24888,
											"end": 24906,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24880,
											"end": 24906,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24880,
											"end": 24906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24952,
											"end": 24961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24946,
											"end": 24950,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24942,
											"end": 24962,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24938,
											"end": 24939,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24927,
											"end": 24936,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24923,
											"end": 24940,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24916,
											"end": 24963,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24980,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 25106,
											"end": 25110,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24980,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 24980,
											"end": 25111,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24980,
											"end": 25111,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 24980,
											"end": 25111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24972,
											"end": 25111,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24972,
											"end": 25111,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24699,
											"end": 25118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24699,
											"end": 25118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24699,
											"end": 25118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24699,
											"end": 25118,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"SQFi()": "52c6159f",
							"amount1()": "f400fde4",
							"bytes32ToAmount16(bytes32)": "dd23faf3",
							"createSQFI(string)": "841acc5d",
							"editSupportedFee(address,uint256)": "945099bc",
							"fee1()": "c6098256",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uncraft(uint256)": "0a1ac657",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sqfi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fee1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fee1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"CraftSQFI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"FeeChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"UncraftSQFI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SQFi\",\"outputs\":[{\"internalType\":\"contract ISQFItem\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAmount16\",\"outputs\":[{\"internalType\":\"uint256[16]\",\"name\":\"amount\",\"type\":\"uint256[16]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"createSQFI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fee1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"editSupportedFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uncraft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/SQFI_Factory.sol\":\"ParagonFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/AccessControl.sol\":{\"keccak256\":\"0x850cee2bcf1bbcd0b0a1a3ef8d9ce0ed789b807d8a4c0e2dd5b2b987bef691eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1fb40d0c4deb123b7322f8dbc1635572a628fee2f383a71cf8c0d61b6c669c4\",\"dweb:/ipfs/QmUJC8kZsq69SDDiTp5PoMTEgVzW4pjwHgXW6pbdScMAA9\"]},\"contracts/SQFITEM/Address.sol\":{\"keccak256\":\"0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775\",\"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3\"]},\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]},\"contracts/SQFITEM/ERC165.sol\":{\"keccak256\":\"0x0969c3b761eb3af95a44d2c5b89822572d87441f2ca64d9fa80d7cbab667e42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fac9609abaa5cab3d96f7ebdae42570f8be9dfd5b8578289ae1aceeaa503b6\",\"dweb:/ipfs/QmX9vGsJP3fgD1W6cVTsp2HFCaD3Gek6ZELT5167eJ2j1T\"]},\"contracts/SQFITEM/IAccessControl.sol\":{\"keccak256\":\"0x287306f447febc349d34d6b1ef445a285370ec0ddac2ede071e447f00b642ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffffd92659e8a50deda3cebb149d697cdc4e9f0b5abfc55d0c2584aeab0cce36\",\"dweb:/ipfs/QmRaiwwYKHxUf4Uy4fWo6qzAkBF7NaeydMrKumP3fXCDRC\"]},\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]},\"contracts/SQFITEM/IERC20.sol\":{\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5\",\"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF\"]},\"contracts/SQFITEM/ISQFItem.sol\":{\"keccak256\":\"0x31d36c8072505efbe076b179b7b96a53674c416fbc47f37983428761c657bf59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cc8dc106c41e138684151c204872365446582d080fa7d371b0d47b7d02f740c\",\"dweb:/ipfs/QmU6G8fFxmnCkDWvoGop8hcq7mT2CkCBxu1Mai72q9yztS\"]},\"contracts/SQFITEM/Math.sol\":{\"keccak256\":\"0xef7b3fc139eede8f159d204c982d86775350be2e81b5fecf97731d531223256e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c0ae51ae001dd3028a510d751a8bd473d9c2f99359158817ac4860d3e20b60\",\"dweb:/ipfs/QmYSSmmzH2SHDtVMA5xGHros8cmnVpq3dL9xawkQTGdWm4\"]},\"contracts/SQFITEM/Pausable.sol\":{\"keccak256\":\"0x98503616f3138d6de41a6577dca9f9f38c2a710131f8aaf13f8eceb79097ac27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c69b0682f1fa3fe9485bfaf7de1b1d57d1a9efebab659df8fb56153c42aa1a9\",\"dweb:/ipfs/Qme4MTtDxVE3dm47GeWF65sCycxVF7CVr55aq75cCzq8Be\"]},\"contracts/SQFITEM/SQFI_Factory.sol\":{\"keccak256\":\"0x00612f378f2ac3523a0c37bfaba702c667f1ffcecbefd588c8252c969f0c74b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://606061f4ad019d27800ae384dc9af509005d5ac4a6ed408366210647dbe9e7a2\",\"dweb:/ipfs/QmZPULsjqiBU5k7WyD2xYevow1EW9mAn1uyjUAeSCxu7Pe\"]},\"contracts/SQFITEM/SafeERC20.sol\":{\"keccak256\":\"0x302447efaecd2f0450ed5cba9431977b8be861d4941aae3dbaa8807cd109e7c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec766e155ddbe02a015b5b3963d3bc146d2eb3de7e6936b810c4040515b18fa1\",\"dweb:/ipfs/QmW3dukGtJ2g8pimiHADFd6cbeppqhAimy3pAqSbZnGT5B\"]},\"contracts/SQFITEM/SafeMath.sol\":{\"keccak256\":\"0x7408e0b6e09c3e683d0666d319daaf6f2b4e2b1c063dd9f857c4af5158491021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a9f1585597d72b8b18578a6e6c13f8716e00bd806325babb42db1d12361429\",\"dweb:/ipfs/QmfYUash3a9F22mQWAmH2ZW94nm66hJe8s7jy5xyq5o1q8\"]},\"contracts/SQFITEM/Strings.sol\":{\"keccak256\":\"0x680df08ddcc0584a8172db776bffd1753c893c13bcd18b928e22027ae441b000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637df747e24b006779e7c945cb0f979c60bbd861bae42254b9814762c0dfba4f\",\"dweb:/ipfs/QmPChjSFzHTESQsNycgZ7mPG8Xd31hcZKaTN2VLbiAngC9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 24,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1043,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "SQFi",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ISQFItem)840"
							},
							{
								"astId": 1050,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "fee1",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1053,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "amount1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ISQFItem)840": {
								"encoding": "inplace",
								"label": "contract ISQFItem",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/SafeERC20.sol\":564:3834  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/SafeERC20.sol\":564:3834  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH17 0xDAA3B2B997A2CC1BA30221FC8CBB5681B0 0xA8 ORIGIN 0xC2 0x24 0xD1 BYTE 0xEF DIV MSTORE8 SWAP12 AND DUP6 GT PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "564:3270:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH17 0xDAA3B2B997A2CC1BA30221FC8CBB5681B0 0xA8 ORIGIN 0xC2 0x24 0xD1 BYTE 0xEF DIV MSTORE8 SWAP12 AND DUP6 GT PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "564:3270:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033",
									".code": [
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Address.sol\":{\"keccak256\":\"0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775\",\"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3\"]},\"contracts/SQFITEM/IERC20.sol\":{\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5\",\"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF\"]},\"contracts/SQFITEM/SafeERC20.sol\":{\"keccak256\":\"0x302447efaecd2f0450ed5cba9431977b8be861d4941aae3dbaa8807cd109e7c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec766e155ddbe02a015b5b3963d3bc146d2eb3de7e6936b810c4040515b18fa1\",\"dweb:/ipfs/QmW3dukGtJ2g8pimiHADFd6cbeppqhAimy3pAqSbZnGT5B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x910D0FCFC93383B305405490 0xBD ADDMOD 0x4D PUSH2 0xCE37 0x2E 0xA8 CODECOPY 0x4B 0x27 0xE3 0xA6 SLOAD PUSH9 0x1AEB764864736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "398:6301:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x910D0FCFC93383B305405490 0xBD ADDMOD 0x4D PUSH2 0xCE37 0x2E 0xA8 CODECOPY 0x4B 0x27 0xE3 0xA6 SLOAD PUSH9 0x1AEB764864736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "398:6301:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/SafeMath.sol\":{\"keccak256\":\"0x7408e0b6e09c3e683d0666d319daaf6f2b4e2b1c063dd9f857c4af5158491021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a9f1585597d72b8b18578a6e6c13f8716e00bd806325babb42db1d12361429\",\"dweb:/ipfs/QmfYUash3a9F22mQWAmH2ZW94nm66hJe8s7jy5xyq5o1q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/Strings.sol\":93:1978  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/Strings.sol\":93:1978  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 STATICCALL MSTORE 0xBC 0xEB GASLIMIT 0x24 0x4E 0xDB 0xBC DUP13 0xE0 0xDF DUP13 DUP15 0x5C MOD SLT PUSH14 0xDAB02A3A66C88A944447BABA1664 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "93:1885:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 STATICCALL MSTORE 0xBC 0xEB GASLIMIT 0x24 0x4E 0xDB 0xBC DUP13 0xE0 0xDF DUP13 DUP15 0x5C MOD SLT PUSH14 0xDAB02A3A66C88A944447BABA1664 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "93:1885:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033",
									".code": [
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Strings.sol\":{\"keccak256\":\"0x680df08ddcc0584a8172db776bffd1753c893c13bcd18b928e22027ae441b000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637df747e24b006779e7c945cb0f979c60bbd861bae42254b9814762c0dfba4f\",\"dweb:/ipfs/QmPChjSFzHTESQsNycgZ7mPG8Xd31hcZKaTN2VLbiAngC9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SQFITEM/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							306
						],
						"Context": [
							625
						],
						"ERC165": [
							649
						],
						"IAccessControl": [
							722
						],
						"IERC165": [
							734
						],
						"Strings": [
							2025
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/SQFITEM/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 723,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Context.sol",
							"file": "./Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 626,
							"src": "89:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Strings.sol",
							"file": "./Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 2026,
							"src": "113:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 650,
							"src": "137:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 625,
										"src": "1731:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1731:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "1740:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1740:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "1756:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1756:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "161:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306,
								649,
								734,
								722,
								625
							],
							"name": "AccessControl",
							"nameLocation": "1714:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1820:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1795:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1795:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1845:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1837:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1837:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1776:8:0",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "1769:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "1904:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1867:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1867:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1886:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1886:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "1941:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1917:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1917:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1962:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2385:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2406:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 34,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2412:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2395:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2395:30:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2435:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1973:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2362:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2379:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2371:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:14:0"
									},
									"src": "2353:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2601:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2618:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "2638:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$722_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$722_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2633:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2633:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$722",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2633:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2618:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2693:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2669:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$306_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 648,
															"src": "2669:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2669:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2618:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2611:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2449:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2519:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2577:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2544:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2537:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2594:6:0"
									},
									"scope": 306,
									"src": "2510:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										689
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2883:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2900:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2907:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2900:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2900:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2900:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2893:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2718:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2808:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2859:8:0"
									},
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2824:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2816:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2838:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2830:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2877:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:0"
									},
									"scope": 306,
									"src": "2799:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3282:419:0",
										"statements": [
											{
												"condition": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3296:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 90,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "3305:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 91,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "3311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 89,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3297:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"nodeType": "IfStatement",
												"src": "3292:403:0",
												"trueBody": {
													"id": 121,
													"nodeType": "Block",
													"src": "3321:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3429:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 104,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 86,
																										"src": "3508:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 103,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3500:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 102,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "3500:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 105,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3500:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 106,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3518:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 100,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2025,
																								"src": "3480:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2025_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2024,
																							"src": "3480:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3480:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 108,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3547:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 113,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 84,
																										"src": "3620:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 112,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3612:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 111,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "3612:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3612:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3627:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 109,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2025,
																								"src": "3592:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2025_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2024,
																							"src": "3592:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3592:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 97,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3387:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 98,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3387:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3387:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 96,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3359:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 95,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3359:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3359:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 94,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3335:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3335:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "3335:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2942:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3226:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3245:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3237:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3259:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:31:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3282:0:0"
									},
									"scope": 306,
									"src": "3217:484:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "3957:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 133,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3974:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 135,
														"indexExpression": {
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "3974:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 132,
												"id": 137,
												"nodeType": "Return",
												"src": "3967:29:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3707:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3891:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3930:8:0"
									},
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 126,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:14:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:0"
									},
									"scope": 306,
									"src": "3882:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4356:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 155,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 153,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "4366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4366:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "4366:25:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4009:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 149,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4349:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 148,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4336:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4336:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 147,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4327:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4327:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4262:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4318:8:0"
									},
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4280:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4272:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:31:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4356:0:0"
									},
									"scope": 306,
									"src": "4253:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										713
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "4736:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4758:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 175,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "4746:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4746:26:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4404:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 169,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 168,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4716:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4707:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4707:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4641:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4698:8:0"
									},
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "4652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "4666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:31:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4736:0:0"
									},
									"scope": 306,
									"src": "4632:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5347:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "5365:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 190,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "5376:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5376:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5365:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5390:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5357:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "5469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "5451:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5451:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5451:26:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "4785:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5279:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5338:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5300:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5292:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 181,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5291:31:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5347:0:0"
									},
									"scope": 306,
									"src": "5270:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6117:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "6127:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6127:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "6127:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5490:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6058:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:31:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:0"
									},
									"scope": 306,
									"src": "6049:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6357:174:0",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6375:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "6367:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 224,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6408:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 226,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6395:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6395:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6367:46:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 230,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "6423:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 232,
															"indexExpression": {
																"id": 231,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6430:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6423:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "6423:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "6448:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6423:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "6423:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6489:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 239,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6495:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 240,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "6514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6472:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6472:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "EmitStatement",
												"src": "6467:57:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6165:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6293:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6329:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6321:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:33:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6357:0:0"
									},
									"scope": 306,
									"src": "6284:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "6596:165:0",
										"statements": [
											{
												"condition": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6610:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 252,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "6619:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 253,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "6625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 251,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6611:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"nodeType": "IfStatement",
												"src": "6606:149:0",
												"trueBody": {
													"id": 272,
													"nodeType": "Block",
													"src": "6635:120:0",
													"statements": [
														{
															"expression": {
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 256,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "6649:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 258,
																			"indexExpression": {
																				"id": 257,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 246,
																				"src": "6656:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6649:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "6649:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 261,
																	"indexExpression": {
																		"id": 260,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "6670:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6649:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6681:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6649:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "6649:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 266,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "6716:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 267,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "6722:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 268,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "6731:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6731:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 265,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "6704:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6704:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 271,
															"nodeType": "EmitStatement",
															"src": "6699:45:0"
														}
													]
												}
											}
										]
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6546:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6565:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6557:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6579:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6556:31:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6596:0:0"
									},
									"scope": 306,
									"src": "6537:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "6827:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 283,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "6849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 284,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "6855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 303,
												"nodeType": "IfStatement",
												"src": "6837:149:0",
												"trueBody": {
													"id": 302,
													"nodeType": "Block",
													"src": "6865:121:0",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 286,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "6879:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"id": 287,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "6886:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6879:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "6879:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 291,
																	"indexExpression": {
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "6900:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6879:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6911:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6879:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "6879:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 296,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "6947:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 297,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "6953:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 298,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "6962:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6962:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 295,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6935:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6935:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 301,
															"nodeType": "EmitStatement",
															"src": "6930:45:0"
														}
													]
												}
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6776:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6810:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6787:31:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6827:0:0"
									},
									"scope": 306,
									"src": "6767:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 307,
							"src": "1696:5298:0",
							"usedErrors": []
						}
					],
					"src": "33:6961:0"
				},
				"id": 0
			},
			"contracts/SQFITEM/Address.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Address.sol",
					"exportedSymbols": {
						"Address": [
							603
						]
					},
					"id": 604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603
							],
							"name": "Address",
							"nameLocation": "134:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "784:311:1",
										"statements": [
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "981:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 319,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 312,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:1",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:1",
														"valueSize": 1
													}
												],
												"id": 320,
												"nodeType": "InlineAssembly",
												"src": "1003:61:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 321,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "1080:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 324,
												"nodeType": "Return",
												"src": "1073:15:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "738:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 603,
									"src": "718:377:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2083:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 337,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		],
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 335,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 340,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2126:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:1"
											},
											{
												"assignments": [
													346,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "2178:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 345,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 353,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 347,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "2196:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 349,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2218:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "2247:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2031:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2058:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:1"
									},
									"scope": 603,
									"src": "2012:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "3155:84:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3185:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3193:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 370,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															397
														],
														"referencedDeclaration": 397,
														"src": "3172:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 375,
												"nodeType": "Return",
												"src": "3165:67:1"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3088:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3104:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3141:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:1"
									},
									"scope": 603,
									"src": "3066:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3608:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3647:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3655:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 393,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3664:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 389,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															417,
															467
														],
														"referencedDeclaration": 467,
														"src": "3625:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 395,
												"nodeType": "Return",
												"src": "3618:59:1"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3492:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3516:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3543:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3594:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:1"
									},
									"scope": 603,
									"src": "3461:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "4189:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "4228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "4236:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4242:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 409,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															417,
															467
														],
														"referencedDeclaration": 467,
														"src": "4206:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 408,
												"id": 415,
												"nodeType": "Return",
												"src": "4199:94:1"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4086:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4110:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4137:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4175:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:1"
									},
									"scope": 603,
									"src": "4046:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "4727:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4770:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 444,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4847:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 443,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "4836:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:1"
											},
											{
												"assignments": [
													450,
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "4900:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 449,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "4914:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 451,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"id": 457,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "4967:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 453,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4941:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 455,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4960:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 462,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5015:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 463,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "5027:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 460,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "4989:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 430,
												"id": 465,
												"nodeType": "Return",
												"src": "4982:58:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4588:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4612:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4639:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4662:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4713:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:1"
									},
									"scope": 603,
									"src": "4548:499:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "5324:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "5360:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5368:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5374:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 477,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															484,
															519
														],
														"referencedDeclaration": 519,
														"src": "5341:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 476,
												"id": 482,
												"nodeType": "Return",
												"src": "5334:80:1"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "5053:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5233:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5260:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5252:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5281:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5268:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5268:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:35:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5310:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5310:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:14:1"
									},
									"scope": 603,
									"src": "5224:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "5763:228:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 498,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "5792:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 497,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5781:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5781:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5801:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5773:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5773:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "5773:67:1"
											},
											{
												"assignments": [
													504,
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5857:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "5852:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 503,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5852:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5879:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "5866:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 505,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5866:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5911:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 507,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5893:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5893:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5893:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 513,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "5950:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 514,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5959:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 515,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5971:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 512,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "5933:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5933:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 517,
												"nodeType": "Return",
												"src": "5926:58:1"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "5427:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5614:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5650:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5642:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5642:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5679:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5666:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5666:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5707:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5693:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5693:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5632:93:1"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5749:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5749:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5748:14:1"
									},
									"scope": 603,
									"src": "5605:386:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "6267:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6305:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "6313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6319:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 529,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															571
														],
														"referencedDeclaration": 571,
														"src": "6284:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6284:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 534,
												"nodeType": "Return",
												"src": "6277:84:1"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "5997:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6179:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6216:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6216:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:35:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6253:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6253:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:14:1"
									},
									"scope": 603,
									"src": "6170:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "6709:232:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 550,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "6738:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 549,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "6727:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6727:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6747:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6719:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "6719:69:1"
											},
											{
												"assignments": [
													556,
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6805:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6800:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 555,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6800:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6827:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6814:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 557,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6814:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"id": 561,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "6861:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6841:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6841:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6799:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 566,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "6909:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 567,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "6921:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 564,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "6883:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6883:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 547,
												"id": 569,
												"nodeType": "Return",
												"src": "6876:58:1"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "6374:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6563:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6601:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6593:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6630:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6617:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6617:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6658:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6644:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6644:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6583:93:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6695:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6695:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:14:1"
									},
									"scope": 603,
									"src": "6554:387:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "7321:532:1",
										"statements": [
											{
												"condition": {
													"id": 583,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "7335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "7392:455:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 587,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7476:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7476:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7496:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7476:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 597,
																"nodeType": "Block",
																"src": "7784:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 594,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "7809:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 593,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7802:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7802:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 596,
																		"nodeType": "ExpressionStatement",
																		"src": "7802:20:1"
																	}
																]
															},
															"id": 598,
															"nodeType": "IfStatement",
															"src": "7472:365:1",
															"trueBody": {
																"id": 592,
																"nodeType": "Block",
																"src": "7499:279:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7619:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7641:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7670:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7664:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7664:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7645:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7713:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7717:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7709:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7709:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7730:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7702:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7702:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7702:44:1"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 576,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7670:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 576,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7717:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 591,
																		"nodeType": "InlineAssembly",
																		"src": "7610:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "7331:516:1",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "7344:42:1",
													"statements": [
														{
															"expression": {
																"id": 584,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7365:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 582,
															"id": 585,
															"nodeType": "Return",
															"src": "7358:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "6947:209:1",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7170:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7201:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7196:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7196:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7231:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7218:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7218:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7265:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7251:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7251:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7186:97:1"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7307:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7307:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7306:14:1"
									},
									"scope": 603,
									"src": "7161:692:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 604,
							"src": "126:7729:1",
							"usedErrors": []
						}
					],
					"src": "33:7822:1"
				},
				"id": 1
			},
			"contracts/SQFITEM/Context.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Context.sol",
					"exportedSymbols": {
						"Context": [
							625
						]
					},
					"id": 626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 605,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 606,
								"nodeType": "StructuredDocumentation",
								"src": "58:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 625,
							"linearizedBaseContracts": [
								625
							],
							"name": "Context",
							"nameLocation": "573:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "649:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 611,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "666:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "666:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 610,
												"id": 613,
												"nodeType": "Return",
												"src": "659:17:2"
											}
										]
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "640:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:2"
									},
									"scope": 625,
									"src": "587:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "756:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 620,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "773:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "773:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 619,
												"id": 622,
												"nodeType": "Return",
												"src": "766:15:2"
											}
										]
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "698:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "740:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:16:2"
									},
									"scope": 625,
									"src": "689:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 626,
							"src": "555:235:2",
							"usedErrors": []
						}
					],
					"src": "33:757:2"
				},
				"id": 2
			},
			"contracts/SQFITEM/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							649
						],
						"IERC165": [
							734
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/SQFITEM/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 628,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 735,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 630,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 734,
										"src": "688:7:3"
									},
									"id": 631,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 629,
								"nodeType": "StructuredDocumentation",
								"src": "83:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								734
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										733
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "854:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 640,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "871:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 642,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "891:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$734_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$734_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 641,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "886:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$734",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "886:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "871:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 639,
												"id": 646,
												"nodeType": "Return",
												"src": "864:47:3"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 636,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "830:8:3"
									},
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "790:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 633,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:3"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "848:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:6:3"
									},
									"scope": 649,
									"src": "763:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 650,
							"src": "660:260:3",
							"usedErrors": []
						}
					],
					"src": "33:887:3"
				},
				"id": 3
			},
			"contracts/SQFITEM/IAccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							722
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "58:89:4",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 722,
							"linearizedBaseContracts": [
								722
							],
							"name": "IAccessControl",
							"nameLocation": "158:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "179:292:4",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 661,
									"name": "RoleAdminChanged",
									"nameLocation": "482:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "515:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "499:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 654,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "537:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "521:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "572:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "556:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:87:4"
									},
									"src": "476:110:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "592:212:4",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 670,
									"name": "RoleGranted",
									"nameLocation": "815:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "843:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "827:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 663,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "865:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "849:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "890:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "874:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:71:4"
									},
									"src": "809:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "904:275:4",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 679,
									"name": "RoleRevoked",
									"nameLocation": "1190:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1218:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1202:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 672,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1240:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1224:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1265:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1249:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:71:4"
									},
									"src": "1184:89:4"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1279:76:4",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1369:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1385:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1377:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1399:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1391:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:31:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1431:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:6:4"
									},
									"scope": 722,
									"src": "1360:77:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1443:184:4",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1641:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1662:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1654:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:14:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1691:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 694,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:9:4"
									},
									"scope": 722,
									"src": "1632:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1706:239:4",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "1959:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1977:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1969:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1991:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1983:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:31:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:4"
									},
									"scope": 722,
									"src": "1950:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "2015:223:4",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2252:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2271:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2263:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2285:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2277:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:31:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2302:0:4"
									},
									"scope": 722,
									"src": "2243:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "2309:480:4",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2803:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2824:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2816:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 715,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2838:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2830:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:31:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:0:4"
									},
									"scope": 722,
									"src": "2794:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 723,
							"src": "148:2710:4",
							"usedErrors": []
						}
					],
					"src": "33:2825:4"
				},
				"id": 4
			},
			"contracts/SQFITEM/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							734
						]
					},
					"id": 735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 725,
								"nodeType": "StructuredDocumentation",
								"src": "58:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 734,
							"linearizedBaseContracts": [
								734
							],
							"name": "IERC165",
							"nameLocation": "348:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "362:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "716:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "741:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "734:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 727,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:20:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "777:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:5"
									},
									"scope": 734,
									"src": "707:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 735,
							"src": "338:447:5",
							"usedErrors": []
						}
					],
					"src": "33:752:5"
				},
				"id": 5
			},
			"contracts/SQFITEM/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 737,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 812,
							"linearizedBaseContracts": [
								812
							],
							"name": "IERC20",
							"nameLocation": "139:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:6"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "269:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:6"
									},
									"scope": 812,
									"src": "223:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "380:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:6"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "420:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:6"
									},
									"scope": 812,
									"src": "361:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "667:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "686:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "720:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:6"
									},
									"scope": 812,
									"src": "649:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1020:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1035:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:6"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1075:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:6"
									},
									"scope": 812,
									"src": "1001:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1754:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1771:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:6"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1805:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:6"
									},
									"scope": 812,
									"src": "1737:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2149:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2173:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2200:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2239:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:6"
									},
									"scope": 812,
									"src": "2118:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 802,
									"name": "Transfer",
									"nameLocation": "2420:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2429:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2451:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2471:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:6"
									},
									"src": "2414:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 811,
									"name": "Approval",
									"nameLocation": "2651:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2660:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2683:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2708:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:6"
									},
									"src": "2645:78:6"
								}
							],
							"scope": 813,
							"src": "129:2596:6",
							"usedErrors": []
						}
					],
					"src": "33:2692:6"
				},
				"id": 6
			},
			"contracts/SQFITEM/ISQFItem.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/ISQFItem.sol",
					"exportedSymbols": {
						"ISQFItem": [
							840
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISQFItem",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 840,
							"linearizedBaseContracts": [
								840
							],
							"name": "ISQFItem",
							"nameLocation": "68:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d204c45e",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "92:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "118:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "110:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "tokenURI_",
												"nameLocation": "144:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "130:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "130:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:59:7"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "178:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:9:7"
									},
									"scope": 840,
									"src": "83:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "202:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "215:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "207:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:17:7"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:7"
									},
									"scope": 840,
									"src": "193:40:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fd2e997e",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "itemInfo",
									"nameLocation": "510:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "527:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "519:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:17:7"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "583:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "575:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "608:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "602:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 834,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "602:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "644:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "628:24:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "628:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:97:7"
									},
									"scope": 840,
									"src": "501:158:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 841,
							"src": "58:603:7",
							"usedErrors": []
						}
					],
					"src": "33:628:7"
				},
				"id": 7
			},
			"contracts/SQFITEM/Math.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Math.sol",
					"exportedSymbols": {
						"Math": [
							928
						]
					},
					"id": 929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 843,
								"nodeType": "StructuredDocumentation",
								"src": "58:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 928,
							"linearizedBaseContracts": [
								928
							],
							"name": "Math",
							"nameLocation": "140:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "282:38:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 853,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "299:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 854,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "304:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "299:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 857,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "312:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "299:14:8",
													"trueExpression": {
														"id": 856,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "308:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 859,
												"nodeType": "Return",
												"src": "292:21:8"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "151:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "224:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "236:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "228:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "247:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "239:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:22:8"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "273:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:9:8"
									},
									"scope": 928,
									"src": "215:105:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "458:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "475:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 872,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "479:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "475:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "475:13:8",
													"trueExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 877,
												"nodeType": "Return",
												"src": "468:20:8"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "326:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "400:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "412:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "404:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "423:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "415:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:22:8"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "449:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:8"
									},
									"scope": 928,
									"src": "391:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "679:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "734:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 890,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "738:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "734:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "733:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "744:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "748:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "744:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "743:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "743:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "733:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 900,
												"nodeType": "Return",
												"src": "726:28:8"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "501:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "617:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "625:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "636:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "670:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:9:8"
									},
									"scope": 928,
									"src": "608:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "1031:123:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 912,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1119:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 913,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "1123:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1119:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 915,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "1128:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 916,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "1132:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1128:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1137:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1128:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1145:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1128:18:8",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1141:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 923,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1127:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1119:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 925,
												"nodeType": "Return",
												"src": "1112:35:8"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "767:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "969:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "985:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "977:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "996:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "988:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:22:8"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1022:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:9:8"
									},
									"scope": 928,
									"src": "960:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 929,
							"src": "132:1024:8",
							"usedErrors": []
						}
					],
					"src": "33:1123:8"
				},
				"id": 8
			},
			"contracts/SQFITEM/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							625
						],
						"Pausable": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "contracts/SQFITEM/Context.sol",
							"file": "./Context.sol",
							"id": 931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 626,
							"src": "58:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 933,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 625,
										"src": "553:7:9"
									},
									"id": 934,
									"nodeType": "InheritanceSpecifier",
									"src": "553:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 932,
								"nodeType": "StructuredDocumentation",
								"src": "83:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								625
							],
							"name": "Pausable",
							"nameLocation": "541:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "567:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 939,
									"name": "Paused",
									"nameLocation": "651:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "666:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "658:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:17:9"
									},
									"src": "645:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "681:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 944,
									"name": "Unpaused",
									"nameLocation": "762:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "779:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "771:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:17:9"
									},
									"src": "756:32:9"
								},
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "807:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "794:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 945,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "794:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "907:32:9",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "917:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "927:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "917:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "917:15:9"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "821:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 955,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:9"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:0:9"
									},
									"scope": 1020,
									"src": "893:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "1087:31:9",
										"statements": [
											{
												"expression": {
													"id": 961,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "1104:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 960,
												"id": 962,
												"nodeType": "Return",
												"src": "1097:14:9"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "945:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1043:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:2:9"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1081:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1081:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:6:9"
									},
									"scope": 1020,
									"src": "1034:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "1329:66:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1347:9:9",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 968,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "1348:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1348:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1358:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1339:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "1339:38:9"
											},
											{
												"id": 974,
												"nodeType": "PlaceholderStatement",
												"src": "1387:1:9"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "1124:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 976,
									"name": "whenNotPaused",
									"nameLocation": "1313:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:2:9"
									},
									"src": "1304:91:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1595:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 980,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "1613:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:8:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1623:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1605:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1605:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1605:41:9"
											},
											{
												"id": 985,
												"nodeType": "PlaceholderStatement",
												"src": "1656:1:9"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1401:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 987,
									"name": "whenPaused",
									"nameLocation": "1582:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1592:2:9"
									},
									"src": "1573:91:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "1848:66:9",
										"statements": [
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "1858:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1858:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "1858:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 998,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1894:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1894:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 997,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1887:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "EmitStatement",
												"src": "1882:25:9"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "1670:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 990,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "1834:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1834:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "1808:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:2:9"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1848:0:9"
									},
									"scope": 1020,
									"src": "1799:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "2094:69:9",
										"statements": [
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2104:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2114:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2104:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2104:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1014,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2143:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2143:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1013,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2134:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "2129:27:9"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "1920:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 987,
												"src": "2083:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2083:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2055:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2063:2:9"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:0:9"
									},
									"scope": 1020,
									"src": "2046:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "523:1642:9",
							"usedErrors": []
						}
					],
					"src": "33:2132:9"
				},
				"id": 9
			},
			"contracts/SQFITEM/SQFI_Factory.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/SQFI_Factory.sol",
					"exportedSymbols": {
						"AccessControl": [
							306
						],
						"Address": [
							603
						],
						"Context": [
							625
						],
						"ERC165": [
							649
						],
						"IAccessControl": [
							722
						],
						"IERC165": [
							734
						],
						"IERC20": [
							812
						],
						"ISQFItem": [
							840
						],
						"Math": [
							928
						],
						"ParagonFactory": [
							1286
						],
						"Pausable": [
							1020
						],
						"SafeERC20": [
							1510
						],
						"SafeMath": [
							1822
						],
						"Strings": [
							2025
						]
					},
					"id": 1287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"absolutePath": "contracts/SQFITEM/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 1023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 1021,
							"src": "62:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/AccessControl.sol",
							"file": "./AccessControl.sol",
							"id": 1024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 307,
							"src": "87:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 1823,
							"src": "117:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 813,
							"src": "142:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 1027,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 1511,
							"src": "165:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Math.sol",
							"file": "./Math.sol",
							"id": 1028,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 929,
							"src": "191:20:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/ISQFItem.sol",
							"file": "./ISQFItem.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1287,
							"sourceUnit": 841,
							"src": "212:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1030,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "319:8:10"
									},
									"id": 1031,
									"nodeType": "InheritanceSpecifier",
									"src": "319:8:10"
								},
								{
									"baseName": {
										"id": 1032,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "329:13:10"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "329:13:10"
								}
							],
							"canonicalName": "ParagonFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1286,
							"linearizedBaseContracts": [
								1286,
								306,
								649,
								734,
								722,
								1020,
								625
							],
							"name": "ParagonFactory",
							"nameLocation": "301:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1036,
									"libraryName": {
										"id": 1034,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1822,
										"src": "355:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "349:27:10",
									"typeName": {
										"id": 1035,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1040,
									"libraryName": {
										"id": 1037,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1510,
										"src": "387:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "381:27:10",
									"typeName": {
										"id": 1039,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1038,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 812,
											"src": "401:6:10"
										},
										"referencedDeclaration": 812,
										"src": "401:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$812",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "52c6159f",
									"id": 1043,
									"mutability": "mutable",
									"name": "SQFi",
									"nameLocation": "429:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1286,
									"src": "413:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISQFItem_$840",
										"typeString": "contract ISQFItem"
									},
									"typeName": {
										"id": 1042,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1041,
											"name": "ISQFItem",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 840,
											"src": "413:8:10"
										},
										"referencedDeclaration": 840,
										"src": "413:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISQFItem_$840",
											"typeString": "contract ISQFItem"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1048,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "463:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1286,
									"src": "439:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1044,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "439:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1046,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "487:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1045,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "477:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1047,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "477:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6098256",
									"id": 1050,
									"mutability": "mutable",
									"name": "fee1",
									"nameLocation": "522:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1286,
									"src": "507:19:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1049,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f400fde4",
									"id": 1053,
									"mutability": "mutable",
									"name": "amount1",
									"nameLocation": "547:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1286,
									"src": "532:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1051,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "532:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030653138",
										"id": 1052,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "557:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"value": "100e18"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d",
									"id": 1063,
									"name": "CraftSQFI",
									"nameLocation": "576:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "603:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "595:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "626:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "618:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "651:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "643:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "673:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "665:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:101:10"
									},
									"src": "570:117:10"
								},
								{
									"anonymous": false,
									"eventSelector": "950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c1",
									"id": 1067,
									"name": "UncraftSQFI",
									"nameLocation": "698:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "727:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "719:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:31:10"
									},
									"src": "692:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "9b3476ac3e923c8beaeffb43856eb1614863b908de32a6a98c91f2672b8d2581",
									"id": 1075,
									"name": "FeeChange",
									"nameLocation": "752:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "770:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "762:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "788:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "780:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "enable",
												"nameLocation": "801:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "796:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "796:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:47:10"
									},
									"src": "746:63:10"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "879:158:10",
										"statements": [
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "SQFi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "889:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISQFItem_$840",
															"typeString": "contract ISQFItem"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1084,
																"name": "_sqfi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "905:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1083,
															"name": "ISQFItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "896:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISQFItem_$840_$",
																"typeString": "type(contract ISQFItem)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "896:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISQFItem_$840",
															"typeString": "contract ISQFItem"
														}
													},
													"src": "889:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISQFItem_$840",
														"typeString": "contract ISQFItem"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "889:22:10"
											},
											{
												"expression": {
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1088,
														"name": "fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "921:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1089,
														"name": "_fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "928:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "921:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "921:12:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1093,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "954:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1094,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "974:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "974:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1092,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "943:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "943:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "943:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1099,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1006:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1019:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1019:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1098,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "995:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "995:35:10"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "_sqfi",
												"nameLocation": "844:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "836:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "_fee1",
												"nameLocation": "867:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "859:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:52:10"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:10"
									},
									"scope": 1286,
									"src": "815:222:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "1160:194:10",
										"statements": [
											{
												"body": {
													"id": 1155,
													"nodeType": "Block",
													"src": "1201:147:10",
													"statements": [
														{
															"expression": {
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1124,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "1215:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$16_memory_ptr",
																			"typeString": "uint256[16] memory"
																		}
																	},
																	"id": 1128,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1125,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "1222:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1226:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "1222:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1215:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1129,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "1247:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$16_memory_ptr",
																				"typeString": "uint256[16] memory"
																			}
																		},
																		"id": 1133,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1130,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "1254:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1258:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1254:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1247:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1136,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1107,
																						"src": "1285:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 1138,
																					"indexExpression": {
																						"id": 1137,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "1290:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1285:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1279:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1134,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1279:5:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1279:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "323536",
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1312:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				},
																				"value": "256"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1145,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1141,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1115,
																									"src": "1318:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "32",
																									"id": 1142,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1322:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"src": "1318:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"hexValue": "30",
																								"id": 1144,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1327:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"src": "1318:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"hexValue": "30",
																							"id": 1147,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1335:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"id": 1148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "1318:18:10",
																						"trueExpression": {
																							"hexValue": "31",
																							"id": 1146,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1331:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 1149,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1317:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1312:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1279:58:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1247:90:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1215:122:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1154,
															"nodeType": "ExpressionStatement",
															"src": "1215:122:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "1188:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1192:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "1188:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"initializationExpression": {
													"assignments": [
														1115
													],
													"declarations": [
														{
															"constant": false,
															"id": 1115,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1181:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1156,
															"src": "1175:7:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1114,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1175:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1117,
													"initialValue": {
														"hexValue": "30",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1185:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1175:11:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1196:3:10",
														"subExpression": {
															"id": 1121,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1196:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1123,
													"nodeType": "ExpressionStatement",
													"src": "1196:3:10"
												},
												"nodeType": "ForStatement",
												"src": "1170:178:10"
											}
										]
									},
									"functionSelector": "dd23faf3",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bytes32ToAmount16",
									"nameLocation": "1052:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1078:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1070:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:14:10"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1148:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1129:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$16_memory_ptr",
													"typeString": "uint256[16]"
												},
												"typeName": {
													"baseType": {
														"id": 1109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1129:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1111,
													"length": {
														"hexValue": "3136",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1137:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "16"
													},
													"nodeType": "ArrayTypeName",
													"src": "1129:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$16_storage_ptr",
														"typeString": "uint256[16]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:27:10"
									},
									"scope": 1286,
									"src": "1043:311:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "1476:57:10",
										"statements": [
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1168,
														"name": "fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1486:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1169,
														"name": "_fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1493:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1486:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "1486:12:10"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "1508:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1173,
														"name": "_amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1518:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1508:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "1508:18:10"
											}
										]
									},
									"functionSelector": "945099bc",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1165,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1456:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1164,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1447:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1447:28:10"
										}
									],
									"name": "editSupportedFee",
									"nameLocation": "1368:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "_fee1",
												"nameLocation": "1402:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1394:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "1425:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1417:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:55:10"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:0:10"
									},
									"scope": 1286,
									"src": "1359:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1637:383:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1186,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "1651:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1661:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1651:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1189,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "1666:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1682:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1674:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1674:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1674:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1666:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1651:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1210,
												"nodeType": "IfStatement",
												"src": "1647:127:10",
												"trueBody": {
													"id": 1209,
													"nodeType": "Block",
													"src": "1688:86:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1200,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1728:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1728:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1204,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1748:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ParagonFactory_$1286",
																					"typeString": "contract ParagonFactory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ParagonFactory_$1286",
																					"typeString": "contract ParagonFactory"
																				}
																			],
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1740:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1202,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1740:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1740:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "1755:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1197,
																				"name": "fee1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "1709:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1196,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "1702:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$812_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1702:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$812",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 793,
																	"src": "1702:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1702:61:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1208,
															"nodeType": "ExpressionStatement",
															"src": "1702:61:10"
														}
													]
												}
											},
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1791:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "1783:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1783:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1215,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1828:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1828:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "tokenURI_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "1852:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1213,
															"name": "SQFi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "1801:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISQFItem_$840",
																"typeString": "contract ISQFItem"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "1801:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,string memory) external returns (uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1783:88:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1909:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1909:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "1933:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1224,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "1954:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "1972:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "CraftSQFI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "1886:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1886:103:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "1881:108:10"
											},
											{
												"expression": {
													"id": 1228,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1212,
													"src": "2006:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1229,
												"nodeType": "Return",
												"src": "1999:14:10"
											}
										]
									},
									"functionSelector": "841acc5d",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1181,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "1605:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1605:13:10"
										}
									],
									"name": "createSQFI",
									"nameLocation": "1548:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "tokenURI_",
												"nameLocation": "1582:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1568:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1568:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:39:10"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1628:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:9:10"
									},
									"scope": 1286,
									"src": "1539:481:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "2156:70:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1239,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "2176:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1236,
															"name": "SQFi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "2166:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISQFItem_$840",
																"typeString": "contract ISQFItem"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 828,
														"src": "2166:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "2166:18:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1243,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "2211:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "UncraftSQFI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "2199:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "EmitStatement",
												"src": "2194:25:10"
											}
										]
									},
									"functionSelector": "0a1ac657",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uncraft",
									"nameLocation": "2102:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2127:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "2119:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:31:10"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2156:0:10"
									},
									"scope": 1286,
									"src": "2093:133:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2337:177:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1257,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2351:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2368:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2360:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2360:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2360:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2351:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "2441:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1277,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2478:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2478:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "2490:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1274,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "2462:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1273,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "2455:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$812_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2455:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$812",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 761,
																	"src": "2455:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2455:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1281,
															"nodeType": "ExpressionStatement",
															"src": "2455:42:10"
														}
													]
												},
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "2347:161:10",
												"trueBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "2374:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1269,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "2417:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1265,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2396:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2396:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1263,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2388:8:10",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2388:19:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2388:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2388:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1271,
															"nodeType": "ExpressionStatement",
															"src": "2388:36:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1254,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2313:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1255,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1253,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2304:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2304:28:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "2241:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2258:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2250:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2250:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2273:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2265:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2249:31:10"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:10"
									},
									"scope": 1286,
									"src": "2232:282:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1287,
							"src": "292:2224:10",
							"usedErrors": []
						}
					],
					"src": "37:2479:10"
				},
				"id": 10
			},
			"contracts/SQFITEM/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							603
						],
						"IERC20": [
							812
						],
						"SafeERC20": [
							1510
						]
					},
					"id": 1511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "contracts/SQFITEM/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1511,
							"sourceUnit": 813,
							"src": "58:22:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Address.sol",
							"file": "./Address.sol",
							"id": 1290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1511,
							"sourceUnit": 604,
							"src": "81:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1291,
								"nodeType": "StructuredDocumentation",
								"src": "106:457:11",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1510,
							"linearizedBaseContracts": [
								1510
							],
							"name": "SafeERC20",
							"nameLocation": "572:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1294,
									"libraryName": {
										"id": 1292,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 603,
										"src": "594:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "588:26:11",
									"typeName": {
										"id": 1293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "606:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "722:103:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "752:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1308,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1297,
																			"src": "782:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 761,
																		"src": "782:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1311,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "807:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1312,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "811:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1306,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:58:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1304,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "732:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "732:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "732:86:11"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "629:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "658:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "651:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1296,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1295,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "651:6:11"
													},
													"referencedDeclaration": 812,
													"src": "651:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "681:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "673:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:71:11"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:0:11"
									},
									"scope": 1510,
									"src": "620:205:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "959:113:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1330,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "989:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1333,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "1019:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 793,
																		"src": "1019:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1019:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1336,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "1048:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1337,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "1054:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1338,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "1058:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1331,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "996:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "996:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "996:68:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1329,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "969:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:96:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "969:96:11"
											}
										]
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "840:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "873:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "866:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1319,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1318,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "866:6:11"
													},
													"referencedDeclaration": 812,
													"src": "866:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "896:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "888:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "918:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "910:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "938:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "930:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:93:11"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:11"
									},
									"scope": 1510,
									"src": "831:241:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "1438:497:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1355,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "1687:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1696:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1687:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1686:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1363,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1727:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1510",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1510",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1719:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1361,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1719:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1719:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1365,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1349,
																					"src": "1734:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1359,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1347,
																					"src": "1703:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$812",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 771,
																				"src": "1703:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1703:39:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1746:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1703:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1702:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1686:62:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1762:56:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1665:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:163:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "1665:163:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1375,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "1858:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1378,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "1888:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 781,
																		"src": "1888:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1888:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1381,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "1912:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "1921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1376,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1865:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1865:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1865:62:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1374,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "1838:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1838:90:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "1838:90:11"
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1078:249:11",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1341:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1369:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1362:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1346,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1345,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "1362:6:11"
													},
													"referencedDeclaration": 812,
													"src": "1362:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1392:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1384:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1417:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1409:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:76:11"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:11"
									},
									"scope": 1510,
									"src": "1332:603:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "2057:194:11",
										"statements": [
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2075:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "2067:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1397,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2067:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1409,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1403,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2114:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1510",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1510",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2106:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2106:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1405,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "2121:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1399,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "2090:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$812",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 771,
															"src": "2090:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2090:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1407,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "2132:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2090:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2067:70:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1414,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "2197:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 781,
																		"src": "2197:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2197:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1417,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "2221:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1418,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "2230:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1412,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2174:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2174:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2174:69:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1410,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "2147:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:97:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "2147:97:11"
											}
										]
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1950:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1988:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1981:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "1981:6:11"
													},
													"referencedDeclaration": 812,
													"src": "1981:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2011:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "2003:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2036:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "2028:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:76:11"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:11"
									},
									"scope": 1510,
									"src": "1941:310:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "2373:370:11",
										"statements": [
											{
												"id": 1469,
												"nodeType": "UncheckedBlock",
												"src": "2383:354:11",
												"statements": [
													{
														"assignments": [
															1434
														],
														"declarations": [
															{
																"constant": false,
																"id": 1434,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2415:12:11",
																"nodeType": "VariableDeclaration",
																"scope": 1469,
																"src": "2407:20:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1433,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2407:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1443,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1439,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2454:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1510",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1510",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2446:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1437,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2446:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2446:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1441,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "2461:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "2430:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 771,
																"src": "2430:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2430:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2407:62:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1445,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "2491:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1446,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "2507:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2491:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2514:43:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1444,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2483:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2483:75:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1450,
														"nodeType": "ExpressionStatement",
														"src": "2483:75:11"
													},
													{
														"assignments": [
															1452
														],
														"declarations": [
															{
																"constant": false,
																"id": 1452,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2580:12:11",
																"nodeType": "VariableDeclaration",
																"scope": 1469,
																"src": "2572:20:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1451,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2572:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1456,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "2595:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "2610:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2595:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2572:43:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1458,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "2649:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1461,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "2679:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$812",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 781,
																				"src": "2679:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2679:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1464,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "2703:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1465,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "2712:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1459,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2656:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2656:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2656:69:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1457,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "2629:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2629:97:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1468,
														"nodeType": "ExpressionStatement",
														"src": "2629:97:11"
													}
												]
											}
										]
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2266:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2304:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2297:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "2297:6:11"
													},
													"referencedDeclaration": 812,
													"src": "2297:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2327:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2319:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2344:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:76:11"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2373:0:11"
									},
									"scope": 1510,
									"src": "2257:486:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "3196:636:11",
										"statements": [
											{
												"assignments": [
													1481
												],
												"declarations": [
													{
														"constant": false,
														"id": 1481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3558:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1508,
														"src": "3545:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3545:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"initialValue": {
													"arguments": [
														{
															"id": 1487,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3599:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3605:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1484,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "3579:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3571:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3571:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3571:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 397,
														"src": "3571:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3571:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3545:95:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1491,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3654:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3654:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3674:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3654:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "3650:176:11",
												"trueBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "3677:149:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1498,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "3749:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1500,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3762:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1499,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3762:4:11",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1501,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3761:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1496,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3738:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3738:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3738:30:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3770:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1495,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3730:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3730:85:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1505,
															"nodeType": "ExpressionStatement",
															"src": "3730:85:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "2749:372:11",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3135:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3162:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3155:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1473,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "3155:6:11"
													},
													"referencedDeclaration": 812,
													"src": "3155:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3182:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3169:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3169:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:33:11"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3196:0:11"
									},
									"scope": 1510,
									"src": "3126:706:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1511,
							"src": "564:3270:11",
							"usedErrors": []
						}
					],
					"src": "33:3801:11"
				},
				"id": 11
			},
			"contracts/SQFITEM/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1822
						]
					},
					"id": 1823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1513,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1822,
							"linearizedBaseContracts": [
								1822
							],
							"name": "SafeMath",
							"nameLocation": "406:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "633:140:12",
										"statements": [
											{
												"id": 1543,
												"nodeType": "UncheckedBlock",
												"src": "643:124:12",
												"statements": [
													{
														"assignments": [
															1526
														],
														"declarations": [
															{
																"constant": false,
																"id": 1526,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1543,
																"src": "667:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1525,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1530,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1527,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "679:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1528,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "683:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1531,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "702:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1532,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "706:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1538,
														"nodeType": "IfStatement",
														"src": "698:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1524,
															"id": 1537,
															"nodeType": "Return",
															"src": "709:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1540,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "754:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1524,
														"id": 1542,
														"nodeType": "Return",
														"src": "740:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "573:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "584:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:12"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "618:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "624:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:12"
									},
									"scope": 1822,
									"src": "557:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "995:113:12",
										"statements": [
											{
												"id": 1571,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1557,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "1033:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1558,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "1037:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1564,
														"nodeType": "IfStatement",
														"src": "1029:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1562,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1556,
															"id": 1563,
															"nodeType": "Return",
															"src": "1040:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1566,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1548,
																		"src": "1085:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1567,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "1089:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1569,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1556,
														"id": 1570,
														"nodeType": "Return",
														"src": "1071:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:12",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "946:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:12"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "980:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "986:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:12"
									},
									"scope": 1822,
									"src": "919:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "1332:417:12",
										"statements": [
											{
												"id": 1613,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1585,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "1600:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1592,
														"nodeType": "IfStatement",
														"src": "1596:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1584,
															"id": 1591,
															"nodeType": "Return",
															"src": "1608:16:12"
														}
													},
													{
														"assignments": [
															1594
														],
														"declarations": [
															{
																"constant": false,
																"id": 1594,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1613,
																"src": "1638:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1593,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1598,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1595,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "1650:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1596,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "1654:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "1673:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1600,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "1677:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1602,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "1682:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1608,
														"nodeType": "IfStatement",
														"src": "1669:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1584,
															"id": 1607,
															"nodeType": "Return",
															"src": "1685:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1610,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "1730:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1611,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1584,
														"id": 1612,
														"nodeType": "Return",
														"src": "1716:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1272:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1283:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:12"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1317:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1580,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1323:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:12"
									},
									"scope": 1822,
									"src": "1256:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "1974:114:12",
										"statements": [
											{
												"id": 1641,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1627,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "2012:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1634,
														"nodeType": "IfStatement",
														"src": "2008:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1632,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1626,
															"id": 1633,
															"nodeType": "Return",
															"src": "2020:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1636,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "2065:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1637,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "2069:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1639,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1626,
														"id": 1640,
														"nodeType": "Return",
														"src": "2051:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1914:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1925:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:12"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1959:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1965:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:12"
									},
									"scope": 1822,
									"src": "1898:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "2323:114:12",
										"statements": [
											{
												"id": 1669,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1655,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "2361:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1662,
														"nodeType": "IfStatement",
														"src": "2357:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1654,
															"id": 1661,
															"nodeType": "Return",
															"src": "2369:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1664,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "2414:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1665,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "2418:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1667,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1654,
														"id": 1668,
														"nodeType": "Return",
														"src": "2400:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "2263:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "2274:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:12"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "2308:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "2314:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:12"
									},
									"scope": 1822,
									"src": "2247:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "2739:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1681,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "2756:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1682,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "2760:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1684,
												"nodeType": "Return",
												"src": "2749:12:12"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "2685:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "2696:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:12"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "2730:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:12"
									},
									"scope": 1822,
									"src": "2672:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "3106:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1696,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "3123:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1697,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "3127:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1695,
												"id": 1699,
												"nodeType": "Return",
												"src": "3116:12:12"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "3052:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "3063:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:12"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "3097:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:12"
									},
									"scope": 1822,
									"src": "3039:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "3449:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1711,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "3466:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1712,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "3470:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1710,
												"id": 1714,
												"nodeType": "Return",
												"src": "3459:12:12"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "3395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "3406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:12"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "3440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:12"
									},
									"scope": 1822,
									"src": "3382:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "3834:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1726,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "3851:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1727,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "3855:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1729,
												"nodeType": "Return",
												"src": "3844:12:12"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "3780:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "3791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:12"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "3825:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:12"
									},
									"scope": 1822,
									"src": "3767:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "4383:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "4400:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1742,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "4404:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1744,
												"nodeType": "Return",
												"src": "4393:12:12"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "4329:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "4340:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:12"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "4374:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:12"
									},
									"scope": 1822,
									"src": "4316:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "5001:106:12",
										"statements": [
											{
												"id": 1769,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1759,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1751,
																		"src": "5043:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1760,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "5048:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1762,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "5051:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1758,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1764,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1765,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "5085:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1766,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "5089:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1757,
														"id": 1768,
														"nodeType": "Return",
														"src": "5078:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "4898:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "4917:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "4936:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:12"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "4992:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:12"
									},
									"scope": 1822,
									"src": "4876:231:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "5716:105:12",
										"statements": [
											{
												"id": 1794,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1784,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "5758:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1787,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "5765:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1783,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1789,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1790,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "5799:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1791,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "5803:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1782,
														"id": 1793,
														"nodeType": "Return",
														"src": "5792:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "5613:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "5632:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "5651:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:12"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "5707:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:12"
									},
									"scope": 1822,
									"src": "5591:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "6592:105:12",
										"statements": [
											{
												"id": 1819,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1809,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1801,
																		"src": "6634:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1812,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "6641:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1808,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1814,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1815,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "6675:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1816,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "6679:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1807,
														"id": 1818,
														"nodeType": "Return",
														"src": "6668:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6489:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6508:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6527:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:12"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "6583:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:12"
									},
									"scope": 1822,
									"src": "6467:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "398:6301:12",
							"usedErrors": []
						}
					],
					"src": "33:6666:12"
				},
				"id": 12
			},
			"contracts/SQFITEM/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2025
						]
					},
					"id": 2026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1825,
								"nodeType": "StructuredDocumentation",
								"src": "58:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2025,
							"linearizedBaseContracts": [
								2025
							],
							"name": "Strings",
							"nameLocation": "101:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1828,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "140:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2025,
									"src": "115:58:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1826,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "115:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "155:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "346:632:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1836,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "548:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "557:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "548:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "544:51:13",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "560:35:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "581:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1835,
															"id": 1840,
															"nodeType": "Return",
															"src": "574:10:13"
														}
													]
												}
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "612:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "604:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "604:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"id": 1845,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1831,
													"src": "619:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "604:20:13"
											},
											{
												"assignments": [
													1848
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "642:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "634:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "634:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"nodeType": "VariableDeclarationStatement",
												"src": "634:14:13"
											},
											{
												"body": {
													"id": 1860,
													"nodeType": "Block",
													"src": "676:57:13",
													"statements": [
														{
															"expression": {
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "690:8:13",
																"subExpression": {
																	"id": 1853,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "690:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1855,
															"nodeType": "ExpressionStatement",
															"src": "690:8:13"
														},
														{
															"expression": {
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1856,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "712:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "720:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "712:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1859,
															"nodeType": "ExpressionStatement",
															"src": "712:10:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1850,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "665:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "673:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1861,
												"nodeType": "WhileStatement",
												"src": "658:75:13"
											},
											{
												"assignments": [
													1863
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "755:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "742:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "742:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"arguments": [
														{
															"id": 1866,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "774:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "764:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1864,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "768:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "742:39:13"
											},
											{
												"body": {
													"id": 1899,
													"nodeType": "Block",
													"src": "810:131:13",
													"statements": [
														{
															"expression": {
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1872,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "824:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "834:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "824:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1875,
															"nodeType": "ExpressionStatement",
															"src": "824:11:13"
														},
														{
															"expression": {
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1876,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "849:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1878,
																	"indexExpression": {
																		"id": 1877,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1848,
																		"src": "856:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "849:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1890,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1883,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "879:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1888,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1886,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1831,
																									"src": "892:5:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1887,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "900:2:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "892:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1885,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "884:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1884,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "884:7:13",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1889,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "884:19:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "879:24:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "873:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1881,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "873:5:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "873:31:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "866:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1879,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "866:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "866:39:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "849:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "849:56:13"
														},
														{
															"expression": {
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1895,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "919:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "928:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "919:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1898,
															"nodeType": "ExpressionStatement",
															"src": "919:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "798:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "798:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1900,
												"nodeType": "WhileStatement",
												"src": "791:150:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "964:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "957:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1901,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "957:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1905,
												"nodeType": "Return",
												"src": "950:21:13"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "180:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "284:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "301:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "293:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:15:13"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "331:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:15:13"
									},
									"scope": 2025,
									"src": "275:703:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "1157:255:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1915,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "1171:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1180:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1171:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1921,
												"nodeType": "IfStatement",
												"src": "1167:54:13",
												"trueBody": {
													"id": 1920,
													"nodeType": "Block",
													"src": "1183:38:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1204:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1914,
															"id": 1919,
															"nodeType": "Return",
															"src": "1197:13:13"
														}
													]
												}
											},
											{
												"assignments": [
													1923
												],
												"declarations": [
													{
														"constant": false,
														"id": 1923,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1238:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "1230:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1230:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1925,
												"initialValue": {
													"id": 1924,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1910,
													"src": "1245:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1230:20:13"
											},
											{
												"assignments": [
													1927
												],
												"declarations": [
													{
														"constant": false,
														"id": 1927,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1268:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "1260:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1260:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1929,
												"initialValue": {
													"hexValue": "30",
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1277:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1260:18:13"
											},
											{
												"body": {
													"id": 1940,
													"nodeType": "Block",
													"src": "1306:57:13",
													"statements": [
														{
															"expression": {
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1320:8:13",
																"subExpression": {
																	"id": 1933,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1927,
																	"src": "1320:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1935,
															"nodeType": "ExpressionStatement",
															"src": "1320:8:13"
														},
														{
															"expression": {
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1936,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "1342:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1351:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1342:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1939,
															"nodeType": "ExpressionStatement",
															"src": "1342:10:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "1295:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1303:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1295:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "WhileStatement",
												"src": "1288:75:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "1391:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1944,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "1398:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1942,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1948,
															2024
														],
														"referencedDeclaration": 2024,
														"src": "1379:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1914,
												"id": 1946,
												"nodeType": "Return",
												"src": "1372:33:13"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "984:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1092:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1112:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1104:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:15:13"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1142:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:15:13"
									},
									"scope": 2025,
									"src": "1083:329:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "1625:351:13",
										"statements": [
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1648:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2023,
														"src": "1635:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1958,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1635:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1968,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1667:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1963,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "1671:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1667:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1680:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1667:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1657:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1960,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1661:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1635:47:13"
											},
											{
												"expression": {
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1969,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1692:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1971,
														"indexExpression": {
															"hexValue": "30",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1692:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1704:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1692:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "1692:15:13"
											},
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1717:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1977,
														"indexExpression": {
															"hexValue": "31",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1724:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1717:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1729:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1717:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "1717:15:13"
											},
											{
												"body": {
													"id": 2009,
													"nodeType": "Block",
													"src": "1787:87:13",
													"statements": [
														{
															"expression": {
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1995,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "1801:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1997,
																	"indexExpression": {
																		"id": 1996,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "1808:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1801:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1998,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "1813:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2002,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1999,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1951,
																			"src": "1826:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1834:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1826:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1813:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1801:37:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2004,
															"nodeType": "ExpressionStatement",
															"src": "1801:37:13"
														},
														{
															"expression": {
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2005,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "1852:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1862:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1852:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2008,
															"nodeType": "ExpressionStatement",
															"src": "1852:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1989,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "1775:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1779:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1775:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2010,
												"initializationExpression": {
													"assignments": [
														1982
													],
													"declarations": [
														{
															"constant": false,
															"id": 1982,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1755:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2010,
															"src": "1747:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1981,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1747:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1988,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1759:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1984,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "1763:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1759:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1759:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1747:26:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1782:3:13",
														"subExpression": {
															"id": 1992,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "1784:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1994,
													"nodeType": "ExpressionStatement",
													"src": "1782:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1742:132:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1891:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1900:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1891:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1903:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1883:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "1883:55:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2020,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "1962:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1955:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2018,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1955:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1957,
												"id": 2022,
												"nodeType": "Return",
												"src": "1948:21:13"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "1418:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1544:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1564:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1556:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1579:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1571:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:31:13"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "1610:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1610:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:15:13"
									},
									"scope": 2025,
									"src": "1535:441:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2026,
							"src": "93:1885:13",
							"usedErrors": []
						}
					],
					"src": "33:1945:13"
				},
				"id": 13
			}
		}
	}
}