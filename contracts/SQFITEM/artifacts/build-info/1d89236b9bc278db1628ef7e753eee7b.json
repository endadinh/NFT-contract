{
	"id": "1d89236b9bc278db1628ef7e753eee7b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SQFITEM/SQFI_Factory.sol": {
				"content": "//V1\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"./Pausable.sol\";\nimport \"./AccessControl.sol\";\nimport \"./SafeMath.sol\";\nimport \"./IERC20.sol\";\nimport \"./SafeERC20.sol\";\nimport \"./Math.sol\";\nimport \"./ISQFItem.sol\";\n// import \"./IParaArt.sol\";\n// import \"./IProxy.sol\";\n\ncontract ParagonFactory is Pausable, AccessControl {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    ISQFItem public SQFi;\n    // IParaArt public art;\n    // IProxy public proxy;\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    uint256 public uncraftBurnPercent = 10;\n    uint256 public minSQFI = 200;\n    uint256 public maxSQFI = 2000;\n    uint256[16] public runePower = [\n        1,\n        15,\n        50,\n        180,\n        630,\n        2200,\n        7800,\n        28220,\n        105800,\n        259200,\n        665000,\n        2200000\n    ];\n\n    address public fee1;\n    // address public fee2;\n    uint256 public amount1 = 100e18;\n    // uint256 public amount2 = 100e18;\n\n    event CraftSQFI(\n        address owner,\n        uint256 tokenId,\n        address fee1,\n        // address fee2,\n        uint256 amount1\n        // uint256 amount2\n    );\n    event UncraftSQFI(\n        uint256 tokenId\n    );\n    event FeeChange(address currency, uint256 amount, bool enable);\n\n    constructor(\n        address _sqfi,\n        // address _art,\n        // address _proxy,\n        address _fee1\n        // address _fee2\n    ) {\n        // art = IParaArt(_art);\n        // proxy = IProxy(_proxy);\n        SQFi = ISQFItem(_sqfi);\n        fee1 = _fee1;\n        // fee2 = _fee2;\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(PAUSER_ROLE, msg.sender);\n    }\n\n    function editSQFI(uint256 _min, uint256 _max)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        minSQFI = _min;\n        maxSQFI = _max;\n    }\n\n    function editUncraftBurnPercent(uint256 percent)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(percent <= 100, \"Must be valid percent\");\n        uncraftBurnPercent = percent;\n    }\n\n    function bytes32ToAmount16(bytes32 data)\n        public\n        pure\n        returns (uint256[16] memory amount)\n    {\n        for (uint8 i = 0; i < 32; i++) {\n            amount[i / 2] =\n                amount[i / 2] +\n                uint8(data[i]) *\n                256**(i % 2 == 0 ? 1 : 0);\n        }\n    }\n\n    // function editRunePower(uint256[16] memory newPower)\n    //     public\n    //     onlyRole(DEFAULT_ADMIN_ROLE)\n    // {\n    //     runePower = newPower;\n    // }\n\n    function editSupportedFee(\n        address _fee1,\n        // address _fee2,\n        uint256 _amount1\n        // uint256 _amount2\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        fee1 = _fee1;\n        // fee2 = _fee2;\n        amount1 = _amount1;\n        // amount2 = _amount2;\n    }\n\n    function createSQFI(\n        // bytes32 originalArt,\n        // bytes32 rawHashed,\n        // bytes32 runesList\n        string memory tokenURI_\n    ) public whenNotPaused returns (uint256) {\n        if (amount1 > 0 && fee1 != address(0x0)) {\n            IERC20(fee1).transferFrom(msg.sender, address(this), amount1);\n        }\n        // if (amount2 > 0 && fee2 != address(0x0)) {\n        //     IERC20(fee2).transferFrom(msg.sender, address(this), amount2);\n        // }\n\n        // art.copyrightUse(msg.sender, originalArt);\n        // uint256[16] memory amount = bytes32ToAmount16(runesList);\n        // uint256 totalRunes = 0;\n        // for (uint256 i = 0; i < 16; i++) {\n        //     if (amount[i] > 0) {\n        //         totalRunes += amount[i];\n        //         IERC20(proxy.getRuneAddress(i)).transferFrom(\n        //             msg.sender,\n        //             address(this),\n        //             amount[i]\n        //         );\n        //     }\n        // }\n        // require(\n        //     totalRunes >= minSQFI && totalRunes <= maxSQFI,\n        //     \"Must be 200 - 2000 runes have power\"\n        // );\n        uint256 tokenId = SQFi.safeMint(\n            msg.sender,\n            tokenURI_\n        );\n        emit CraftSQFI(\n            msg.sender,\n            tokenId,\n            fee1,\n            amount1\n        );\n        return tokenId;\n    }\n\n    // The following functions are overrides required by Solidity.\n    function uncraft(\n        uint256 tokenId\n    ) public virtual {\n        SQFi.burn(tokenId);\n        emit UncraftSQFI(tokenId);\n    }\n\n    function withdraw(address token, uint256 amount)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        if (token == address(0x0)) {\n            payable(msg.sender).transfer(amount);\n        } else {\n            IERC20(token).transfer(msg.sender, amount);\n        }\n    }\n}"
			},
			"contracts/SQFITEM/ISQFItem.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface ISQFItem {\n    function safeMint(\n        address to,\n        string memory tokenURI_\n    ) external returns (uint256);\n\n    function burn(uint256 tokenId) external;\n\n    // function paragonInfo(uint256 tokenId)\n    //     external\n    //     returns (\n    //         address owner,\n    //         bytes32 originalArt,\n    //         bytes32 rawHashed,\n    //         bytes32 runesList,\n    //         uint8 status\n    //     );\n    function itemInfo(uint256 tokenId) \n    external\n    returns(\n            address owner,\n            uint8 status,\n            string calldata tokenURI\n    );\n}"
			},
			"contracts/SQFITEM/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}"
			},
			"contracts/SQFITEM/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"contracts/SQFITEM/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/SQFITEM/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"contracts/SQFITEM/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"./Context.sol\";\nimport \"./Strings.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}"
			},
			"contracts/SQFITEM/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}"
			},
			"contracts/SQFITEM/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/SQFITEM/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"contracts/SQFITEM/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}"
			},
			"contracts/SQFITEM/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}"
			},
			"contracts/SQFITEM/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}"
			},
			"contracts/SQFITEM/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SQFITEM/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/AccessControl.sol\":{\"keccak256\":\"0x850cee2bcf1bbcd0b0a1a3ef8d9ce0ed789b807d8a4c0e2dd5b2b987bef691eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1fb40d0c4deb123b7322f8dbc1635572a628fee2f383a71cf8c0d61b6c669c4\",\"dweb:/ipfs/QmUJC8kZsq69SDDiTp5PoMTEgVzW4pjwHgXW6pbdScMAA9\"]},\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]},\"contracts/SQFITEM/ERC165.sol\":{\"keccak256\":\"0x0969c3b761eb3af95a44d2c5b89822572d87441f2ca64d9fa80d7cbab667e42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fac9609abaa5cab3d96f7ebdae42570f8be9dfd5b8578289ae1aceeaa503b6\",\"dweb:/ipfs/QmX9vGsJP3fgD1W6cVTsp2HFCaD3Gek6ZELT5167eJ2j1T\"]},\"contracts/SQFITEM/IAccessControl.sol\":{\"keccak256\":\"0x287306f447febc349d34d6b1ef445a285370ec0ddac2ede071e447f00b642ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffffd92659e8a50deda3cebb149d697cdc4e9f0b5abfc55d0c2584aeab0cce36\",\"dweb:/ipfs/QmRaiwwYKHxUf4Uy4fWo6qzAkBF7NaeydMrKumP3fXCDRC\"]},\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]},\"contracts/SQFITEM/Strings.sol\":{\"keccak256\":\"0x680df08ddcc0584a8172db776bffd1753c893c13bcd18b928e22027ae441b000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637df747e24b006779e7c945cb0f979c60bbd861bae42254b9814762c0dfba4f\",\"dweb:/ipfs/QmPChjSFzHTESQsNycgZ7mPG8Xd31hcZKaTN2VLbiAngC9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/SQFITEM/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/SQFITEM/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/SQFITEM/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/Address.sol\":126:7855  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/Address.sol\":126:7855  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xE8 0xEA 0xA8 CALLDATASIZE 0x4C PUSH5 0x3EB3D948A7 MUL 0xD 0x4C SAR PUSH16 0x48E218749642F21D4A3DDCAB2908B264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "126:7729:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xE8 0xEA 0xA8 CALLDATASIZE 0x4C PUSH5 0x3EB3D948A7 MUL 0xD 0x4C SAR PUSH16 0x48E218749642F21D4A3DDCAB2908B264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "126:7729:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 7855,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3e8eaa8364c643eb3d948a7020d4c1d6f48e218749642f21d4a3ddcab2908b264736f6c634300080d0033",
									".code": [
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 7855,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Address.sol\":{\"keccak256\":\"0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775\",\"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/ERC165.sol\":{\"keccak256\":\"0x0969c3b761eb3af95a44d2c5b89822572d87441f2ca64d9fa80d7cbab667e42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fac9609abaa5cab3d96f7ebdae42570f8be9dfd5b8578289ae1aceeaa503b6\",\"dweb:/ipfs/QmX9vGsJP3fgD1W6cVTsp2HFCaD3Gek6ZELT5167eJ2j1T\"]},\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/IAccessControl.sol\":{\"keccak256\":\"0x287306f447febc349d34d6b1ef445a285370ec0ddac2ede071e447f00b642ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffffd92659e8a50deda3cebb149d697cdc4e9f0b5abfc55d0c2584aeab0cce36\",\"dweb:/ipfs/QmRaiwwYKHxUf4Uy4fWo6qzAkBF7NaeydMrKumP3fXCDRC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/IERC20.sol\":{\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5\",\"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/ISQFItem.sol": {
				"ISQFItem": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "itemInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI_",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"itemInfo(uint256)": "fd2e997e",
							"safeMint(address,string)": "d204c45e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"itemInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/ISQFItem.sol\":\"ISQFItem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/ISQFItem.sol\":{\"keccak256\":\"0x31d36c8072505efbe076b179b7b96a53674c416fbc47f37983428761c657bf59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cc8dc106c41e138684151c204872365446582d080fa7d371b0d47b7d02f740c\",\"dweb:/ipfs/QmU6G8fFxmnCkDWvoGop8hcq7mT2CkCBxu1Mai72q9yztS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/Math.sol\":132:1156  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/Math.sol\":132:1156  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E BASEFEE PUSH25 0xBCE8768AAC890EDC16C345815DC57B5626DC0F0725624246C7 PUSH26 0x48378864736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "132:1024:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E BASEFEE PUSH25 0xBCE8768AAC890EDC16C345815DC57B5626DC0F0725624246C7 PUSH26 0x48378864736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "132:1024:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 132,
									"end": 1156,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e4878bce8768aac890edc16c345815dc57b5626dc0f0725624246c77948378864736f6c634300080d0033",
									".code": [
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 1156,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Math.sol\":{\"keccak256\":\"0xef7b3fc139eede8f159d204c982d86775350be2e81b5fecf97731d531223256e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c0ae51ae001dd3028a510d751a8bd473d9c2f99359158817ac4860d3e20b60\",\"dweb:/ipfs/QmYSSmmzH2SHDtVMA5xGHros8cmnVpq3dL9xawkQTGdWm4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]},\"contracts/SQFITEM/Pausable.sol\":{\"keccak256\":\"0x98503616f3138d6de41a6577dca9f9f38c2a710131f8aaf13f8eceb79097ac27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c69b0682f1fa3fe9485bfaf7de1b1d57d1a9efebab659df8fb56153c42aa1a9\",\"dweb:/ipfs/Qme4MTtDxVE3dm47GeWF65sCycxVF7CVr55aq75cCzq8Be\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "contracts/SQFITEM/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/SQFI_Factory.sol": {
				"ParagonFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sqfi",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fee1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fee1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "CraftSQFI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enable",
									"type": "bool"
								}
							],
							"name": "FeeChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "UncraftSQFI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SQFi",
							"outputs": [
								{
									"internalType": "contract ISQFItem",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amount1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "data",
									"type": "bytes32"
								}
							],
							"name": "bytes32ToAmount16",
							"outputs": [
								{
									"internalType": "uint256[16]",
									"name": "amount",
									"type": "uint256[16]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI_",
									"type": "string"
								}
							],
							"name": "createSQFI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_max",
									"type": "uint256"
								}
							],
							"name": "editSQFI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_fee1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount1",
									"type": "uint256"
								}
							],
							"name": "editSupportedFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percent",
									"type": "uint256"
								}
							],
							"name": "editUncraftBurnPercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSQFI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minSQFI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "runePower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uncraft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uncraftBurnPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:4739  contract ParagonFactory is Pausable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":599:601  10 */\n  0x0a\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":563:601  uint256 public uncraftBurnPercent = 10 */\n  0x03\n  sstore\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":632:635  200 */\n  0xc8\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":607:635  uint256 public minSQFI = 200 */\n  0x04\n  sstore\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":666:670  2000 */\n  0x07d0\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":641:670  uint256 public maxSQFI = 2000 */\n  0x05\n  sstore\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  mload(0x40)\n  dup1\n  0x0180\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":717:718  1 */\n  0x01\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":728:730  15 */\n  0x0f\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":740:742  50 */\n  0x32\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":752:755  180 */\n  0xb4\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":765:768  630 */\n  0x0276\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":778:782  2200 */\n  0x0898\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":792:796  7800 */\n  0x1e78\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":806:811  28220 */\n  0x6e3c\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":821:827  105800 */\n  0x019d48\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":837:843  259200 */\n  0x03f480\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":853:859  665000 */\n  0x0a25a8\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":869:876  2200000 */\n  0x2191c0\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n  0xffffff\n  and\n  dup2\n  mstore\n  pop\n  0x06\n  swap1\n  0x0c\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":967:973  100e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":942:973  uint256 public amount1 = 100e18 */\n  0x17\n  sstore\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1317:1709  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/SQFITEM/Pausable.sol\":927:932  false */\n  0x00\n    /* \"contracts/SQFITEM/Pausable.sol\":917:924  _paused */\n  dup1\n  0x00\n    /* \"contracts/SQFITEM/Pausable.sol\":917:932  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1552:1557  _sqfi */\n  dup2\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1536:1540  SQFi */\n  0x02\n  0x00\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1536:1558  SQFi = ISQFItem(_sqfi) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1575:1580  _fee1 */\n  dup1\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1568:1572  fee1 */\n  0x16\n  0x00\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1568:1580  fee1 = _fee1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1615:1657  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_10\n    /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n  0x00\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1626:1644  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1646:1656  msg.sender */\n  caller\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1615:1625  _setupRole */\n  shl(0x20, tag_11)\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1615:1657  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1667:1702  _setupRole(PAUSER_ROLE, msg.sender) */\n  tag_12\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":533:557  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1691:1701  msg.sender */\n  caller\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1667:1677  _setupRole */\n  shl(0x20, tag_11)\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1667:1702  _setupRole(PAUSER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":1317:1709  constructor(... */\n  pop\n  pop\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:4739  contract ParagonFactory is Pausable, AccessControl {... */\n  jump(tag_13)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6049:6159  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_11:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6127:6152  _grantRole(role, account) */\n  tag_15\n    /* \"contracts/SQFITEM/AccessControl.sol\":6138:6142  role */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6144:6151  account */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6127:6137  _grantRole */\n  shl(0x20, tag_16)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6127:6152  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6049:6159  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\ntag_16:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n  tag_18\n    /* \"contracts/SQFITEM/AccessControl.sol\":6619:6623  role */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6625:6632  account */\n  dup3\n    /* \"contracts/SQFITEM/AccessControl.sol\":6611:6618  hasRole */\n  shl(0x20, tag_19)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\n  tag_20\n  jumpi\n    /* \"contracts/SQFITEM/AccessControl.sol\":6681:6685  true */\n  0x01\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6655  _roles */\n  dup1\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":6656:6660  role */\n  dup5\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6669  _roles[role].members */\n  0x00\n  add\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":6670:6677  account */\n  dup4\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":6649:6685  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n  tag_21\n    /* \"contracts/SQFITEM/AccessControl.sol\":6731:6741  _msgSender */\n  shl(0x20, tag_22)\n    /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SQFITEM/AccessControl.sol\":6722:6729  account */\n  dup2\n    /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SQFITEM/AccessControl.sol\":6716:6720  role */\n  dup4\n    /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\ntag_20:\n    /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\ntag_19:\n    /* \"contracts/SQFITEM/AccessControl.sol\":2877:2881  bool */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2906  _roles */\n  0x01\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":2907:2911  role */\n  dup5\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2920  _roles[role].members */\n  0x00\n  add\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n  0x00\n    /* \"contracts/SQFITEM/AccessControl.sol\":2921:2928  account */\n  dup4\n    /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/SQFITEM/AccessControl.sol\":2893:2929  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\ntag_22:\n    /* \"contracts/SQFITEM/Context.sol\":640:647  address */\n  0x00\n    /* \"contracts/SQFITEM/Context.sol\":666:676  msg.sender */\n  caller\n    /* \"contracts/SQFITEM/Context.sol\":659:676  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:4739  contract ParagonFactory is Pausable, AccessControl {... */\ntag_2:\n  dup3\n  0x10\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_25\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\ntag_25:\n  pop\n  swap1\n  pop\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_35:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_36:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_35\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_37:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_36\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_38:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_37\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_5:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_53\n  tag_33\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:1068   */\ntag_52:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_54\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_55\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_38\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:4739  contract ParagonFactory is Pausable, AccessControl {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":292:4739  contract ParagonFactory is Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x841acc5d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd23faf3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xeb47536a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf400fde4\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x841acc5d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x945099bc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xac6b182d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc6098256\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x51d64e64\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x52c6159f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x683b0ee5\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x09c9985c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0a1ac657\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x13e6b93b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SQFITEM/AccessControl.sol\":2510:2712  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":563:601  uint256 public uncraftBurnPercent = 10 */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4316:4449  function uncraft(... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":641:670  uint256 public maxSQFI = 2000 */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":3882:4003  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":4253:4398  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/SQFITEM/AccessControl.sol\":5270:5484  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1715:1872  function editSQFI(uint256 _min, uint256 _max)... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":413:433  ISQFItem public SQFi */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/Pausable.sol\":1034:1118  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":607:635  uint256 public minSQFI = 200 */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2868:4243  function createSQFI(... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2578:2862  function editSupportedFee(... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/SQFITEM/AccessControl.sol\":1917:1966  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_17:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":889:908  address public fee1 */\n    tag_19:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":4632:4779  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2092:2403  function bytes32ToAmount16(bytes32 data)... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":495:557  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1878:2086  function editUncraftBurnPercent(uint256 percent)... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4455:4737  function withdraw(address token, uint256 amount)... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":942:973  uint256 public amount1 = 100e18 */\n    tag_25:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SQFITEM/AccessControl.sol\":2510:2712  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2595:2599  bool */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2633:2665  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2665  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2629  interfaceId */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2665  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2705  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":2669:2705  super.supportsInterface(interfaceId) */\n      tag_119\n        /* \"contracts/SQFITEM/AccessControl.sol\":2693:2704  interfaceId */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":2669:2692  super.supportsInterface */\n      tag_120\n        /* \"contracts/SQFITEM/AccessControl.sol\":2669:2705  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2618:2705  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_118:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2611:2705  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":2510:2712  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":563:601  uint256 public uncraftBurnPercent = 10 */\n    tag_36:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4316:4449  function uncraft(... */\n    tag_42:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4389:4393  SQFi */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4389:4398  SQFi.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4399:4406  tokenId */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4389:4407  SQFi.burn(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_122:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4422:4442  UncraftSQFI(tokenId) */\n      0x950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4434:4441  tokenId */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4422:4442  UncraftSQFI(tokenId) */\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4316:4449  function uncraft(... */\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":641:670  uint256 public maxSQFI = 2000 */\n    tag_44:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":3882:4003  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_49:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3948:3955  bytes32 */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3980  _roles */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3986  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":3981:3985  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3986  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":3974:3996  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/SQFITEM/AccessControl.sol\":3967:3996  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":3882:4003  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":4253:4398  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_55:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4336:4354  getRoleAdmin(role) */\n      tag_128\n        /* \"contracts/SQFITEM/AccessControl.sol\":4349:4353  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":4336:4348  getRoleAdmin */\n      tag_49\n        /* \"contracts/SQFITEM/AccessControl.sol\":4336:4354  getRoleAdmin(role) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_130\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_131\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_133\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4366:4391  _grantRole(role, account) */\n      tag_135\n        /* \"contracts/SQFITEM/AccessControl.sol\":4377:4381  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4383:4390  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4366:4376  _grantRole */\n      tag_136\n        /* \"contracts/SQFITEM/AccessControl.sol\":4366:4391  _grantRole(role, account) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4253:4398  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":5270:5484  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_58:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5376:5388  _msgSender() */\n      tag_138\n        /* \"contracts/SQFITEM/AccessControl.sol\":5376:5386  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":5376:5388  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5365:5388  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":5365:5372  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":5365:5388  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SQFITEM/AccessControl.sol\":5357:5440  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5451:5477  _revokeRole(role, account) */\n      tag_142\n        /* \"contracts/SQFITEM/AccessControl.sol\":5463:5467  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":5469:5476  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":5451:5462  _revokeRole */\n      tag_143\n        /* \"contracts/SQFITEM/AccessControl.sol\":5451:5477  _revokeRole(role, account) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/SQFITEM/AccessControl.sol\":5270:5484  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1715:1872  function editSQFI(uint256 _min, uint256 _max)... */\n    tag_62:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1793:1811  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_145\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_146\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_133\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1837:1841  _min */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1827:1834  minSQFI */\n      0x04\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1827:1841  minSQFI = _min */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1861:1865  _max */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1851:1858  maxSQFI */\n      0x05\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1851:1865  maxSQFI = _max */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1715:1872  function editSQFI(uint256 _min, uint256 _max)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":413:433  ISQFItem public SQFi */\n    tag_64:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/Pausable.sol\":1034:1118  function paused() public view virtual returns (bool) {... */\n    tag_68:\n        /* \"contracts/SQFITEM/Pausable.sol\":1081:1085  bool */\n      0x00\n        /* \"contracts/SQFITEM/Pausable.sol\":1104:1111  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SQFITEM/Pausable.sol\":1097:1111  return _paused */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Pausable.sol\":1034:1118  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":607:635  uint256 public minSQFI = 200 */\n    tag_71:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2868:4243  function createSQFI(... */\n    tag_76:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3048:3055  uint256 */\n      0x00\n        /* \"contracts/SQFITEM/Pausable.sol\":1348:1356  paused() */\n      tag_150\n        /* \"contracts/SQFITEM/Pausable.sol\":1348:1354  paused */\n      tag_68\n        /* \"contracts/SQFITEM/Pausable.sol\":1348:1356  paused() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/SQFITEM/Pausable.sol\":1347:1356  !paused() */\n      iszero\n        /* \"contracts/SQFITEM/Pausable.sol\":1339:1377  require(!paused(), \"Pausable: paused\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3081:3082  0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3071:3078  amount1 */\n      sload(0x17)\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3071:3082  amount1 > 0 */\n      gt\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3071:3106  amount1 > 0 && fee1 != address(0x0) */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3102:3105  0x0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3086:3106  fee1 != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3086:3090  fee1 */\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3086:3106  fee1 != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3071:3106  amount1 > 0 && fee1 != address(0x0) */\n    tag_155:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3067:3194  if (amount1 > 0 && fee1 != address(0x0)) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3129:3133  fee1 */\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3122:3147  IERC20(fee1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3148:3158  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3168:3172  this */\n      address\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3175:3182  amount1 */\n      sload(0x17)\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3122:3183  IERC20(fee1).transferFrom(msg.sender, address(this), amount1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":3067:3194  if (amount1 > 0 && fee1 != address(0x0)) {... */\n    tag_156:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4006:4021  uint256 tokenId */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4024:4028  SQFi */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4024:4037  SQFi.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd204c45e\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4051:4061  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4075:4084  tokenURI_ */\n      dup6\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4024:4094  SQFi.safeMint(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4006:4094  uint256 tokenId = SQFi.safeMint(... */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4109:4212  CraftSQFI(... */\n      0x9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4132:4142  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4156:4163  tokenId */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4177:4181  fee1 */\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4195:4202  amount1 */\n      sload(0x17)\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4109:4212  CraftSQFI(... */\n      mload(0x40)\n      tag_169\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4229:4236  tokenId */\n      dup1\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4222:4236  return tokenId */\n      swap2\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2868:4243  function createSQFI(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_80:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2877:2881  bool */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2906  _roles */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2907:2911  role */\n      dup5\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2912  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2920  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":2921:2928  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":2900:2929  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":2893:2929  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":2799:2936  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2578:2862  function editSupportedFee(... */\n    tag_85:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2729:2747  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_173\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_174\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_133\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2766:2771  _fee1 */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2759:2763  fee1 */\n      0x16\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2759:2771  fee1 = _fee1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2816:2824  _amount1 */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2806:2813  amount1 */\n      0x17\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2806:2824  amount1 = _amount1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2578:2862  function editSupportedFee(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":1917:1966  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_87:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":1917:1966  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":676:882  uint256[16] public runePower = [... */\n    tag_91:\n      0x06\n      dup2\n      0x10\n      dup2\n      lt\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":889:908  address public fee1 */\n    tag_94:\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":4632:4779  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_99:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4716:4734  getRoleAdmin(role) */\n      tag_178\n        /* \"contracts/SQFITEM/AccessControl.sol\":4729:4733  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":4716:4728  getRoleAdmin */\n      tag_49\n        /* \"contracts/SQFITEM/AccessControl.sol\":4716:4734  getRoleAdmin(role) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_180\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_181\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_133\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4746:4772  _revokeRole(role, account) */\n      tag_183\n        /* \"contracts/SQFITEM/AccessControl.sol\":4758:4762  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4764:4771  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":4746:4757  _revokeRole */\n      tag_143\n        /* \"contracts/SQFITEM/AccessControl.sol\":4746:4772  _revokeRole(role, account) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/SQFITEM/AccessControl.sol\":4632:4779  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2092:2403  function bytes32ToAmount16(bytes32 data)... */\n    tag_102:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2178:2203  uint256[16] memory amount */\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2224:2231  uint8 i */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2219:2397  for (uint8 i = 0; i < 32; i++) {... */\n    tag_187:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2241:2243  32 */\n      0x20\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2237:2238  i */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2237:2243  i < 32 */\n      0xff\n      and\n      lt\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2219:2397  for (uint8 i = 0; i < 32; i++) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2376:2377  0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2371:2372  2 */\n      0x02\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2367:2368  i */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2367:2372  i % 2 */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2367:2377  i % 2 == 0 */\n      0xff\n      and\n      eq\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2367:2385  i % 2 == 0 ? 1 : 0 */\n      tag_192\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2384:2385  0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2367:2385  i % 2 == 0 ? 1 : 0 */\n      jump(tag_193)\n    tag_192:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2380:2381  1 */\n      0x01\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2367:2385  i % 2 == 0 ? 1 : 0 */\n    tag_193:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2361:2364  256 */\n      0x0100\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2361:2386  256**(i % 2 == 0 ? 1 : 0) */\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2334:2338  data */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2339:2340  i */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2334:2341  data[i] */\n      0xff\n      and\n      0x20\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n    tag_196:\n      byte\n      0xf8\n      shl\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2328:2342  uint8(data[i]) */\n      0xf8\n      shr\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2328:2386  uint8(data[i]) *... */\n      0xff\n      and\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2296:2302  amount */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2307:2308  2 */\n      0x02\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2303:2304  i */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2303:2308  i / 2 */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2296:2309  amount[i / 2] */\n      0xff\n      and\n      0x10\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_198\n      jump\t// in\n    tag_204:\n    tag_203:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2296:2386  amount[i / 2] +... */\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2264:2270  amount */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2275:2276  2 */\n      0x02\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2271:2272  i */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2271:2276  i / 2 */\n      tag_207\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_207:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2264:2277  amount[i / 2] */\n      0xff\n      and\n      0x10\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_209\n      tag_198\n      jump\t// in\n    tag_209:\n    tag_208:\n      0x20\n      mul\n      add\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2264:2386  amount[i / 2] =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2245:2248  i++ */\n      dup1\n      dup1\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      swap2\n      pop\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2219:2397  for (uint8 i = 0; i < 32; i++) {... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2092:2403  function bytes32ToAmount16(bytes32 data)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":495:557  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_106:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":533:557  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":495:557  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1878:2086  function editUncraftBurnPercent(uint256 percent)... */\n    tag_110:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1959:1977  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_213\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_214\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_133\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2012:2015  100 */\n      0x64\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2001:2008  percent */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2001:2015  percent <= 100 */\n      gt\n      iszero\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1993:2041  require(percent <= 100, \"Must be valid percent\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2072:2079  percent */\n      dup2\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2051:2069  uncraftBurnPercent */\n      0x03\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":2051:2079  uncraftBurnPercent = percent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":1878:2086  function editUncraftBurnPercent(uint256 percent)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4455:4737  function withdraw(address token, uint256 amount)... */\n    tag_113:\n        /* \"contracts/SQFITEM/AccessControl.sol\":1962:1966  0x00 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4536:4554  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      tag_220\n        /* \"contracts/SQFITEM/AccessControl.sol\":2406:2410  role */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      tag_221\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2422  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":2412:2424  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2405  _checkRole */\n      tag_133\n        /* \"contracts/SQFITEM/AccessControl.sol\":2395:2425  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4591:4594  0x0 */\n      0x00\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4574:4595  token == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4574:4579  token */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4574:4595  token == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4570:4731  if (token == address(0x0)) {... */\n      tag_223\n      jumpi\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4619:4629  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4611:4639  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4611:4647  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4640:4646  amount */\n      dup4\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4611:4647  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4570:4731  if (token == address(0x0)) {... */\n      jump(tag_226)\n    tag_223:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4685:4690  token */\n      dup3\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4678:4700  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4701:4711  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4713:4719  amount */\n      dup5\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4678:4720  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4570:4731  if (token == address(0x0)) {... */\n    tag_226:\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":4455:4737  function withdraw(address token, uint256 amount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/SQFI_Factory.sol\":942:973  uint256 public amount1 = 100e18 */\n    tag_115:\n      sload(0x17)\n      dup2\n      jump\t// out\n        /* \"contracts/SQFITEM/ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_120:\n        /* \"contracts/SQFITEM/ERC165.sol\":848:852  bool */\n      0x00\n        /* \"contracts/SQFITEM/ERC165.sol\":886:911  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/SQFITEM/ERC165.sol\":871:882  interfaceId */\n      dup3\n        /* \"contracts/SQFITEM/ERC165.sol\":871:911  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/SQFITEM/ERC165.sol\":864:911  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/ERC165.sol\":763:918  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"contracts/SQFITEM/Context.sol\":640:647  address */\n      0x00\n        /* \"contracts/SQFITEM/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/SQFITEM/Context.sol\":659:676  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":3217:3701  function _checkRole(bytes32 role, address account) internal view {... */\n    tag_133:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3297:3319  hasRole(role, account) */\n      tag_235\n        /* \"contracts/SQFITEM/AccessControl.sol\":3305:3309  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":3311:3318  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":3297:3304  hasRole */\n      tag_80\n        /* \"contracts/SQFITEM/AccessControl.sol\":3297:3319  hasRole(role, account) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3292:3695  if (!hasRole(role, account)) {... */\n      tag_236\n      jumpi\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3521  Strings.toHexString(uint160(account), 20) */\n      tag_237\n        /* \"contracts/SQFITEM/AccessControl.sol\":3508:3515  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3521  Strings.toHexString(uint160(account), 20) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":3518:3520  20 */\n      0x14\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3499  Strings.toHexString */\n      tag_238\n        /* \"contracts/SQFITEM/AccessControl.sol\":3480:3521  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3592:3630  Strings.toHexString(uint256(role), 32) */\n      tag_239\n        /* \"contracts/SQFITEM/AccessControl.sol\":3620:3624  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":3612:3625  uint256(role) */\n      0x00\n      shr\n        /* \"contracts/SQFITEM/AccessControl.sol\":3627:3629  32 */\n      0x20\n        /* \"contracts/SQFITEM/AccessControl.sol\":3592:3611  Strings.toHexString */\n      tag_238\n        /* \"contracts/SQFITEM/AccessControl.sol\":3592:3630  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3387:3652  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SQFITEM/AccessControl.sol\":3335:3684  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SQFITEM/AccessControl.sol\":3292:3695  if (!hasRole(role, account)) {... */\n    tag_236:\n        /* \"contracts/SQFITEM/AccessControl.sol\":3217:3701  function _checkRole(bytes32 role, address account) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\n    tag_136:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n      tag_245\n        /* \"contracts/SQFITEM/AccessControl.sol\":6619:6623  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6625:6632  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6611:6618  hasRole */\n      tag_80\n        /* \"contracts/SQFITEM/AccessControl.sol\":6611:6633  hasRole(role, account) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\n      tag_246\n      jumpi\n        /* \"contracts/SQFITEM/AccessControl.sol\":6681:6685  true */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6655  _roles */\n      dup1\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6656:6660  role */\n      dup5\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6661  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6669  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6670:6677  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6678  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6649:6685  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n      tag_247\n        /* \"contracts/SQFITEM/AccessControl.sol\":6731:6741  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":6731:6743  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6722:6729  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6716:6720  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6704:6744  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6606:6755  if (!hasRole(role, account)) {... */\n    tag_246:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6537:6761  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/AccessControl.sol\":6767:6992  function _revokeRole(bytes32 role, address account) private {... */\n    tag_143:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6841:6863  hasRole(role, account) */\n      tag_249\n        /* \"contracts/SQFITEM/AccessControl.sol\":6849:6853  role */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6855:6862  account */\n      dup3\n        /* \"contracts/SQFITEM/AccessControl.sol\":6841:6848  hasRole */\n      tag_80\n        /* \"contracts/SQFITEM/AccessControl.sol\":6841:6863  hasRole(role, account) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6837:6986  if (hasRole(role, account)) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/SQFITEM/AccessControl.sol\":6911:6916  false */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6885  _roles */\n      0x01\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6891  _roles[role] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6886:6890  role */\n      dup5\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6891  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6899  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6908  _roles[role].members[account] */\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6900:6907  account */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6908  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SQFITEM/AccessControl.sol\":6879:6916  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SQFITEM/AccessControl.sol\":6962:6974  _msgSender() */\n      tag_251\n        /* \"contracts/SQFITEM/AccessControl.sol\":6962:6972  _msgSender */\n      tag_132\n        /* \"contracts/SQFITEM/AccessControl.sol\":6962:6974  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6935:6975  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6953:6960  account */\n      dup2\n        /* \"contracts/SQFITEM/AccessControl.sol\":6935:6975  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SQFITEM/AccessControl.sol\":6947:6951  role */\n      dup4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6935:6975  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/SQFITEM/AccessControl.sol\":6837:6986  if (hasRole(role, account)) {... */\n    tag_250:\n        /* \"contracts/SQFITEM/AccessControl.sol\":6767:6992  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SQFITEM/Strings.sol\":1535:1976  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_238:\n        /* \"contracts/SQFITEM/Strings.sol\":1610:1623  string memory */\n      0x60\n        /* \"contracts/SQFITEM/Strings.sol\":1635:1654  bytes memory buffer */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1680:1681  2 */\n      0x02\n        /* \"contracts/SQFITEM/Strings.sol\":1671:1677  length */\n      dup4\n        /* \"contracts/SQFITEM/Strings.sol\":1667:1668  2 */\n      0x02\n        /* \"contracts/SQFITEM/Strings.sol\":1667:1677  2 * length */\n      tag_253\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_253:\n        /* \"contracts/SQFITEM/Strings.sol\":1667:1681  2 * length + 2 */\n      tag_254\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_254:\n        /* \"contracts/SQFITEM/Strings.sol\":1657:1682  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_256\n      tag_257\n      jump\t// in\n    tag_256:\n    tag_255:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_258:\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1635:1682  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1707  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1698  buffer */\n      dup2\n        /* \"contracts/SQFITEM/Strings.sol\":1699:1700  0 */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1701  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_260\n      tag_198\n      jump\t// in\n    tag_260:\n    tag_259:\n      0x20\n      add\n      add\n        /* \"contracts/SQFITEM/Strings.sol\":1692:1707  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1732  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1723  buffer */\n      dup2\n        /* \"contracts/SQFITEM/Strings.sol\":1724:1725  1 */\n      0x01\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1726  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_262\n      tag_198\n      jump\t// in\n    tag_262:\n    tag_261:\n      0x20\n      add\n      add\n        /* \"contracts/SQFITEM/Strings.sol\":1717:1732  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1747:1756  uint256 i */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1772:1773  1 */\n      0x01\n        /* \"contracts/SQFITEM/Strings.sol\":1763:1769  length */\n      dup5\n        /* \"contracts/SQFITEM/Strings.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/SQFITEM/Strings.sol\":1759:1769  2 * length */\n      tag_266\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_266:\n        /* \"contracts/SQFITEM/Strings.sol\":1759:1773  2 * length + 1 */\n      tag_267\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_267:\n        /* \"contracts/SQFITEM/Strings.sol\":1747:1773  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1742:1874  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_263:\n        /* \"contracts/SQFITEM/Strings.sol\":1779:1780  1 */\n      0x01\n        /* \"contracts/SQFITEM/Strings.sol\":1775:1776  i */\n      dup2\n        /* \"contracts/SQFITEM/Strings.sol\":1775:1780  i > 1 */\n      gt\n        /* \"contracts/SQFITEM/Strings.sol\":1742:1874  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/SQFITEM/Strings.sol\":1813:1825  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contracts/SQFITEM/Strings.sol\":1834:1837  0xf */\n      0x0f\n        /* \"contracts/SQFITEM/Strings.sol\":1826:1831  value */\n      dup7\n        /* \"contracts/SQFITEM/Strings.sol\":1826:1837  value & 0xf */\n      and\n        /* \"contracts/SQFITEM/Strings.sol\":1813:1838  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_268\n      jumpi\n      tag_269\n      tag_198\n      jump\t// in\n    tag_269:\n    tag_268:\n      byte\n      0xf8\n      shl\n        /* \"contracts/SQFITEM/Strings.sol\":1801:1807  buffer */\n      dup3\n        /* \"contracts/SQFITEM/Strings.sol\":1808:1809  i */\n      dup3\n        /* \"contracts/SQFITEM/Strings.sol\":1801:1810  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_270\n      jumpi\n      tag_271\n      tag_198\n      jump\t// in\n    tag_271:\n    tag_270:\n      0x20\n      add\n      add\n        /* \"contracts/SQFITEM/Strings.sol\":1801:1838  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1862:1863  4 */\n      0x04\n        /* \"contracts/SQFITEM/Strings.sol\":1852:1863  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1782:1785  --i */\n      dup1\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      swap1\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1742:1874  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_263)\n    tag_264:\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1900:1901  0 */\n      0x00\n        /* \"contracts/SQFITEM/Strings.sol\":1891:1896  value */\n      dup5\n        /* \"contracts/SQFITEM/Strings.sol\":1891:1901  value == 0 */\n      eq\n        /* \"contracts/SQFITEM/Strings.sol\":1883:1938  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/SQFITEM/Strings.sol\":1962:1968  buffer */\n      dup1\n        /* \"contracts/SQFITEM/Strings.sol\":1948:1969  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"contracts/SQFITEM/Strings.sol\":1535:1976  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_185:\n      mload(0x40)\n      dup1\n      0x0200\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_277:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_278:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_279:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_280:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_281:\n        /* \"#utility.yul\":561:584   */\n      tag_352\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_280\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_353:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_282:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_355\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_281\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_358\n      tag_278\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":833:952   */\n    tag_357:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_359\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_282\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_283:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_284:\n        /* \"#utility.yul\":1268:1289   */\n      tag_362\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_283\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_364\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_284\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_285:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_286:\n        /* \"#utility.yul\":1688:1712   */\n      tag_367\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_285\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_38:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_369\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_286\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2075   */\n    tag_287:\n        /* \"#utility.yul\":2026:2050   */\n      tag_371\n        /* \"#utility.yul\":2044:2049   */\n      dup2\n        /* \"#utility.yul\":2026:2050   */\n      tag_285\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2019:2024   */\n      dup2\n        /* \"#utility.yul\":2016:2051   */\n      eq\n        /* \"#utility.yul\":2006:2069   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2006:2069   */\n    tag_372:\n        /* \"#utility.yul\":1953:2075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2220   */\n    tag_288:\n        /* \"#utility.yul\":2127:2132   */\n      0x00\n        /* \"#utility.yul\":2165:2171   */\n      dup2\n        /* \"#utility.yul\":2152:2172   */\n      calldataload\n        /* \"#utility.yul\":2143:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2181:2214   */\n      tag_374\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2181:2214   */\n      tag_287\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2081:2220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_41:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_377\n      tag_278\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2302:2421   */\n    tag_376:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_378\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_288\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_289:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2766   */\n    tag_290:\n        /* \"#utility.yul\":2717:2741   */\n      tag_381\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2717:2741   */\n      tag_289\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2710:2715   */\n      dup2\n        /* \"#utility.yul\":2707:2742   */\n      eq\n        /* \"#utility.yul\":2697:2760   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2753:2754   */\n      dup1\n        /* \"#utility.yul\":2746:2758   */\n      revert\n        /* \"#utility.yul\":2697:2760   */\n    tag_382:\n        /* \"#utility.yul\":2644:2766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2772:2911   */\n    tag_291:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2905   */\n      tag_384\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2872:2905   */\n      tag_290\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2772:2911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3246   */\n    tag_48:\n        /* \"#utility.yul\":2976:2982   */\n      0x00\n        /* \"#utility.yul\":3025:3027   */\n      0x20\n        /* \"#utility.yul\":3013:3022   */\n      dup3\n        /* \"#utility.yul\":3004:3011   */\n      dup5\n        /* \"#utility.yul\":3000:3023   */\n      sub\n        /* \"#utility.yul\":2996:3028   */\n      slt\n        /* \"#utility.yul\":2993:3112   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":3031:3110   */\n      tag_387\n      tag_278\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2993:3112   */\n    tag_386:\n        /* \"#utility.yul\":3151:3152   */\n      0x00\n        /* \"#utility.yul\":3176:3229   */\n      tag_388\n        /* \"#utility.yul\":3221:3228   */\n      dup5\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3201:3210   */\n      dup6\n        /* \"#utility.yul\":3197:3219   */\n      add\n        /* \"#utility.yul\":3176:3229   */\n      tag_291\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3166:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3239   */\n      pop\n        /* \"#utility.yul\":2917:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3370   */\n    tag_292:\n        /* \"#utility.yul\":3339:3363   */\n      tag_390\n        /* \"#utility.yul\":3357:3362   */\n      dup2\n        /* \"#utility.yul\":3339:3363   */\n      tag_289\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3334:3337   */\n      dup3\n        /* \"#utility.yul\":3327:3364   */\n      mstore\n        /* \"#utility.yul\":3252:3370   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3376:3598   */\n    tag_51:\n        /* \"#utility.yul\":3469:3473   */\n      0x00\n        /* \"#utility.yul\":3507:3509   */\n      0x20\n        /* \"#utility.yul\":3496:3505   */\n      dup3\n        /* \"#utility.yul\":3492:3510   */\n      add\n        /* \"#utility.yul\":3484:3510   */\n      swap1\n      pop\n        /* \"#utility.yul\":3520:3591   */\n      tag_392\n        /* \"#utility.yul\":3588:3589   */\n      0x00\n        /* \"#utility.yul\":3577:3586   */\n      dup4\n        /* \"#utility.yul\":3573:3590   */\n      add\n        /* \"#utility.yul\":3564:3570   */\n      dup5\n        /* \"#utility.yul\":3520:3591   */\n      tag_292\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3376:3598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3604:3730   */\n    tag_293:\n        /* \"#utility.yul\":3641:3648   */\n      0x00\n        /* \"#utility.yul\":3681:3723   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3674:3679   */\n      dup3\n        /* \"#utility.yul\":3670:3724   */\n      and\n        /* \"#utility.yul\":3659:3724   */\n      swap1\n      pop\n        /* \"#utility.yul\":3604:3730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3736:3832   */\n    tag_294:\n        /* \"#utility.yul\":3773:3780   */\n      0x00\n        /* \"#utility.yul\":3802:3826   */\n      tag_395\n        /* \"#utility.yul\":3820:3825   */\n      dup3\n        /* \"#utility.yul\":3802:3826   */\n      tag_293\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3791:3826   */\n      swap1\n      pop\n        /* \"#utility.yul\":3736:3832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:3960   */\n    tag_295:\n        /* \"#utility.yul\":3911:3935   */\n      tag_397\n        /* \"#utility.yul\":3929:3934   */\n      dup2\n        /* \"#utility.yul\":3911:3935   */\n      tag_294\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3904:3909   */\n      dup2\n        /* \"#utility.yul\":3901:3936   */\n      eq\n        /* \"#utility.yul\":3891:3954   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":3950:3951   */\n      0x00\n        /* \"#utility.yul\":3947:3948   */\n      dup1\n        /* \"#utility.yul\":3940:3952   */\n      revert\n        /* \"#utility.yul\":3891:3954   */\n    tag_398:\n        /* \"#utility.yul\":3838:3960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3966:4105   */\n    tag_296:\n        /* \"#utility.yul\":4012:4017   */\n      0x00\n        /* \"#utility.yul\":4050:4056   */\n      dup2\n        /* \"#utility.yul\":4037:4057   */\n      calldataload\n        /* \"#utility.yul\":4028:4057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4066:4099   */\n      tag_400\n        /* \"#utility.yul\":4093:4098   */\n      dup2\n        /* \"#utility.yul\":4066:4099   */\n      tag_295\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3966:4105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4111:4585   */\n    tag_54:\n        /* \"#utility.yul\":4179:4185   */\n      0x00\n        /* \"#utility.yul\":4187:4193   */\n      dup1\n        /* \"#utility.yul\":4236:4238   */\n      0x40\n        /* \"#utility.yul\":4224:4233   */\n      dup4\n        /* \"#utility.yul\":4215:4222   */\n      dup6\n        /* \"#utility.yul\":4211:4234   */\n      sub\n        /* \"#utility.yul\":4207:4239   */\n      slt\n        /* \"#utility.yul\":4204:4323   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":4242:4321   */\n      tag_403\n      tag_278\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4204:4323   */\n    tag_402:\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4387:4440   */\n      tag_404\n        /* \"#utility.yul\":4432:4439   */\n      dup6\n        /* \"#utility.yul\":4423:4429   */\n      dup3\n        /* \"#utility.yul\":4412:4421   */\n      dup7\n        /* \"#utility.yul\":4408:4430   */\n      add\n        /* \"#utility.yul\":4387:4440   */\n      tag_291\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4377:4440   */\n      swap3\n      pop\n        /* \"#utility.yul\":4333:4450   */\n      pop\n        /* \"#utility.yul\":4489:4491   */\n      0x20\n        /* \"#utility.yul\":4515:4568   */\n      tag_405\n        /* \"#utility.yul\":4560:4567   */\n      dup6\n        /* \"#utility.yul\":4551:4557   */\n      dup3\n        /* \"#utility.yul\":4540:4549   */\n      dup7\n        /* \"#utility.yul\":4536:4558   */\n      add\n        /* \"#utility.yul\":4515:4568   */\n      tag_296\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4505:4568   */\n      swap2\n      pop\n        /* \"#utility.yul\":4460:4578   */\n      pop\n        /* \"#utility.yul\":4111:4585   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:5065   */\n    tag_61:\n        /* \"#utility.yul\":4659:4665   */\n      0x00\n        /* \"#utility.yul\":4667:4673   */\n      dup1\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4704:4713   */\n      dup4\n        /* \"#utility.yul\":4695:4702   */\n      dup6\n        /* \"#utility.yul\":4691:4714   */\n      sub\n        /* \"#utility.yul\":4687:4719   */\n      slt\n        /* \"#utility.yul\":4684:4803   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_408\n      tag_278\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4684:4803   */\n    tag_407:\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4867:4920   */\n      tag_409\n        /* \"#utility.yul\":4912:4919   */\n      dup6\n        /* \"#utility.yul\":4903:4909   */\n      dup3\n        /* \"#utility.yul\":4892:4901   */\n      dup7\n        /* \"#utility.yul\":4888:4910   */\n      add\n        /* \"#utility.yul\":4867:4920   */\n      tag_288\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4857:4920   */\n      swap3\n      pop\n        /* \"#utility.yul\":4813:4930   */\n      pop\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"#utility.yul\":4995:5048   */\n      tag_410\n        /* \"#utility.yul\":5040:5047   */\n      dup6\n        /* \"#utility.yul\":5031:5037   */\n      dup3\n        /* \"#utility.yul\":5020:5029   */\n      dup7\n        /* \"#utility.yul\":5016:5038   */\n      add\n        /* \"#utility.yul\":4995:5048   */\n      tag_288\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4985:5048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4940:5058   */\n      pop\n        /* \"#utility.yul\":4591:5065   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5131   */\n    tag_297:\n        /* \"#utility.yul\":5099:5102   */\n      0x00\n        /* \"#utility.yul\":5120:5125   */\n      dup2\n        /* \"#utility.yul\":5113:5125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5071:5131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5137:5279   */\n    tag_298:\n        /* \"#utility.yul\":5187:5196   */\n      0x00\n        /* \"#utility.yul\":5220:5273   */\n      tag_413\n        /* \"#utility.yul\":5238:5272   */\n      tag_414\n        /* \"#utility.yul\":5247:5271   */\n      tag_415\n        /* \"#utility.yul\":5265:5270   */\n      dup5\n        /* \"#utility.yul\":5247:5271   */\n      tag_293\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5238:5272   */\n      tag_297\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5220:5273   */\n      tag_293\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5207:5273   */\n      swap1\n      pop\n        /* \"#utility.yul\":5137:5279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5285:5411   */\n    tag_299:\n        /* \"#utility.yul\":5335:5344   */\n      0x00\n        /* \"#utility.yul\":5368:5405   */\n      tag_417\n        /* \"#utility.yul\":5399:5404   */\n      dup3\n        /* \"#utility.yul\":5368:5405   */\n      tag_298\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5355:5405   */\n      swap1\n      pop\n        /* \"#utility.yul\":5285:5411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5417:5559   */\n    tag_300:\n        /* \"#utility.yul\":5483:5492   */\n      0x00\n        /* \"#utility.yul\":5516:5553   */\n      tag_419\n        /* \"#utility.yul\":5547:5552   */\n      dup3\n        /* \"#utility.yul\":5516:5553   */\n      tag_299\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5503:5553   */\n      swap1\n      pop\n        /* \"#utility.yul\":5417:5559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5565:5728   */\n    tag_301:\n        /* \"#utility.yul\":5668:5721   */\n      tag_421\n        /* \"#utility.yul\":5715:5720   */\n      dup2\n        /* \"#utility.yul\":5668:5721   */\n      tag_300\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5663:5666   */\n      dup3\n        /* \"#utility.yul\":5656:5722   */\n      mstore\n        /* \"#utility.yul\":5565:5728   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5734:5988   */\n    tag_66:\n        /* \"#utility.yul\":5843:5847   */\n      0x00\n        /* \"#utility.yul\":5881:5883   */\n      0x20\n        /* \"#utility.yul\":5870:5879   */\n      dup3\n        /* \"#utility.yul\":5866:5884   */\n      add\n        /* \"#utility.yul\":5858:5884   */\n      swap1\n      pop\n        /* \"#utility.yul\":5894:5981   */\n      tag_423\n        /* \"#utility.yul\":5978:5979   */\n      0x00\n        /* \"#utility.yul\":5967:5976   */\n      dup4\n        /* \"#utility.yul\":5963:5980   */\n      add\n        /* \"#utility.yul\":5954:5960   */\n      dup5\n        /* \"#utility.yul\":5894:5981   */\n      tag_301\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5734:5988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6111   */\n    tag_302:\n        /* \"#utility.yul\":6103:6104   */\n      0x00\n        /* \"#utility.yul\":6100:6101   */\n      dup1\n        /* \"#utility.yul\":6093:6105   */\n      revert\n        /* \"#utility.yul\":6117:6234   */\n    tag_303:\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6223:6224   */\n      dup1\n        /* \"#utility.yul\":6216:6228   */\n      revert\n        /* \"#utility.yul\":6240:6342   */\n    tag_304:\n        /* \"#utility.yul\":6281:6287   */\n      0x00\n        /* \"#utility.yul\":6332:6334   */\n      0x1f\n        /* \"#utility.yul\":6328:6335   */\n      not\n        /* \"#utility.yul\":6323:6325   */\n      0x1f\n        /* \"#utility.yul\":6316:6321   */\n      dup4\n        /* \"#utility.yul\":6312:6326   */\n      add\n        /* \"#utility.yul\":6308:6336   */\n      and\n        /* \"#utility.yul\":6298:6336   */\n      swap1\n      pop\n        /* \"#utility.yul\":6240:6342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6348:6528   */\n    tag_257:\n        /* \"#utility.yul\":6396:6473   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6393:6394   */\n      0x00\n        /* \"#utility.yul\":6386:6474   */\n      mstore\n        /* \"#utility.yul\":6493:6497   */\n      0x41\n        /* \"#utility.yul\":6490:6491   */\n      0x04\n        /* \"#utility.yul\":6483:6498   */\n      mstore\n        /* \"#utility.yul\":6517:6521   */\n      0x24\n        /* \"#utility.yul\":6514:6515   */\n      0x00\n        /* \"#utility.yul\":6507:6522   */\n      revert\n        /* \"#utility.yul\":6534:6815   */\n    tag_305:\n        /* \"#utility.yul\":6617:6644   */\n      tag_429\n        /* \"#utility.yul\":6639:6643   */\n      dup3\n        /* \"#utility.yul\":6617:6644   */\n      tag_304\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6609:6615   */\n      dup2\n        /* \"#utility.yul\":6605:6645   */\n      add\n        /* \"#utility.yul\":6747:6753   */\n      dup2\n        /* \"#utility.yul\":6735:6745   */\n      dup2\n        /* \"#utility.yul\":6732:6754   */\n      lt\n        /* \"#utility.yul\":6711:6729   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6699:6709   */\n      dup3\n        /* \"#utility.yul\":6696:6730   */\n      gt\n        /* \"#utility.yul\":6693:6755   */\n      or\n        /* \"#utility.yul\":6690:6778   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":6758:6776   */\n      tag_431\n      tag_257\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6690:6778   */\n    tag_430:\n        /* \"#utility.yul\":6798:6808   */\n      dup1\n        /* \"#utility.yul\":6794:6796   */\n      0x40\n        /* \"#utility.yul\":6787:6809   */\n      mstore\n        /* \"#utility.yul\":6577:6815   */\n      pop\n        /* \"#utility.yul\":6534:6815   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6821:6950   */\n    tag_306:\n        /* \"#utility.yul\":6855:6861   */\n      0x00\n        /* \"#utility.yul\":6882:6902   */\n      tag_433\n      tag_277\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6872:6902   */\n      swap1\n      pop\n        /* \"#utility.yul\":6911:6944   */\n      tag_434\n        /* \"#utility.yul\":6939:6943   */\n      dup3\n        /* \"#utility.yul\":6931:6937   */\n      dup3\n        /* \"#utility.yul\":6911:6944   */\n      tag_305\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6821:6950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6956:7264   */\n    tag_307:\n        /* \"#utility.yul\":7018:7022   */\n      0x00\n        /* \"#utility.yul\":7108:7126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7100:7106   */\n      dup3\n        /* \"#utility.yul\":7097:7127   */\n      gt\n        /* \"#utility.yul\":7094:7150   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":7130:7148   */\n      tag_437\n      tag_257\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7094:7150   */\n    tag_436:\n        /* \"#utility.yul\":7168:7197   */\n      tag_438\n        /* \"#utility.yul\":7190:7196   */\n      dup3\n        /* \"#utility.yul\":7168:7197   */\n      tag_304\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7160:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7252:7256   */\n      0x20\n        /* \"#utility.yul\":7246:7250   */\n      dup2\n        /* \"#utility.yul\":7242:7257   */\n      add\n        /* \"#utility.yul\":7234:7257   */\n      swap1\n      pop\n        /* \"#utility.yul\":6956:7264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7270:7424   */\n    tag_308:\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7349:7352   */\n      dup2\n        /* \"#utility.yul\":7344:7347   */\n      dup4\n        /* \"#utility.yul\":7331:7361   */\n      calldatacopy\n        /* \"#utility.yul\":7416:7417   */\n      0x00\n        /* \"#utility.yul\":7407:7413   */\n      dup4\n        /* \"#utility.yul\":7402:7405   */\n      dup4\n        /* \"#utility.yul\":7398:7414   */\n      add\n        /* \"#utility.yul\":7391:7418   */\n      mstore\n        /* \"#utility.yul\":7270:7424   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7430:7842   */\n    tag_309:\n        /* \"#utility.yul\":7508:7513   */\n      0x00\n        /* \"#utility.yul\":7533:7599   */\n      tag_441\n        /* \"#utility.yul\":7549:7598   */\n      tag_442\n        /* \"#utility.yul\":7591:7597   */\n      dup5\n        /* \"#utility.yul\":7549:7598   */\n      tag_307\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7533:7599   */\n      tag_306\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7524:7599   */\n      swap1\n      pop\n        /* \"#utility.yul\":7622:7628   */\n      dup3\n        /* \"#utility.yul\":7615:7620   */\n      dup2\n        /* \"#utility.yul\":7608:7629   */\n      mstore\n        /* \"#utility.yul\":7660:7664   */\n      0x20\n        /* \"#utility.yul\":7653:7658   */\n      dup2\n        /* \"#utility.yul\":7649:7665   */\n      add\n        /* \"#utility.yul\":7698:7701   */\n      dup5\n        /* \"#utility.yul\":7689:7695   */\n      dup5\n        /* \"#utility.yul\":7684:7687   */\n      dup5\n        /* \"#utility.yul\":7680:7696   */\n      add\n        /* \"#utility.yul\":7677:7702   */\n      gt\n        /* \"#utility.yul\":7674:7786   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7705:7784   */\n      tag_444\n      tag_303\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7674:7786   */\n    tag_443:\n        /* \"#utility.yul\":7795:7836   */\n      tag_445\n        /* \"#utility.yul\":7829:7835   */\n      dup5\n        /* \"#utility.yul\":7824:7827   */\n      dup3\n        /* \"#utility.yul\":7819:7822   */\n      dup6\n        /* \"#utility.yul\":7795:7836   */\n      tag_308\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7514:7842   */\n      pop\n        /* \"#utility.yul\":7430:7842   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7862:8202   */\n    tag_310:\n        /* \"#utility.yul\":7918:7923   */\n      0x00\n        /* \"#utility.yul\":7967:7970   */\n      dup3\n        /* \"#utility.yul\":7960:7964   */\n      0x1f\n        /* \"#utility.yul\":7952:7958   */\n      dup4\n        /* \"#utility.yul\":7948:7965   */\n      add\n        /* \"#utility.yul\":7944:7971   */\n      slt\n        /* \"#utility.yul\":7934:8056   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":7975:8054   */\n      tag_448\n      tag_302\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7934:8056   */\n    tag_447:\n        /* \"#utility.yul\":8092:8098   */\n      dup2\n        /* \"#utility.yul\":8079:8099   */\n      calldataload\n        /* \"#utility.yul\":8117:8196   */\n      tag_449\n        /* \"#utility.yul\":8192:8195   */\n      dup5\n        /* \"#utility.yul\":8184:8190   */\n      dup3\n        /* \"#utility.yul\":8177:8181   */\n      0x20\n        /* \"#utility.yul\":8169:8175   */\n      dup7\n        /* \"#utility.yul\":8165:8182   */\n      add\n        /* \"#utility.yul\":8117:8196   */\n      tag_309\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8108:8196   */\n      swap2\n      pop\n        /* \"#utility.yul\":7924:8202   */\n      pop\n        /* \"#utility.yul\":7862:8202   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8717   */\n    tag_75:\n        /* \"#utility.yul\":8277:8283   */\n      0x00\n        /* \"#utility.yul\":8326:8328   */\n      0x20\n        /* \"#utility.yul\":8314:8323   */\n      dup3\n        /* \"#utility.yul\":8305:8312   */\n      dup5\n        /* \"#utility.yul\":8301:8324   */\n      sub\n        /* \"#utility.yul\":8297:8329   */\n      slt\n        /* \"#utility.yul\":8294:8413   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8332:8411   */\n      tag_452\n      tag_278\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8294:8413   */\n    tag_451:\n        /* \"#utility.yul\":8480:8481   */\n      0x00\n        /* \"#utility.yul\":8469:8478   */\n      dup3\n        /* \"#utility.yul\":8465:8482   */\n      add\n        /* \"#utility.yul\":8452:8483   */\n      calldataload\n        /* \"#utility.yul\":8510:8528   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8502:8508   */\n      dup2\n        /* \"#utility.yul\":8499:8529   */\n      gt\n        /* \"#utility.yul\":8496:8613   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":8532:8611   */\n      tag_454\n      tag_279\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8496:8613   */\n    tag_453:\n        /* \"#utility.yul\":8637:8700   */\n      tag_455\n        /* \"#utility.yul\":8692:8699   */\n      dup5\n        /* \"#utility.yul\":8683:8689   */\n      dup3\n        /* \"#utility.yul\":8672:8681   */\n      dup6\n        /* \"#utility.yul\":8668:8690   */\n      add\n        /* \"#utility.yul\":8637:8700   */\n      tag_310\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8627:8700   */\n      swap2\n      pop\n        /* \"#utility.yul\":8423:8710   */\n      pop\n        /* \"#utility.yul\":8208:8717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8723:9197   */\n    tag_84:\n        /* \"#utility.yul\":8791:8797   */\n      0x00\n        /* \"#utility.yul\":8799:8805   */\n      dup1\n        /* \"#utility.yul\":8848:8850   */\n      0x40\n        /* \"#utility.yul\":8836:8845   */\n      dup4\n        /* \"#utility.yul\":8827:8834   */\n      dup6\n        /* \"#utility.yul\":8823:8846   */\n      sub\n        /* \"#utility.yul\":8819:8851   */\n      slt\n        /* \"#utility.yul\":8816:8935   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8854:8933   */\n      tag_458\n      tag_278\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8816:8935   */\n    tag_457:\n        /* \"#utility.yul\":8974:8975   */\n      0x00\n        /* \"#utility.yul\":8999:9052   */\n      tag_459\n        /* \"#utility.yul\":9044:9051   */\n      dup6\n        /* \"#utility.yul\":9035:9041   */\n      dup3\n        /* \"#utility.yul\":9024:9033   */\n      dup7\n        /* \"#utility.yul\":9020:9042   */\n      add\n        /* \"#utility.yul\":8999:9052   */\n      tag_296\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8989:9052   */\n      swap3\n      pop\n        /* \"#utility.yul\":8945:9062   */\n      pop\n        /* \"#utility.yul\":9101:9103   */\n      0x20\n        /* \"#utility.yul\":9127:9180   */\n      tag_460\n        /* \"#utility.yul\":9172:9179   */\n      dup6\n        /* \"#utility.yul\":9163:9169   */\n      dup3\n        /* \"#utility.yul\":9152:9161   */\n      dup7\n        /* \"#utility.yul\":9148:9170   */\n      add\n        /* \"#utility.yul\":9127:9180   */\n      tag_288\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9117:9180   */\n      swap2\n      pop\n        /* \"#utility.yul\":9072:9190   */\n      pop\n        /* \"#utility.yul\":8723:9197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9203:9321   */\n    tag_311:\n        /* \"#utility.yul\":9290:9314   */\n      tag_462\n        /* \"#utility.yul\":9308:9313   */\n      dup2\n        /* \"#utility.yul\":9290:9314   */\n      tag_294\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9285:9288   */\n      dup3\n        /* \"#utility.yul\":9278:9315   */\n      mstore\n        /* \"#utility.yul\":9203:9321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9327:9549   */\n    tag_96:\n        /* \"#utility.yul\":9420:9424   */\n      0x00\n        /* \"#utility.yul\":9458:9460   */\n      0x20\n        /* \"#utility.yul\":9447:9456   */\n      dup3\n        /* \"#utility.yul\":9443:9461   */\n      add\n        /* \"#utility.yul\":9435:9461   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9542   */\n      tag_464\n        /* \"#utility.yul\":9539:9540   */\n      0x00\n        /* \"#utility.yul\":9528:9537   */\n      dup4\n        /* \"#utility.yul\":9524:9541   */\n      add\n        /* \"#utility.yul\":9515:9521   */\n      dup5\n        /* \"#utility.yul\":9471:9542   */\n      tag_311\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9327:9549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9555:9660   */\n    tag_312:\n        /* \"#utility.yul\":9621:9627   */\n      0x00\n        /* \"#utility.yul\":9649:9653   */\n      0x10\n        /* \"#utility.yul\":9639:9653   */\n      swap1\n      pop\n        /* \"#utility.yul\":9555:9660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9666:9810   */\n    tag_313:\n        /* \"#utility.yul\":9764:9775   */\n      0x00\n        /* \"#utility.yul\":9801:9804   */\n      dup2\n        /* \"#utility.yul\":9786:9804   */\n      swap1\n      pop\n        /* \"#utility.yul\":9666:9810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9816:9915   */\n    tag_314:\n        /* \"#utility.yul\":9882:9886   */\n      0x00\n        /* \"#utility.yul\":9905:9908   */\n      dup2\n        /* \"#utility.yul\":9897:9908   */\n      swap1\n      pop\n        /* \"#utility.yul\":9816:9915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9921:10029   */\n    tag_315:\n        /* \"#utility.yul\":9998:10022   */\n      tag_469\n        /* \"#utility.yul\":10016:10021   */\n      dup2\n        /* \"#utility.yul\":9998:10022   */\n      tag_285\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9993:9996   */\n      dup3\n        /* \"#utility.yul\":9986:10023   */\n      mstore\n        /* \"#utility.yul\":9921:10029   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10035:10214   */\n    tag_316:\n        /* \"#utility.yul\":10104:10114   */\n      0x00\n        /* \"#utility.yul\":10125:10171   */\n      tag_471\n        /* \"#utility.yul\":10167:10170   */\n      dup4\n        /* \"#utility.yul\":10159:10165   */\n      dup4\n        /* \"#utility.yul\":10125:10171   */\n      tag_315\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10203:10207   */\n      0x20\n        /* \"#utility.yul\":10198:10201   */\n      dup4\n        /* \"#utility.yul\":10194:10208   */\n      add\n        /* \"#utility.yul\":10180:10208   */\n      swap1\n      pop\n        /* \"#utility.yul\":10035:10214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10220:10332   */\n    tag_317:\n        /* \"#utility.yul\":10289:10293   */\n      0x00\n        /* \"#utility.yul\":10321:10325   */\n      0x20\n        /* \"#utility.yul\":10316:10319   */\n      dup3\n        /* \"#utility.yul\":10312:10326   */\n      add\n        /* \"#utility.yul\":10304:10326   */\n      swap1\n      pop\n        /* \"#utility.yul\":10220:10332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10372:11072   */\n    tag_318:\n        /* \"#utility.yul\":10510:10563   */\n      tag_474\n        /* \"#utility.yul\":10557:10562   */\n      dup2\n        /* \"#utility.yul\":10510:10563   */\n      tag_312\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10579:10664   */\n      tag_475\n        /* \"#utility.yul\":10657:10663   */\n      dup2\n        /* \"#utility.yul\":10652:10655   */\n      dup5\n        /* \"#utility.yul\":10579:10664   */\n      tag_313\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10572:10664   */\n      swap3\n      pop\n        /* \"#utility.yul\":10688:10743   */\n      tag_476\n        /* \"#utility.yul\":10737:10742   */\n      dup3\n        /* \"#utility.yul\":10688:10743   */\n      tag_314\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10766:10773   */\n      dup1\n        /* \"#utility.yul\":10797:10798   */\n      0x00\n        /* \"#utility.yul\":10782:11065   */\n    tag_477:\n        /* \"#utility.yul\":10807:10813   */\n      dup4\n        /* \"#utility.yul\":10804:10805   */\n      dup2\n        /* \"#utility.yul\":10801:10814   */\n      lt\n        /* \"#utility.yul\":10782:11065   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":10883:10889   */\n      dup2\n        /* \"#utility.yul\":10877:10890   */\n      mload\n        /* \"#utility.yul\":10910:10973   */\n      tag_480\n        /* \"#utility.yul\":10969:10972   */\n      dup8\n        /* \"#utility.yul\":10954:10967   */\n      dup3\n        /* \"#utility.yul\":10910:10973   */\n      tag_316\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10903:10973   */\n      swap7\n      pop\n        /* \"#utility.yul\":10996:11055   */\n      tag_481\n        /* \"#utility.yul\":11048:11054   */\n      dup4\n        /* \"#utility.yul\":10996:11055   */\n      tag_317\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":10986:11055   */\n      swap3\n      pop\n        /* \"#utility.yul\":10842:11065   */\n      pop\n        /* \"#utility.yul\":10829:10830   */\n      0x01\n        /* \"#utility.yul\":10826:10827   */\n      dup2\n        /* \"#utility.yul\":10822:10831   */\n      add\n        /* \"#utility.yul\":10817:10831   */\n      swap1\n      pop\n        /* \"#utility.yul\":10782:11065   */\n      jump(tag_477)\n    tag_479:\n        /* \"#utility.yul\":10786:10800   */\n      pop\n        /* \"#utility.yul\":10486:11072   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10372:11072   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11078:11397   */\n    tag_104:\n        /* \"#utility.yul\":11219:11223   */\n      0x00\n        /* \"#utility.yul\":11257:11260   */\n      0x0200\n        /* \"#utility.yul\":11246:11255   */\n      dup3\n        /* \"#utility.yul\":11242:11261   */\n      add\n        /* \"#utility.yul\":11234:11261   */\n      swap1\n      pop\n        /* \"#utility.yul\":11271:11390   */\n      tag_483\n        /* \"#utility.yul\":11387:11388   */\n      0x00\n        /* \"#utility.yul\":11376:11385   */\n      dup4\n        /* \"#utility.yul\":11372:11389   */\n      add\n        /* \"#utility.yul\":11363:11369   */\n      dup5\n        /* \"#utility.yul\":11271:11390   */\n      tag_318\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11078:11397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11403:11572   */\n    tag_319:\n        /* \"#utility.yul\":11487:11498   */\n      0x00\n        /* \"#utility.yul\":11521:11527   */\n      dup3\n        /* \"#utility.yul\":11516:11519   */\n      dup3\n        /* \"#utility.yul\":11509:11528   */\n      mstore\n        /* \"#utility.yul\":11561:11565   */\n      0x20\n        /* \"#utility.yul\":11556:11559   */\n      dup3\n        /* \"#utility.yul\":11552:11566   */\n      add\n        /* \"#utility.yul\":11537:11566   */\n      swap1\n      pop\n        /* \"#utility.yul\":11403:11572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11578:11812   */\n    tag_320:\n        /* \"#utility.yul\":11718:11752   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11714:11715   */\n      0x00\n        /* \"#utility.yul\":11706:11712   */\n      dup3\n        /* \"#utility.yul\":11702:11716   */\n      add\n        /* \"#utility.yul\":11695:11753   */\n      mstore\n        /* \"#utility.yul\":11787:11804   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":11782:11784   */\n      0x20\n        /* \"#utility.yul\":11774:11780   */\n      dup3\n        /* \"#utility.yul\":11770:11785   */\n      add\n        /* \"#utility.yul\":11763:11805   */\n      mstore\n        /* \"#utility.yul\":11578:11812   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11818:12184   */\n    tag_321:\n        /* \"#utility.yul\":11960:11963   */\n      0x00\n        /* \"#utility.yul\":11981:12048   */\n      tag_487\n        /* \"#utility.yul\":12045:12047   */\n      0x2f\n        /* \"#utility.yul\":12040:12043   */\n      dup4\n        /* \"#utility.yul\":11981:12048   */\n      tag_319\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11974:12048   */\n      swap2\n      pop\n        /* \"#utility.yul\":12057:12150   */\n      tag_488\n        /* \"#utility.yul\":12146:12149   */\n      dup3\n        /* \"#utility.yul\":12057:12150   */\n      tag_320\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12175:12177   */\n      0x40\n        /* \"#utility.yul\":12170:12173   */\n      dup3\n        /* \"#utility.yul\":12166:12178   */\n      add\n        /* \"#utility.yul\":12159:12178   */\n      swap1\n      pop\n        /* \"#utility.yul\":11818:12184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12190:12609   */\n    tag_141:\n        /* \"#utility.yul\":12356:12360   */\n      0x00\n        /* \"#utility.yul\":12394:12396   */\n      0x20\n        /* \"#utility.yul\":12383:12392   */\n      dup3\n        /* \"#utility.yul\":12379:12397   */\n      add\n        /* \"#utility.yul\":12371:12397   */\n      swap1\n      pop\n        /* \"#utility.yul\":12443:12452   */\n      dup2\n        /* \"#utility.yul\":12437:12441   */\n      dup2\n        /* \"#utility.yul\":12433:12453   */\n      sub\n        /* \"#utility.yul\":12429:12430   */\n      0x00\n        /* \"#utility.yul\":12418:12427   */\n      dup4\n        /* \"#utility.yul\":12414:12431   */\n      add\n        /* \"#utility.yul\":12407:12454   */\n      mstore\n        /* \"#utility.yul\":12471:12602   */\n      tag_490\n        /* \"#utility.yul\":12597:12601   */\n      dup2\n        /* \"#utility.yul\":12471:12602   */\n      tag_321\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12463:12602   */\n      swap1\n      pop\n        /* \"#utility.yul\":12190:12609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12615:12781   */\n    tag_322:\n        /* \"#utility.yul\":12755:12773   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":12751:12752   */\n      0x00\n        /* \"#utility.yul\":12743:12749   */\n      dup3\n        /* \"#utility.yul\":12739:12753   */\n      add\n        /* \"#utility.yul\":12732:12774   */\n      mstore\n        /* \"#utility.yul\":12615:12781   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12787:13153   */\n    tag_323:\n        /* \"#utility.yul\":12929:12932   */\n      0x00\n        /* \"#utility.yul\":12950:13017   */\n      tag_493\n        /* \"#utility.yul\":13014:13016   */\n      0x10\n        /* \"#utility.yul\":13009:13012   */\n      dup4\n        /* \"#utility.yul\":12950:13017   */\n      tag_319\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12943:13017   */\n      swap2\n      pop\n        /* \"#utility.yul\":13026:13119   */\n      tag_494\n        /* \"#utility.yul\":13115:13118   */\n      dup3\n        /* \"#utility.yul\":13026:13119   */\n      tag_322\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13144:13146   */\n      0x20\n        /* \"#utility.yul\":13139:13142   */\n      dup3\n        /* \"#utility.yul\":13135:13147   */\n      add\n        /* \"#utility.yul\":13128:13147   */\n      swap1\n      pop\n        /* \"#utility.yul\":12787:13153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13159:13578   */\n    tag_153:\n        /* \"#utility.yul\":13325:13329   */\n      0x00\n        /* \"#utility.yul\":13363:13365   */\n      0x20\n        /* \"#utility.yul\":13352:13361   */\n      dup3\n        /* \"#utility.yul\":13348:13366   */\n      add\n        /* \"#utility.yul\":13340:13366   */\n      swap1\n      pop\n        /* \"#utility.yul\":13412:13421   */\n      dup2\n        /* \"#utility.yul\":13406:13410   */\n      dup2\n        /* \"#utility.yul\":13402:13422   */\n      sub\n        /* \"#utility.yul\":13398:13399   */\n      0x00\n        /* \"#utility.yul\":13387:13396   */\n      dup4\n        /* \"#utility.yul\":13383:13400   */\n      add\n        /* \"#utility.yul\":13376:13423   */\n      mstore\n        /* \"#utility.yul\":13440:13571   */\n      tag_496\n        /* \"#utility.yul\":13566:13570   */\n      dup2\n        /* \"#utility.yul\":13440:13571   */\n      tag_323\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13432:13571   */\n      swap1\n      pop\n        /* \"#utility.yul\":13159:13578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13584:14026   */\n    tag_158:\n        /* \"#utility.yul\":13733:13737   */\n      0x00\n        /* \"#utility.yul\":13771:13773   */\n      0x60\n        /* \"#utility.yul\":13760:13769   */\n      dup3\n        /* \"#utility.yul\":13756:13774   */\n      add\n        /* \"#utility.yul\":13748:13774   */\n      swap1\n      pop\n        /* \"#utility.yul\":13784:13855   */\n      tag_498\n        /* \"#utility.yul\":13852:13853   */\n      0x00\n        /* \"#utility.yul\":13841:13850   */\n      dup4\n        /* \"#utility.yul\":13837:13854   */\n      add\n        /* \"#utility.yul\":13828:13834   */\n      dup7\n        /* \"#utility.yul\":13784:13855   */\n      tag_311\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13865:13937   */\n      tag_499\n        /* \"#utility.yul\":13933:13935   */\n      0x20\n        /* \"#utility.yul\":13922:13931   */\n      dup4\n        /* \"#utility.yul\":13918:13936   */\n      add\n        /* \"#utility.yul\":13909:13915   */\n      dup6\n        /* \"#utility.yul\":13865:13937   */\n      tag_311\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13947:14019   */\n      tag_500\n        /* \"#utility.yul\":14015:14017   */\n      0x40\n        /* \"#utility.yul\":14004:14013   */\n      dup4\n        /* \"#utility.yul\":14000:14018   */\n      add\n        /* \"#utility.yul\":13991:13997   */\n      dup5\n        /* \"#utility.yul\":13947:14019   */\n      tag_286\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13584:14026   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14032:14148   */\n    tag_324:\n        /* \"#utility.yul\":14102:14123   */\n      tag_502\n        /* \"#utility.yul\":14117:14122   */\n      dup2\n        /* \"#utility.yul\":14102:14123   */\n      tag_283\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14095:14100   */\n      dup2\n        /* \"#utility.yul\":14092:14124   */\n      eq\n        /* \"#utility.yul\":14082:14142   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":14138:14139   */\n      0x00\n        /* \"#utility.yul\":14135:14136   */\n      dup1\n        /* \"#utility.yul\":14128:14140   */\n      revert\n        /* \"#utility.yul\":14082:14142   */\n    tag_503:\n        /* \"#utility.yul\":14032:14148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14154:14291   */\n    tag_325:\n        /* \"#utility.yul\":14208:14213   */\n      0x00\n        /* \"#utility.yul\":14239:14245   */\n      dup2\n        /* \"#utility.yul\":14233:14246   */\n      mload\n        /* \"#utility.yul\":14224:14246   */\n      swap1\n      pop\n        /* \"#utility.yul\":14255:14285   */\n      tag_505\n        /* \"#utility.yul\":14279:14284   */\n      dup2\n        /* \"#utility.yul\":14255:14285   */\n      tag_324\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14154:14291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14297:14642   */\n    tag_162:\n        /* \"#utility.yul\":14364:14370   */\n      0x00\n        /* \"#utility.yul\":14413:14415   */\n      0x20\n        /* \"#utility.yul\":14401:14410   */\n      dup3\n        /* \"#utility.yul\":14392:14399   */\n      dup5\n        /* \"#utility.yul\":14388:14411   */\n      sub\n        /* \"#utility.yul\":14384:14416   */\n      slt\n        /* \"#utility.yul\":14381:14500   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":14419:14498   */\n      tag_508\n      tag_278\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14381:14500   */\n    tag_507:\n        /* \"#utility.yul\":14539:14540   */\n      0x00\n        /* \"#utility.yul\":14564:14625   */\n      tag_509\n        /* \"#utility.yul\":14617:14624   */\n      dup5\n        /* \"#utility.yul\":14608:14614   */\n      dup3\n        /* \"#utility.yul\":14597:14606   */\n      dup6\n        /* \"#utility.yul\":14593:14615   */\n      add\n        /* \"#utility.yul\":14564:14625   */\n      tag_325\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14554:14625   */\n      swap2\n      pop\n        /* \"#utility.yul\":14510:14635   */\n      pop\n        /* \"#utility.yul\":14297:14642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14648:14747   */\n    tag_326:\n        /* \"#utility.yul\":14700:14706   */\n      0x00\n        /* \"#utility.yul\":14734:14739   */\n      dup2\n        /* \"#utility.yul\":14728:14740   */\n      mload\n        /* \"#utility.yul\":14718:14740   */\n      swap1\n      pop\n        /* \"#utility.yul\":14648:14747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14753:15060   */\n    tag_327:\n        /* \"#utility.yul\":14821:14822   */\n      0x00\n        /* \"#utility.yul\":14831:14944   */\n    tag_512:\n        /* \"#utility.yul\":14845:14851   */\n      dup4\n        /* \"#utility.yul\":14842:14843   */\n      dup2\n        /* \"#utility.yul\":14839:14852   */\n      lt\n        /* \"#utility.yul\":14831:14944   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":14930:14931   */\n      dup1\n        /* \"#utility.yul\":14925:14928   */\n      dup3\n        /* \"#utility.yul\":14921:14932   */\n      add\n        /* \"#utility.yul\":14915:14933   */\n      mload\n        /* \"#utility.yul\":14911:14912   */\n      dup2\n        /* \"#utility.yul\":14906:14909   */\n      dup5\n        /* \"#utility.yul\":14902:14913   */\n      add\n        /* \"#utility.yul\":14895:14934   */\n      mstore\n        /* \"#utility.yul\":14867:14869   */\n      0x20\n        /* \"#utility.yul\":14864:14865   */\n      dup2\n        /* \"#utility.yul\":14860:14870   */\n      add\n        /* \"#utility.yul\":14855:14870   */\n      swap1\n      pop\n        /* \"#utility.yul\":14831:14944   */\n      jump(tag_512)\n    tag_514:\n        /* \"#utility.yul\":14962:14968   */\n      dup4\n        /* \"#utility.yul\":14959:14960   */\n      dup2\n        /* \"#utility.yul\":14956:14969   */\n      gt\n        /* \"#utility.yul\":14953:15054   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":15042:15043   */\n      0x00\n        /* \"#utility.yul\":15033:15039   */\n      dup5\n        /* \"#utility.yul\":15028:15031   */\n      dup5\n        /* \"#utility.yul\":15024:15040   */\n      add\n        /* \"#utility.yul\":15017:15044   */\n      mstore\n        /* \"#utility.yul\":14953:15054   */\n    tag_515:\n        /* \"#utility.yul\":14802:15060   */\n      pop\n        /* \"#utility.yul\":14753:15060   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15066:15430   */\n    tag_328:\n        /* \"#utility.yul\":15154:15157   */\n      0x00\n        /* \"#utility.yul\":15182:15221   */\n      tag_517\n        /* \"#utility.yul\":15215:15220   */\n      dup3\n        /* \"#utility.yul\":15182:15221   */\n      tag_326\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15237:15308   */\n      tag_518\n        /* \"#utility.yul\":15301:15307   */\n      dup2\n        /* \"#utility.yul\":15296:15299   */\n      dup6\n        /* \"#utility.yul\":15237:15308   */\n      tag_319\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15230:15308   */\n      swap4\n      pop\n        /* \"#utility.yul\":15317:15369   */\n      tag_519\n        /* \"#utility.yul\":15362:15368   */\n      dup2\n        /* \"#utility.yul\":15357:15360   */\n      dup6\n        /* \"#utility.yul\":15350:15354   */\n      0x20\n        /* \"#utility.yul\":15343:15348   */\n      dup7\n        /* \"#utility.yul\":15339:15355   */\n      add\n        /* \"#utility.yul\":15317:15369   */\n      tag_327\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15394:15423   */\n      tag_520\n        /* \"#utility.yul\":15416:15422   */\n      dup2\n        /* \"#utility.yul\":15394:15423   */\n      tag_304\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15389:15392   */\n      dup5\n        /* \"#utility.yul\":15385:15424   */\n      add\n        /* \"#utility.yul\":15378:15424   */\n      swap2\n      pop\n        /* \"#utility.yul\":15158:15430   */\n      pop\n        /* \"#utility.yul\":15066:15430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15436:15859   */\n    tag_164:\n        /* \"#utility.yul\":15577:15581   */\n      0x00\n        /* \"#utility.yul\":15615:15617   */\n      0x40\n        /* \"#utility.yul\":15604:15613   */\n      dup3\n        /* \"#utility.yul\":15600:15618   */\n      add\n        /* \"#utility.yul\":15592:15618   */\n      swap1\n      pop\n        /* \"#utility.yul\":15628:15699   */\n      tag_522\n        /* \"#utility.yul\":15696:15697   */\n      0x00\n        /* \"#utility.yul\":15685:15694   */\n      dup4\n        /* \"#utility.yul\":15681:15698   */\n      add\n        /* \"#utility.yul\":15672:15678   */\n      dup6\n        /* \"#utility.yul\":15628:15699   */\n      tag_311\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15746:15755   */\n      dup2\n        /* \"#utility.yul\":15740:15744   */\n      dup2\n        /* \"#utility.yul\":15736:15756   */\n      sub\n        /* \"#utility.yul\":15731:15733   */\n      0x20\n        /* \"#utility.yul\":15720:15729   */\n      dup4\n        /* \"#utility.yul\":15716:15734   */\n      add\n        /* \"#utility.yul\":15709:15757   */\n      mstore\n        /* \"#utility.yul\":15774:15852   */\n      tag_523\n        /* \"#utility.yul\":15847:15851   */\n      dup2\n        /* \"#utility.yul\":15838:15844   */\n      dup5\n        /* \"#utility.yul\":15774:15852   */\n      tag_328\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15766:15852   */\n      swap1\n      pop\n        /* \"#utility.yul\":15436:15859   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15865:16008   */\n    tag_329:\n        /* \"#utility.yul\":15922:15927   */\n      0x00\n        /* \"#utility.yul\":15953:15959   */\n      dup2\n        /* \"#utility.yul\":15947:15960   */\n      mload\n        /* \"#utility.yul\":15938:15960   */\n      swap1\n      pop\n        /* \"#utility.yul\":15969:16002   */\n      tag_525\n        /* \"#utility.yul\":15996:16001   */\n      dup2\n        /* \"#utility.yul\":15969:16002   */\n      tag_287\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15865:16008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16014:16365   */\n    tag_168:\n        /* \"#utility.yul\":16084:16090   */\n      0x00\n        /* \"#utility.yul\":16133:16135   */\n      0x20\n        /* \"#utility.yul\":16121:16130   */\n      dup3\n        /* \"#utility.yul\":16112:16119   */\n      dup5\n        /* \"#utility.yul\":16108:16131   */\n      sub\n        /* \"#utility.yul\":16104:16136   */\n      slt\n        /* \"#utility.yul\":16101:16220   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":16139:16218   */\n      tag_528\n      tag_278\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16101:16220   */\n    tag_527:\n        /* \"#utility.yul\":16259:16260   */\n      0x00\n        /* \"#utility.yul\":16284:16348   */\n      tag_529\n        /* \"#utility.yul\":16340:16347   */\n      dup5\n        /* \"#utility.yul\":16331:16337   */\n      dup3\n        /* \"#utility.yul\":16320:16329   */\n      dup6\n        /* \"#utility.yul\":16316:16338   */\n      add\n        /* \"#utility.yul\":16284:16348   */\n      tag_329\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16274:16348   */\n      swap2\n      pop\n        /* \"#utility.yul\":16230:16358   */\n      pop\n        /* \"#utility.yul\":16014:16365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16371:16924   */\n    tag_170:\n        /* \"#utility.yul\":16548:16552   */\n      0x00\n        /* \"#utility.yul\":16586:16589   */\n      0x80\n        /* \"#utility.yul\":16575:16584   */\n      dup3\n        /* \"#utility.yul\":16571:16590   */\n      add\n        /* \"#utility.yul\":16563:16590   */\n      swap1\n      pop\n        /* \"#utility.yul\":16600:16671   */\n      tag_531\n        /* \"#utility.yul\":16668:16669   */\n      0x00\n        /* \"#utility.yul\":16657:16666   */\n      dup4\n        /* \"#utility.yul\":16653:16670   */\n      add\n        /* \"#utility.yul\":16644:16650   */\n      dup8\n        /* \"#utility.yul\":16600:16671   */\n      tag_311\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16681:16753   */\n      tag_532\n        /* \"#utility.yul\":16749:16751   */\n      0x20\n        /* \"#utility.yul\":16738:16747   */\n      dup4\n        /* \"#utility.yul\":16734:16752   */\n      add\n        /* \"#utility.yul\":16725:16731   */\n      dup7\n        /* \"#utility.yul\":16681:16753   */\n      tag_286\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16763:16835   */\n      tag_533\n        /* \"#utility.yul\":16831:16833   */\n      0x40\n        /* \"#utility.yul\":16820:16829   */\n      dup4\n        /* \"#utility.yul\":16816:16834   */\n      add\n        /* \"#utility.yul\":16807:16813   */\n      dup6\n        /* \"#utility.yul\":16763:16835   */\n      tag_311\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16845:16917   */\n      tag_534\n        /* \"#utility.yul\":16913:16915   */\n      0x60\n        /* \"#utility.yul\":16902:16911   */\n      dup4\n        /* \"#utility.yul\":16898:16916   */\n      add\n        /* \"#utility.yul\":16889:16895   */\n      dup5\n        /* \"#utility.yul\":16845:16917   */\n      tag_286\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16371:16924   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16930:17016   */\n    tag_330:\n        /* \"#utility.yul\":16965:16972   */\n      0x00\n        /* \"#utility.yul\":17005:17009   */\n      0xff\n        /* \"#utility.yul\":16998:17003   */\n      dup3\n        /* \"#utility.yul\":16994:17010   */\n      and\n        /* \"#utility.yul\":16983:17010   */\n      swap1\n      pop\n        /* \"#utility.yul\":16930:17016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17022:17202   */\n    tag_331:\n        /* \"#utility.yul\":17070:17147   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17067:17068   */\n      0x00\n        /* \"#utility.yul\":17060:17148   */\n      mstore\n        /* \"#utility.yul\":17167:17171   */\n      0x12\n        /* \"#utility.yul\":17164:17165   */\n      0x04\n        /* \"#utility.yul\":17157:17172   */\n      mstore\n        /* \"#utility.yul\":17191:17195   */\n      0x24\n        /* \"#utility.yul\":17188:17189   */\n      0x00\n        /* \"#utility.yul\":17181:17196   */\n      revert\n        /* \"#utility.yul\":17208:17378   */\n    tag_191:\n        /* \"#utility.yul\":17238:17239   */\n      0x00\n        /* \"#utility.yul\":17255:17273   */\n      tag_538\n        /* \"#utility.yul\":17271:17272   */\n      dup3\n        /* \"#utility.yul\":17255:17273   */\n      tag_330\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":17250:17273   */\n      swap2\n      pop\n        /* \"#utility.yul\":17287:17305   */\n      tag_539\n        /* \"#utility.yul\":17303:17304   */\n      dup4\n        /* \"#utility.yul\":17287:17305   */\n      tag_330\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17282:17305   */\n      swap3\n      pop\n        /* \"#utility.yul\":17324:17325   */\n      dup3\n        /* \"#utility.yul\":17314:17349   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":17329:17347   */\n      tag_541\n      tag_331\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17314:17349   */\n    tag_540:\n        /* \"#utility.yul\":17370:17371   */\n      dup3\n        /* \"#utility.yul\":17367:17368   */\n      dup3\n        /* \"#utility.yul\":17363:17372   */\n      mod\n        /* \"#utility.yul\":17358:17372   */\n      swap1\n      pop\n        /* \"#utility.yul\":17208:17378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17384:17564   */\n    tag_332:\n        /* \"#utility.yul\":17432:17509   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17429:17430   */\n      0x00\n        /* \"#utility.yul\":17422:17510   */\n      mstore\n        /* \"#utility.yul\":17529:17533   */\n      0x11\n        /* \"#utility.yul\":17526:17527   */\n      0x04\n        /* \"#utility.yul\":17519:17534   */\n      mstore\n        /* \"#utility.yul\":17553:17557   */\n      0x24\n        /* \"#utility.yul\":17550:17551   */\n      0x00\n        /* \"#utility.yul\":17543:17558   */\n      revert\n        /* \"#utility.yul\":17570:17672   */\n    tag_333:\n        /* \"#utility.yul\":17612:17620   */\n      0x00\n        /* \"#utility.yul\":17659:17664   */\n      dup2\n        /* \"#utility.yul\":17656:17657   */\n      0x01\n        /* \"#utility.yul\":17652:17665   */\n      shr\n        /* \"#utility.yul\":17631:17665   */\n      swap1\n      pop\n        /* \"#utility.yul\":17570:17672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17678:18526   */\n    tag_334:\n        /* \"#utility.yul\":17739:17744   */\n      0x00\n        /* \"#utility.yul\":17746:17750   */\n      dup1\n        /* \"#utility.yul\":17770:17776   */\n      dup3\n        /* \"#utility.yul\":17761:17776   */\n      swap2\n      pop\n        /* \"#utility.yul\":17794:17799   */\n      dup4\n        /* \"#utility.yul\":17785:17799   */\n      swap1\n      pop\n        /* \"#utility.yul\":17808:18520   */\n    tag_545:\n        /* \"#utility.yul\":17829:17830   */\n      0x01\n        /* \"#utility.yul\":17819:17827   */\n      dup6\n        /* \"#utility.yul\":17816:17831   */\n      gt\n        /* \"#utility.yul\":17808:18520   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":17924:17928   */\n      dup1\n        /* \"#utility.yul\":17919:17922   */\n      dup7\n        /* \"#utility.yul\":17915:17929   */\n      div\n        /* \"#utility.yul\":17909:17913   */\n      dup2\n        /* \"#utility.yul\":17906:17930   */\n      gt\n        /* \"#utility.yul\":17903:17953   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":17933:17951   */\n      tag_549\n      tag_332\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17903:17953   */\n    tag_548:\n        /* \"#utility.yul\":17983:17984   */\n      0x01\n        /* \"#utility.yul\":17973:17981   */\n      dup6\n        /* \"#utility.yul\":17969:17985   */\n      and\n        /* \"#utility.yul\":17966:18417   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":18398:18402   */\n      dup1\n        /* \"#utility.yul\":18391:18396   */\n      dup3\n        /* \"#utility.yul\":18387:18403   */\n      mul\n        /* \"#utility.yul\":18378:18403   */\n      swap2\n      pop\n        /* \"#utility.yul\":17966:18417   */\n    tag_550:\n        /* \"#utility.yul\":18448:18452   */\n      dup1\n        /* \"#utility.yul\":18442:18446   */\n      dup2\n        /* \"#utility.yul\":18438:18453   */\n      mul\n        /* \"#utility.yul\":18430:18453   */\n      swap1\n      pop\n        /* \"#utility.yul\":18478:18510   */\n      tag_551\n        /* \"#utility.yul\":18501:18509   */\n      dup6\n        /* \"#utility.yul\":18478:18510   */\n      tag_333\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":18466:18510   */\n      swap5\n      pop\n        /* \"#utility.yul\":17808:18520   */\n      jump(tag_545)\n    tag_547:\n        /* \"#utility.yul\":17678:18526   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18532:19605   */\n    tag_335:\n        /* \"#utility.yul\":18586:18591   */\n      0x00\n        /* \"#utility.yul\":18777:18785   */\n      dup3\n        /* \"#utility.yul\":18767:18807   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":18798:18799   */\n      0x01\n        /* \"#utility.yul\":18789:18799   */\n      swap1\n      pop\n        /* \"#utility.yul\":18800:18805   */\n      jump(tag_552)\n        /* \"#utility.yul\":18767:18807   */\n    tag_553:\n        /* \"#utility.yul\":18826:18830   */\n      dup2\n        /* \"#utility.yul\":18816:18852   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":18843:18844   */\n      0x00\n        /* \"#utility.yul\":18834:18844   */\n      swap1\n      pop\n        /* \"#utility.yul\":18845:18850   */\n      jump(tag_552)\n        /* \"#utility.yul\":18816:18852   */\n    tag_554:\n        /* \"#utility.yul\":18912:18916   */\n      dup2\n        /* \"#utility.yul\":18960:18961   */\n      0x01\n        /* \"#utility.yul\":18955:18982   */\n      dup2\n      eq\n      tag_556\n      jumpi\n        /* \"#utility.yul\":18996:18997   */\n      0x02\n        /* \"#utility.yul\":18991:19182   */\n      dup2\n      eq\n      tag_557\n      jumpi\n        /* \"#utility.yul\":18905:19182   */\n      jump(tag_555)\n        /* \"#utility.yul\":18955:18982   */\n    tag_556:\n        /* \"#utility.yul\":18973:18974   */\n      0x01\n        /* \"#utility.yul\":18964:18974   */\n      swap2\n      pop\n        /* \"#utility.yul\":18975:18980   */\n      pop\n      jump(tag_552)\n        /* \"#utility.yul\":18991:19182   */\n    tag_557:\n        /* \"#utility.yul\":19036:19039   */\n      0xff\n        /* \"#utility.yul\":19026:19034   */\n      dup5\n        /* \"#utility.yul\":19023:19040   */\n      gt\n        /* \"#utility.yul\":19020:19063   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":19043:19061   */\n      tag_559\n      tag_332\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19020:19063   */\n    tag_558:\n        /* \"#utility.yul\":19092:19100   */\n      dup4\n        /* \"#utility.yul\":19089:19090   */\n      0x02\n        /* \"#utility.yul\":19085:19101   */\n      exp\n        /* \"#utility.yul\":19076:19101   */\n      swap2\n      pop\n        /* \"#utility.yul\":19127:19130   */\n      dup5\n        /* \"#utility.yul\":19120:19125   */\n      dup3\n        /* \"#utility.yul\":19117:19131   */\n      gt\n        /* \"#utility.yul\":19114:19154   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":19134:19152   */\n      tag_561\n      tag_332\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":19114:19154   */\n    tag_560:\n        /* \"#utility.yul\":19167:19172   */\n      pop\n      jump(tag_552)\n        /* \"#utility.yul\":18905:19182   */\n    tag_555:\n      pop\n        /* \"#utility.yul\":19291:19293   */\n      0x20\n        /* \"#utility.yul\":19281:19289   */\n      dup4\n        /* \"#utility.yul\":19278:19294   */\n      lt\n        /* \"#utility.yul\":19272:19275   */\n      0x0133\n        /* \"#utility.yul\":19266:19270   */\n      dup4\n        /* \"#utility.yul\":19263:19276   */\n      lt\n        /* \"#utility.yul\":19259:19295   */\n      and\n        /* \"#utility.yul\":19241:19243   */\n      0x4e\n        /* \"#utility.yul\":19231:19239   */\n      dup5\n        /* \"#utility.yul\":19228:19244   */\n      lt\n        /* \"#utility.yul\":19223:19225   */\n      0x0b\n        /* \"#utility.yul\":19217:19221   */\n      dup5\n        /* \"#utility.yul\":19214:19226   */\n      lt\n        /* \"#utility.yul\":19210:19245   */\n      and\n        /* \"#utility.yul\":19194:19305   */\n      or\n        /* \"#utility.yul\":19191:19437   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":19347:19355   */\n      dup3\n        /* \"#utility.yul\":19341:19345   */\n      dup3\n        /* \"#utility.yul\":19337:19356   */\n      exp\n        /* \"#utility.yul\":19328:19356   */\n      swap1\n      pop\n        /* \"#utility.yul\":19382:19385   */\n      dup4\n        /* \"#utility.yul\":19375:19380   */\n      dup2\n        /* \"#utility.yul\":19372:19386   */\n      gt\n        /* \"#utility.yul\":19369:19409   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":19389:19407   */\n      tag_564\n      tag_332\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19369:19409   */\n    tag_563:\n        /* \"#utility.yul\":19422:19427   */\n      jump(tag_552)\n        /* \"#utility.yul\":19191:19437   */\n    tag_562:\n        /* \"#utility.yul\":19462:19504   */\n      tag_565\n        /* \"#utility.yul\":19500:19503   */\n      dup5\n        /* \"#utility.yul\":19490:19498   */\n      dup5\n        /* \"#utility.yul\":19484:19488   */\n      dup5\n        /* \"#utility.yul\":19481:19482   */\n      0x01\n        /* \"#utility.yul\":19462:19504   */\n      tag_334\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19447:19504   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":19536:19540   */\n      dup2\n        /* \"#utility.yul\":19531:19534   */\n      dup5\n        /* \"#utility.yul\":19527:19541   */\n      div\n        /* \"#utility.yul\":19520:19525   */\n      dup2\n        /* \"#utility.yul\":19517:19542   */\n      gt\n        /* \"#utility.yul\":19514:19565   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":19545:19563   */\n      tag_567\n      tag_332\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19514:19565   */\n    tag_566:\n        /* \"#utility.yul\":19594:19598   */\n      dup2\n        /* \"#utility.yul\":19587:19592   */\n      dup2\n        /* \"#utility.yul\":19583:19599   */\n      mul\n        /* \"#utility.yul\":19574:19599   */\n      swap1\n      pop\n        /* \"#utility.yul\":18532:19605   */\n    tag_552:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19611:19892   */\n    tag_195:\n        /* \"#utility.yul\":19669:19674   */\n      0x00\n        /* \"#utility.yul\":19693:19716   */\n      tag_569\n        /* \"#utility.yul\":19711:19715   */\n      dup3\n        /* \"#utility.yul\":19693:19716   */\n      tag_285\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19685:19716   */\n      swap2\n      pop\n        /* \"#utility.yul\":19737:19762   */\n      tag_570\n        /* \"#utility.yul\":19753:19761   */\n      dup4\n        /* \"#utility.yul\":19737:19762   */\n      tag_330\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19725:19762   */\n      swap3\n      pop\n        /* \"#utility.yul\":19781:19885   */\n      tag_571\n        /* \"#utility.yul\":19818:19884   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19808:19816   */\n      dup5\n        /* \"#utility.yul\":19802:19806   */\n      dup5\n        /* \"#utility.yul\":19781:19885   */\n      tag_335\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19772:19885   */\n      swap1\n      pop\n        /* \"#utility.yul\":19611:19892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19898:20078   */\n    tag_198:\n        /* \"#utility.yul\":19946:20023   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19943:19944   */\n      0x00\n        /* \"#utility.yul\":19936:20024   */\n      mstore\n        /* \"#utility.yul\":20043:20047   */\n      0x32\n        /* \"#utility.yul\":20040:20041   */\n      0x04\n        /* \"#utility.yul\":20033:20048   */\n      mstore\n        /* \"#utility.yul\":20067:20071   */\n      0x24\n        /* \"#utility.yul\":20064:20065   */\n      0x00\n        /* \"#utility.yul\":20057:20072   */\n      revert\n        /* \"#utility.yul\":20084:20432   */\n    tag_200:\n        /* \"#utility.yul\":20124:20131   */\n      0x00\n        /* \"#utility.yul\":20147:20167   */\n      tag_574\n        /* \"#utility.yul\":20165:20166   */\n      dup3\n        /* \"#utility.yul\":20147:20167   */\n      tag_285\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20142:20167   */\n      swap2\n      pop\n        /* \"#utility.yul\":20181:20201   */\n      tag_575\n        /* \"#utility.yul\":20199:20200   */\n      dup4\n        /* \"#utility.yul\":20181:20201   */\n      tag_285\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20176:20201   */\n      swap3\n      pop\n        /* \"#utility.yul\":20369:20370   */\n      dup2\n        /* \"#utility.yul\":20301:20367   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20297:20371   */\n      div\n        /* \"#utility.yul\":20294:20295   */\n      dup4\n        /* \"#utility.yul\":20291:20372   */\n      gt\n        /* \"#utility.yul\":20286:20287   */\n      dup3\n        /* \"#utility.yul\":20279:20288   */\n      iszero\n        /* \"#utility.yul\":20272:20289   */\n      iszero\n        /* \"#utility.yul\":20268:20373   */\n      and\n        /* \"#utility.yul\":20265:20396   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":20376:20394   */\n      tag_577\n      tag_332\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20265:20396   */\n    tag_576:\n        /* \"#utility.yul\":20424:20425   */\n      dup3\n        /* \"#utility.yul\":20421:20422   */\n      dup3\n        /* \"#utility.yul\":20417:20426   */\n      mul\n        /* \"#utility.yul\":20406:20426   */\n      swap1\n      pop\n        /* \"#utility.yul\":20084:20432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20438:20617   */\n    tag_202:\n        /* \"#utility.yul\":20476:20477   */\n      0x00\n        /* \"#utility.yul\":20493:20511   */\n      tag_579\n        /* \"#utility.yul\":20509:20510   */\n      dup3\n        /* \"#utility.yul\":20493:20511   */\n      tag_330\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":20488:20511   */\n      swap2\n      pop\n        /* \"#utility.yul\":20525:20543   */\n      tag_580\n        /* \"#utility.yul\":20541:20542   */\n      dup4\n        /* \"#utility.yul\":20525:20543   */\n      tag_330\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20520:20543   */\n      swap3\n      pop\n        /* \"#utility.yul\":20562:20563   */\n      dup3\n        /* \"#utility.yul\":20552:20587   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":20567:20585   */\n      tag_582\n      tag_331\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20552:20587   */\n    tag_581:\n        /* \"#utility.yul\":20609:20610   */\n      dup3\n        /* \"#utility.yul\":20606:20607   */\n      dup3\n        /* \"#utility.yul\":20602:20611   */\n      div\n        /* \"#utility.yul\":20597:20611   */\n      swap1\n      pop\n        /* \"#utility.yul\":20438:20617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20623:20928   */\n    tag_206:\n        /* \"#utility.yul\":20663:20666   */\n      0x00\n        /* \"#utility.yul\":20682:20702   */\n      tag_584\n        /* \"#utility.yul\":20700:20701   */\n      dup3\n        /* \"#utility.yul\":20682:20702   */\n      tag_285\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":20677:20702   */\n      swap2\n      pop\n        /* \"#utility.yul\":20716:20736   */\n      tag_585\n        /* \"#utility.yul\":20734:20735   */\n      dup4\n        /* \"#utility.yul\":20716:20736   */\n      tag_285\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":20711:20736   */\n      swap3\n      pop\n        /* \"#utility.yul\":20870:20871   */\n      dup3\n        /* \"#utility.yul\":20802:20868   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20798:20872   */\n      sub\n        /* \"#utility.yul\":20795:20796   */\n      dup3\n        /* \"#utility.yul\":20792:20873   */\n      gt\n        /* \"#utility.yul\":20789:20896   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":20876:20894   */\n      tag_587\n      tag_332\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":20789:20896   */\n    tag_586:\n        /* \"#utility.yul\":20920:20921   */\n      dup3\n        /* \"#utility.yul\":20917:20918   */\n      dup3\n        /* \"#utility.yul\":20913:20922   */\n      add\n        /* \"#utility.yul\":20906:20922   */\n      swap1\n      pop\n        /* \"#utility.yul\":20623:20928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20934:21101   */\n    tag_211:\n        /* \"#utility.yul\":20971:20974   */\n      0x00\n        /* \"#utility.yul\":20994:21016   */\n      tag_589\n        /* \"#utility.yul\":21010:21015   */\n      dup3\n        /* \"#utility.yul\":20994:21016   */\n      tag_330\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":20985:21016   */\n      swap2\n      pop\n        /* \"#utility.yul\":21038:21042   */\n      0xff\n        /* \"#utility.yul\":21031:21036   */\n      dup3\n        /* \"#utility.yul\":21028:21043   */\n      sub\n        /* \"#utility.yul\":21025:21066   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":21046:21064   */\n      tag_591\n      tag_332\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":21025:21066   */\n    tag_590:\n        /* \"#utility.yul\":21093:21094   */\n      0x01\n        /* \"#utility.yul\":21086:21091   */\n      dup3\n        /* \"#utility.yul\":21082:21095   */\n      add\n        /* \"#utility.yul\":21075:21095   */\n      swap1\n      pop\n        /* \"#utility.yul\":20934:21101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21107:21278   */\n    tag_336:\n        /* \"#utility.yul\":21247:21270   */\n      0x4d7573742062652076616c69642070657263656e740000000000000000000000\n        /* \"#utility.yul\":21243:21244   */\n      0x00\n        /* \"#utility.yul\":21235:21241   */\n      dup3\n        /* \"#utility.yul\":21231:21245   */\n      add\n        /* \"#utility.yul\":21224:21271   */\n      mstore\n        /* \"#utility.yul\":21107:21278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21284:21650   */\n    tag_337:\n        /* \"#utility.yul\":21426:21429   */\n      0x00\n        /* \"#utility.yul\":21447:21514   */\n      tag_594\n        /* \"#utility.yul\":21511:21513   */\n      0x15\n        /* \"#utility.yul\":21506:21509   */\n      dup4\n        /* \"#utility.yul\":21447:21514   */\n      tag_319\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":21440:21514   */\n      swap2\n      pop\n        /* \"#utility.yul\":21523:21616   */\n      tag_595\n        /* \"#utility.yul\":21612:21615   */\n      dup3\n        /* \"#utility.yul\":21523:21616   */\n      tag_336\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":21641:21643   */\n      0x20\n        /* \"#utility.yul\":21636:21639   */\n      dup3\n        /* \"#utility.yul\":21632:21644   */\n      add\n        /* \"#utility.yul\":21625:21644   */\n      swap1\n      pop\n        /* \"#utility.yul\":21284:21650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21656:22075   */\n    tag_218:\n        /* \"#utility.yul\":21822:21826   */\n      0x00\n        /* \"#utility.yul\":21860:21862   */\n      0x20\n        /* \"#utility.yul\":21849:21858   */\n      dup3\n        /* \"#utility.yul\":21845:21863   */\n      add\n        /* \"#utility.yul\":21837:21863   */\n      swap1\n      pop\n        /* \"#utility.yul\":21909:21918   */\n      dup2\n        /* \"#utility.yul\":21903:21907   */\n      dup2\n        /* \"#utility.yul\":21899:21919   */\n      sub\n        /* \"#utility.yul\":21895:21896   */\n      0x00\n        /* \"#utility.yul\":21884:21893   */\n      dup4\n        /* \"#utility.yul\":21880:21897   */\n      add\n        /* \"#utility.yul\":21873:21920   */\n      mstore\n        /* \"#utility.yul\":21937:22068   */\n      tag_597\n        /* \"#utility.yul\":22063:22067   */\n      dup2\n        /* \"#utility.yul\":21937:22068   */\n      tag_337\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":21929:22068   */\n      swap1\n      pop\n        /* \"#utility.yul\":21656:22075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22081:22413   */\n    tag_228:\n        /* \"#utility.yul\":22202:22206   */\n      0x00\n        /* \"#utility.yul\":22240:22242   */\n      0x40\n        /* \"#utility.yul\":22229:22238   */\n      dup3\n        /* \"#utility.yul\":22225:22243   */\n      add\n        /* \"#utility.yul\":22217:22243   */\n      swap1\n      pop\n        /* \"#utility.yul\":22253:22324   */\n      tag_599\n        /* \"#utility.yul\":22321:22322   */\n      0x00\n        /* \"#utility.yul\":22310:22319   */\n      dup4\n        /* \"#utility.yul\":22306:22323   */\n      add\n        /* \"#utility.yul\":22297:22303   */\n      dup6\n        /* \"#utility.yul\":22253:22324   */\n      tag_311\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":22334:22406   */\n      tag_600\n        /* \"#utility.yul\":22402:22404   */\n      0x20\n        /* \"#utility.yul\":22391:22400   */\n      dup4\n        /* \"#utility.yul\":22387:22405   */\n      add\n        /* \"#utility.yul\":22378:22384   */\n      dup5\n        /* \"#utility.yul\":22334:22406   */\n      tag_286\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":22081:22413   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22419:22567   */\n    tag_338:\n        /* \"#utility.yul\":22521:22532   */\n      0x00\n        /* \"#utility.yul\":22558:22561   */\n      dup2\n        /* \"#utility.yul\":22543:22561   */\n      swap1\n      pop\n        /* \"#utility.yul\":22419:22567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22573:22746   */\n    tag_339:\n        /* \"#utility.yul\":22713:22738   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":22709:22710   */\n      0x00\n        /* \"#utility.yul\":22701:22707   */\n      dup3\n        /* \"#utility.yul\":22697:22711   */\n      add\n        /* \"#utility.yul\":22690:22739   */\n      mstore\n        /* \"#utility.yul\":22573:22746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22752:23154   */\n    tag_340:\n        /* \"#utility.yul\":22912:22915   */\n      0x00\n        /* \"#utility.yul\":22933:23018   */\n      tag_604\n        /* \"#utility.yul\":23015:23017   */\n      0x17\n        /* \"#utility.yul\":23010:23013   */\n      dup4\n        /* \"#utility.yul\":22933:23018   */\n      tag_338\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":22926:23018   */\n      swap2\n      pop\n        /* \"#utility.yul\":23027:23120   */\n      tag_605\n        /* \"#utility.yul\":23116:23119   */\n      dup3\n        /* \"#utility.yul\":23027:23120   */\n      tag_339\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":23145:23147   */\n      0x17\n        /* \"#utility.yul\":23140:23143   */\n      dup3\n        /* \"#utility.yul\":23136:23148   */\n      add\n        /* \"#utility.yul\":23129:23148   */\n      swap1\n      pop\n        /* \"#utility.yul\":22752:23154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23160:23537   */\n    tag_341:\n        /* \"#utility.yul\":23266:23269   */\n      0x00\n        /* \"#utility.yul\":23294:23333   */\n      tag_607\n        /* \"#utility.yul\":23327:23332   */\n      dup3\n        /* \"#utility.yul\":23294:23333   */\n      tag_326\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":23349:23438   */\n      tag_608\n        /* \"#utility.yul\":23431:23437   */\n      dup2\n        /* \"#utility.yul\":23426:23429   */\n      dup6\n        /* \"#utility.yul\":23349:23438   */\n      tag_338\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":23342:23438   */\n      swap4\n      pop\n        /* \"#utility.yul\":23447:23499   */\n      tag_609\n        /* \"#utility.yul\":23492:23498   */\n      dup2\n        /* \"#utility.yul\":23487:23490   */\n      dup6\n        /* \"#utility.yul\":23480:23484   */\n      0x20\n        /* \"#utility.yul\":23473:23478   */\n      dup7\n        /* \"#utility.yul\":23469:23485   */\n      add\n        /* \"#utility.yul\":23447:23499   */\n      tag_327\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":23524:23530   */\n      dup1\n        /* \"#utility.yul\":23519:23522   */\n      dup5\n        /* \"#utility.yul\":23515:23531   */\n      add\n        /* \"#utility.yul\":23508:23531   */\n      swap2\n      pop\n        /* \"#utility.yul\":23270:23537   */\n      pop\n        /* \"#utility.yul\":23160:23537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23543:23710   */\n    tag_342:\n        /* \"#utility.yul\":23683:23702   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":23679:23680   */\n      0x00\n        /* \"#utility.yul\":23671:23677   */\n      dup3\n        /* \"#utility.yul\":23667:23681   */\n      add\n        /* \"#utility.yul\":23660:23703   */\n      mstore\n        /* \"#utility.yul\":23543:23710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23716:24118   */\n    tag_343:\n        /* \"#utility.yul\":23876:23879   */\n      0x00\n        /* \"#utility.yul\":23897:23982   */\n      tag_612\n        /* \"#utility.yul\":23979:23981   */\n      0x11\n        /* \"#utility.yul\":23974:23977   */\n      dup4\n        /* \"#utility.yul\":23897:23982   */\n      tag_338\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":23890:23982   */\n      swap2\n      pop\n        /* \"#utility.yul\":23991:24084   */\n      tag_613\n        /* \"#utility.yul\":24080:24083   */\n      dup3\n        /* \"#utility.yul\":23991:24084   */\n      tag_342\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":24109:24111   */\n      0x11\n        /* \"#utility.yul\":24104:24107   */\n      dup3\n        /* \"#utility.yul\":24100:24112   */\n      add\n        /* \"#utility.yul\":24093:24112   */\n      swap1\n      pop\n        /* \"#utility.yul\":23716:24118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24124:25091   */\n    tag_241:\n        /* \"#utility.yul\":24506:24509   */\n      0x00\n        /* \"#utility.yul\":24528:24676   */\n      tag_615\n        /* \"#utility.yul\":24672:24675   */\n      dup3\n        /* \"#utility.yul\":24528:24676   */\n      tag_340\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":24521:24676   */\n      swap2\n      pop\n        /* \"#utility.yul\":24693:24788   */\n      tag_616\n        /* \"#utility.yul\":24784:24787   */\n      dup3\n        /* \"#utility.yul\":24775:24781   */\n      dup6\n        /* \"#utility.yul\":24693:24788   */\n      tag_341\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":24686:24788   */\n      swap2\n      pop\n        /* \"#utility.yul\":24805:24953   */\n      tag_617\n        /* \"#utility.yul\":24949:24952   */\n      dup3\n        /* \"#utility.yul\":24805:24953   */\n      tag_343\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":24798:24953   */\n      swap2\n      pop\n        /* \"#utility.yul\":24970:25065   */\n      tag_618\n        /* \"#utility.yul\":25061:25064   */\n      dup3\n        /* \"#utility.yul\":25052:25058   */\n      dup5\n        /* \"#utility.yul\":24970:25065   */\n      tag_341\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":24963:25065   */\n      swap2\n      pop\n        /* \"#utility.yul\":25082:25085   */\n      dup2\n        /* \"#utility.yul\":25075:25085   */\n      swap1\n      pop\n        /* \"#utility.yul\":24124:25091   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25097:25410   */\n    tag_243:\n        /* \"#utility.yul\":25210:25214   */\n      0x00\n        /* \"#utility.yul\":25248:25250   */\n      0x20\n        /* \"#utility.yul\":25237:25246   */\n      dup3\n        /* \"#utility.yul\":25233:25251   */\n      add\n        /* \"#utility.yul\":25225:25251   */\n      swap1\n      pop\n        /* \"#utility.yul\":25297:25306   */\n      dup2\n        /* \"#utility.yul\":25291:25295   */\n      dup2\n        /* \"#utility.yul\":25287:25307   */\n      sub\n        /* \"#utility.yul\":25283:25284   */\n      0x00\n        /* \"#utility.yul\":25272:25281   */\n      dup4\n        /* \"#utility.yul\":25268:25285   */\n      add\n        /* \"#utility.yul\":25261:25308   */\n      mstore\n        /* \"#utility.yul\":25325:25403   */\n      tag_620\n        /* \"#utility.yul\":25398:25402   */\n      dup2\n        /* \"#utility.yul\":25389:25395   */\n      dup5\n        /* \"#utility.yul\":25325:25403   */\n      tag_328\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":25317:25403   */\n      swap1\n      pop\n        /* \"#utility.yul\":25097:25410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25416:25587   */\n    tag_273:\n        /* \"#utility.yul\":25455:25458   */\n      0x00\n        /* \"#utility.yul\":25478:25502   */\n      tag_622\n        /* \"#utility.yul\":25496:25501   */\n      dup3\n        /* \"#utility.yul\":25478:25502   */\n      tag_285\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":25469:25502   */\n      swap2\n      pop\n        /* \"#utility.yul\":25524:25528   */\n      0x00\n        /* \"#utility.yul\":25517:25522   */\n      dup3\n        /* \"#utility.yul\":25514:25529   */\n      sub\n        /* \"#utility.yul\":25511:25552   */\n      tag_623\n      jumpi\n        /* \"#utility.yul\":25532:25550   */\n      tag_624\n      tag_332\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":25511:25552   */\n    tag_623:\n        /* \"#utility.yul\":25579:25580   */\n      0x01\n        /* \"#utility.yul\":25572:25577   */\n      dup3\n        /* \"#utility.yul\":25568:25581   */\n      sub\n        /* \"#utility.yul\":25561:25581   */\n      swap1\n      pop\n        /* \"#utility.yul\":25416:25587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25593:25775   */\n    tag_344:\n        /* \"#utility.yul\":25733:25767   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":25729:25730   */\n      0x00\n        /* \"#utility.yul\":25721:25727   */\n      dup3\n        /* \"#utility.yul\":25717:25731   */\n      add\n        /* \"#utility.yul\":25710:25768   */\n      mstore\n        /* \"#utility.yul\":25593:25775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25781:26147   */\n    tag_345:\n        /* \"#utility.yul\":25923:25926   */\n      0x00\n        /* \"#utility.yul\":25944:26011   */\n      tag_627\n        /* \"#utility.yul\":26008:26010   */\n      0x20\n        /* \"#utility.yul\":26003:26006   */\n      dup4\n        /* \"#utility.yul\":25944:26011   */\n      tag_319\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":25937:26011   */\n      swap2\n      pop\n        /* \"#utility.yul\":26020:26113   */\n      tag_628\n        /* \"#utility.yul\":26109:26112   */\n      dup3\n        /* \"#utility.yul\":26020:26113   */\n      tag_344\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":26138:26140   */\n      0x20\n        /* \"#utility.yul\":26133:26136   */\n      dup3\n        /* \"#utility.yul\":26129:26141   */\n      add\n        /* \"#utility.yul\":26122:26141   */\n      swap1\n      pop\n        /* \"#utility.yul\":25781:26147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26153:26572   */\n    tag_276:\n        /* \"#utility.yul\":26319:26323   */\n      0x00\n        /* \"#utility.yul\":26357:26359   */\n      0x20\n        /* \"#utility.yul\":26346:26355   */\n      dup3\n        /* \"#utility.yul\":26342:26360   */\n      add\n        /* \"#utility.yul\":26334:26360   */\n      swap1\n      pop\n        /* \"#utility.yul\":26406:26415   */\n      dup2\n        /* \"#utility.yul\":26400:26404   */\n      dup2\n        /* \"#utility.yul\":26396:26416   */\n      sub\n        /* \"#utility.yul\":26392:26393   */\n      0x00\n        /* \"#utility.yul\":26381:26390   */\n      dup4\n        /* \"#utility.yul\":26377:26394   */\n      add\n        /* \"#utility.yul\":26370:26417   */\n      mstore\n        /* \"#utility.yul\":26434:26565   */\n      tag_630\n        /* \"#utility.yul\":26560:26564   */\n      dup2\n        /* \"#utility.yul\":26434:26565   */\n      tag_345\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":26426:26565   */\n      swap1\n      pop\n        /* \"#utility.yul\":26153:26572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122025c53aa083b37f07498e625a53d9c567494e3c832e99b92fe365a9fdbe78900f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1131": {
									"entryPoint": null,
									"id": 1131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_275": {
									"entryPoint": 526,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_615": {
									"entryPoint": 874,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_216": {
									"entryPoint": 504,
									"id": 216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 767,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:14"
															},
															"nodeType": "YulIf",
															"src": "949:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:14",
														"type": ""
													}
												],
												"src": "845:507:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x3 SSTORE PUSH1 0xC8 PUSH1 0x4 SSTORE PUSH2 0x7D0 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x32 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x276 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x898 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E78 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E3C PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19D48 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3F480 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xA25A8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2191C0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 SWAP1 PUSH1 0xC PUSH3 0xCC SWAP3 SWAP2 SWAP1 PUSH3 0x372 JUMP JUMPDEST POP PUSH9 0x56BC75E2D63100000 PUSH1 0x17 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2590 CODESIZE SUB DUP1 PUSH3 0x2590 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x1BE PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x1F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1F0 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH3 0x1F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x48E JUMP JUMPDEST PUSH3 0x20A DUP3 DUP3 PUSH3 0x20E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x220 DUP3 DUP3 PUSH3 0x2FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2FB JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x2A0 PUSH3 0x36A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x10 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x3AB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3AA JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH3 0xFFFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x386 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x3BA SWAP2 SWAP1 PUSH3 0x3BE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3D9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x3BF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40F DUP3 PUSH3 0x3E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x421 DUP2 PUSH3 0x402 JUMP JUMPDEST DUP2 EQ PUSH3 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x441 DUP2 PUSH3 0x416 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x461 JUMPI PUSH3 0x460 PUSH3 0x3DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x471 DUP6 DUP3 DUP7 ADD PUSH3 0x430 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x484 DUP6 DUP3 DUP7 ADD PUSH3 0x430 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F2 DUP1 PUSH3 0x49E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x841ACC5D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xDD23FAF3 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xEB47536A EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0x442 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x841ACC5D EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x945099BC EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xAC6B182D EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xC6098256 EQ PUSH2 0x382 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x51D64E64 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x52C6159F EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x683B0EE5 EQ PUSH2 0x29A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x9C9985C EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA1AC657 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x13E6B93B EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH2 0x4D2 DUP3 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x950DCD4A7087BBF2CEE08268E1B26AC45FB310D3AE443D0FE53714B713DA45C1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D6 DUP3 PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x5E7 DUP2 PUSH2 0x5E2 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x5F1 DUP4 DUP4 PUSH2 0xE20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xD7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x675 DUP3 DUP3 PUSH2 0xF00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x68E DUP2 PUSH2 0x689 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6ED PUSH2 0x6C7 JUMP JUMPDEST ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x17 SLOAD GT DUP1 ISZERO PUSH2 0x78E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x839 JUMPI PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD204C45E CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST SWAP1 POP PUSH32 0x9E6E3ACB506BF1D2ADB1D8565252E575763EE07D1DEBFCC2C830682895B3137D CALLER DUP3 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH2 0x936 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x9C7 DUP2 PUSH2 0x9C2 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST DUP3 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x17 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 PUSH1 0x10 DUP2 LT PUSH2 0xA2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA65 DUP3 PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0xA71 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xA80 DUP4 DUP4 PUSH2 0xF00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x121E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0xABA JUMPI PUSH1 0x0 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100 PUSH2 0xACA SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST DUP4 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xB25 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0xB47 JUMPI PUSH2 0xB46 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB5B SWAP1 PUSH2 0x1E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA90 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xBA2 DUP2 PUSH2 0xB9D PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xC06 DUP2 PUSH2 0xC01 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC86 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xD06 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD8D DUP3 DUP3 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xE1C JUMPI PUSH2 0xDB2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0xDC0 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE2A DUP3 DUP3 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xEFC JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEA1 PUSH2 0xD7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF0A DUP3 DUP3 PUSH2 0x947 JUMP JUMPDEST ISZERO PUSH2 0xFDE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF83 PUSH2 0xD7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0x159D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x104A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x10E6 JUMPI PUSH2 0x10E5 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1126 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x11C9 SWAP1 PUSH2 0x2027 JUMP JUMPDEST SWAP1 POP PUSH2 0x1133 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP1 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x200 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128A DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP2 EQ PUSH2 0x1295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A7 DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12C2 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D1 DUP5 DUP3 DUP6 ADD PUSH2 0x1298 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EF DUP2 PUSH2 0x12DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1323 DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP2 EQ PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136A DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1386 JUMPI PUSH2 0x1385 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1394 DUP5 DUP3 DUP6 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B0 DUP2 PUSH2 0x139D JUMP JUMPDEST DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13CD DUP2 PUSH2 0x13A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP5 DUP3 DUP6 ADD PUSH2 0x13BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x139D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1455 DUP3 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1465 DUP2 PUSH2 0x144A JUMP JUMPDEST DUP2 EQ PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1482 DUP2 PUSH2 0x145C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149E PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x13BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14BE DUP6 DUP3 DUP7 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH2 0x14DE PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14ED DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14FE DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152D PUSH2 0x1528 PUSH2 0x1523 DUP5 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x142A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153F DUP3 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1551 DUP3 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1561 DUP2 PUSH2 0x1546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1558 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15D5 DUP3 PUSH2 0x158C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x159D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH2 0x1613 DUP3 DUP3 PUSH2 0x15CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x159D JUMP JUMPDEST JUMPDEST PUSH2 0x163C DUP3 PUSH2 0x158C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166B PUSH2 0x1666 DUP5 PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH2 0x1692 DUP5 DUP3 DUP6 PUSH2 0x1649 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16AF JUMPI PUSH2 0x16AE PUSH2 0x1582 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1658 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x1250 JUMP JUMPDEST JUMPDEST PUSH2 0x1708 DUP5 DUP3 DUP6 ADD PUSH2 0x169A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1736 DUP6 DUP3 DUP7 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1747 DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x175A DUP2 PUSH2 0x144A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A4 DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B6 DUP4 DUP4 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x17E2 DUP2 DUP5 PUSH2 0x1786 JUMP JUMPDEST SWAP3 POP PUSH2 0x17ED DUP3 PUSH2 0x1791 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x181E JUMPI DUP2 MLOAD PUSH2 0x1805 DUP8 DUP3 PUSH2 0x17AA JUMP JUMPDEST SWAP7 POP PUSH2 0x1810 DUP4 PUSH2 0x17C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17F1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x183C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF PUSH1 0x2F DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x18BA DUP3 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18DE DUP2 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191B PUSH1 0x10 DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x1926 DUP3 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x194A DUP2 PUSH2 0x190E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1966 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1973 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1980 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x12DA JUMP JUMPDEST DUP2 EQ PUSH2 0x199C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19AE DUP2 PUSH2 0x1988 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP5 DUP3 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19EF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2A DUP3 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x1A34 DUP2 DUP6 PUSH2 0x1842 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x1A4D DUP2 PUSH2 0x158C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A6D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A7F DUP2 DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A97 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC1 DUP5 DUP3 DUP6 ADD PUSH2 0x1A88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ADF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1AEC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x131A JUMP JUMPDEST PUSH2 0x1AF9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1B06 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B56 DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B61 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B71 JUMPI PUSH2 0x1B70 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1C02 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BDD PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1BED JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1BFB DUP6 PUSH2 0x1BAB JUMP JUMPDEST SWAP5 POP PUSH2 0x1BC2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C1B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1CD7 JUMP JUMPDEST DUP2 PUSH2 0x1C29 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CD7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C3F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1C49 JUMPI PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1CD7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1C71 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST POP PUSH2 0x1CD7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1CAD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH2 0x1CD7 JUMP JUMPDEST PUSH2 0x1CBA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1CD1 JUMPI PUSH2 0x1CD0 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE9 DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF4 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP PUSH2 0x1D21 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBD DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEE DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF9 DUP4 PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E2E JUMPI PUSH2 0x1E2D PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E44 DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742062652076616C69642070657263656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E98 PUSH1 0x15 DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA3 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC7 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EE3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1EF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F38 PUSH1 0x17 DUP4 PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F43 DUP3 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F59 DUP3 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x1F63 DUP2 DUP6 PUSH2 0x1EF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F73 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB5 PUSH1 0x11 DUP4 PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC0 DUP3 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD6 DUP3 PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE2 DUP3 DUP6 PUSH2 0x1F4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FED DUP3 PUSH2 0x1FA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF9 DUP3 DUP5 PUSH2 0x1F4E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201F DUP2 DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2032 DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2086 PUSH1 0x20 DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x2091 DUP3 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B5 DUP2 PUSH2 0x2079 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC5 GASPRICE LOG0 DUP4 0xB3 PUSH32 0x7498E625A53D9C567494E3C832E99B92FE365A9FDBE78900F64736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "292:4447:10:-:0;;;599:2;563:38;;632:3;607:28;;666:4;641:29;;676:206;;;;;;;;717:1;676:206;;;;;;728:2;676:206;;;;;;740:2;676:206;;;;;;752:3;676:206;;;;;;765:3;676:206;;;;;;778:4;676:206;;;;;;792:4;676:206;;;;;;806:5;676:206;;;;;;821:6;676:206;;;;;;837:6;676:206;;;;;;853:6;676:206;;;;;;869:7;676:206;;;;;;;;;;;;;:::i;:::-;;967:6;942:31;;1317:392;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;927:5:9;917:7;;:15;;;;;;;;;;;;;;;;;;1552:5:10;1536:4;;:22;;;;;;;;;;;;;;;;;;1575:5;1568:4;;:12;;;;;;;;;;;;;;;;;;1615:42;1962:4:0;1626:18:10;;1646:10;1615;;;:42;;:::i;:::-;1667:35;533:24;1691:10;1667;;;:35;;:::i;:::-;1317:392;;292:4447;;6049:110:0;6127:25;6138:4;6144:7;6127:10;;;:25;;:::i;:::-;6049:110;;:::o;6537:224::-;6611:22;6619:4;6625:7;6611;;;:22;;:::i;:::-;6606:149;;6681:4;6649:6;:12;6656:4;6649:12;;;;;;;;;;;:20;;:29;6670:7;6649:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6731:12;:10;;;:12;;:::i;:::-;6704:40;;6722:7;6704:40;;6716:4;6704:40;;;;;;;;;;6606:149;6537:224;;:::o;2799:137::-;2877:4;2900:6;:12;2907:4;2900:12;;;;;;;;;;;:20;;:29;2921:7;2900:29;;;;;;;;;;;;;;;;;;;;;;;;;2893:36;;2799:137;;;;:::o;587:96:2:-;640:7;666:10;659:17;;587:96;:::o;292:4447:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;292:4447:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 2580,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1048": {
									"entryPoint": 2921,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SQFi_1043": {
									"entryPoint": 1697,
									"id": 1043,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_124": {
									"entryPoint": 3459,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_275": {
									"entryPoint": 3616,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_615": {
									"entryPoint": 3451,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_305": {
									"entryPoint": 3840,
									"id": 305,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@amount1_1079": {
									"entryPoint": 3339,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bytes32ToAmount16_1223": {
									"entryPoint": 2693,
									"id": 1223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createSQFI_1296": {
									"entryPoint": 1763,
									"id": 1296,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@editSQFI_1150": {
									"entryPoint": 1657,
									"id": 1150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@editSupportedFee_1242": {
									"entryPoint": 2482,
									"id": 1242,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@editUncraftBurnPercent_1170": {
									"entryPoint": 2957,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fee1_1076": {
									"entryPoint": 2614,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_139": {
									"entryPoint": 1453,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_159": {
									"entryPoint": 1485,
									"id": 159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 2375,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxSQFI_1057": {
									"entryPoint": 1447,
									"id": 1057,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minSQFI_1054": {
									"entryPoint": 1757,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_964": {
									"entryPoint": 1735,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_202": {
									"entryPoint": 1526,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_179": {
									"entryPoint": 2652,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@runePower_1074": {
									"entryPoint": 2587,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_62": {
									"entryPoint": 1120,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_648": {
									"entryPoint": 3345,
									"id": 648,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2089": {
									"entryPoint": 4066,
									"id": 2089,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uncraftBurnPercent_1051": {
									"entryPoint": 1242,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uncraft_1312": {
									"entryPoint": 1248,
									"id": 1312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1350": {
									"entryPoint": 3057,
									"id": 1350,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack": {
									"entryPoint": 5464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$16_memory_ptr__to_t_array$_t_uint256_$16_memory_ptr__fromStack_reversed": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISQFItem_$840__to_t_address__fromStack_reversed": {
									"entryPoint": 5479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$16_memory_ptr": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$16_memory_ptr": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$16_memory_ptr": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint8": {
									"entryPoint": 7602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISQFItem_$840_to_t_address": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint8": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 8063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26575:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:14",
														"type": ""
													}
												],
												"src": "1518:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:14",
														"type": ""
													}
												],
												"src": "1601:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1795:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1807:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1818:4:14",
														"type": ""
													}
												],
												"src": "1725:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2053:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2044:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2026:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2016:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2016:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:43:14"
															},
															"nodeType": "YulIf",
															"src": "2006:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1989:5:14",
														"type": ""
													}
												],
												"src": "1953:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2143:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2165:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2152:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2208:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2181:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2111:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2119:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2127:5:14",
														"type": ""
													}
												],
												"src": "2081:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2292:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:32:14"
															},
															"nodeType": "YulIf",
															"src": "2302:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2431:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2475:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2262:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2273:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2285:6:14",
														"type": ""
													}
												],
												"src": "2226:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2627:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:14",
														"type": ""
													}
												],
												"src": "2561:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2744:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2753:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2746:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2746:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2710:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2735:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2717:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2717:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2707:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:43:14"
															},
															"nodeType": "YulIf",
															"src": "2697:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2680:5:14",
														"type": ""
													}
												],
												"src": "2644:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2872:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2802:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2810:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:14",
														"type": ""
													}
												],
												"src": "2772:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2983:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3029:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3031:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3031:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3004:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3000:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:32:14"
															},
															"nodeType": "YulIf",
															"src": "2993:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3122:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3137:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3141:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3166:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3201:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3212:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3197:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3197:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3221:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3176:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3176:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3166:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2953:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2964:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2976:6:14",
														"type": ""
													}
												],
												"src": "2917:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3317:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3334:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3357:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3339:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3339:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3327:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3305:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3312:3:14",
														"type": ""
													}
												],
												"src": "3252:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3474:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3484:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3496:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3507:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3484:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3564:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3588:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3573:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3520:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3520:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3446:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3469:4:14",
														"type": ""
													}
												],
												"src": "3376:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3649:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3659:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3674:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3681:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3670:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3659:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3631:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3641:7:14",
														"type": ""
													}
												],
												"src": "3604:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3781:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3791:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3820:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3802:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3791:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3763:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3773:7:14",
														"type": ""
													}
												],
												"src": "3736:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3881:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3938:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3947:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3940:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3940:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3940:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3904:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3929:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3911:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3901:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:43:14"
															},
															"nodeType": "YulIf",
															"src": "3891:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3874:5:14",
														"type": ""
													}
												],
												"src": "3838:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4018:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4028:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4037:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4028:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4093:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4066:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4066:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3996:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4004:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4012:5:14",
														"type": ""
													}
												],
												"src": "3966:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4194:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4240:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4242:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4242:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4215:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4224:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4211:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4236:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4207:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:32:14"
															},
															"nodeType": "YulIf",
															"src": "4204:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "4333:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4348:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4352:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4377:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4412:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4423:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4408:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4408:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4432:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4387:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4387:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4377:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4460:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4475:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4479:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4505:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4540:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4551:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4536:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4536:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4560:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4515:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4515:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4505:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4156:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4167:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4179:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4187:6:14",
														"type": ""
													}
												],
												"src": "4111:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4674:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4720:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4722:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4722:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4722:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4695:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:32:14"
															},
															"nodeType": "YulIf",
															"src": "4684:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "4813:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4828:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4832:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4857:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4892:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4903:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4888:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4888:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4912:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4867:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4867:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4857:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4940:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4955:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4959:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4985:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5020:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5031:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5016:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5016:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5040:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4995:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4995:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4985:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4636:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4647:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4659:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4667:6:14",
														"type": ""
													}
												],
												"src": "4591:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5103:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5113:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5120:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5113:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5089:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5099:3:14",
														"type": ""
													}
												],
												"src": "5071:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5197:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5207:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5265:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5247:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5247:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5238:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5238:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5220:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5207:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5177:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5187:9:14",
														"type": ""
													}
												],
												"src": "5137:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5345:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5355:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5399:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5368:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5355:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5325:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5335:9:14",
														"type": ""
													}
												],
												"src": "5285:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5493:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5503:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5547:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5516:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISQFItem_$840_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5473:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5483:9:14",
														"type": ""
													}
												],
												"src": "5417:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5646:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5663:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5715:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISQFItem_$840_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5668:46:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5668:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:66:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5656:66:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5634:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5641:3:14",
														"type": ""
													}
												],
												"src": "5565:163:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5848:140:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5858:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5870:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5881:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5866:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5954:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5978:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5963:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5894:59:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5894:87:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5894:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISQFItem_$840__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5820:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5832:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5843:4:14",
														"type": ""
													}
												],
												"src": "5734:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6083:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6100:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6103:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6093:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6093:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5994:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6206:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6223:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6226:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6216:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6216:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6117:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6288:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6298:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6316:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6323:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6312:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6312:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6332:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6328:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6328:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6308:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6308:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6271:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6281:6:14",
														"type": ""
													}
												],
												"src": "6240:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6376:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6393:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6396:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6386:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6386:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6490:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6493:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6514:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6517:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6507:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6348:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6577:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6587:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6609:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6639:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6617:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6617:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6605:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6605:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6591:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6756:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6758:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6758:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6758:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6699:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6711:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6696:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6696:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6735:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6747:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6732:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6693:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:62:14"
															},
															"nodeType": "YulIf",
															"src": "6690:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6794:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6798:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6787:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6787:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6787:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6563:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6571:4:14",
														"type": ""
													}
												],
												"src": "6534:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6862:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6872:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6882:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6931:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6939:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6911:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6911:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6846:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6855:6:14",
														"type": ""
													}
												],
												"src": "6821:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7023:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7128:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7130:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7130:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7130:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7100:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7097:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:30:14"
															},
															"nodeType": "YulIf",
															"src": "7094:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7160:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7190:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7168:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7160:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7234:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7246:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7252:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7242:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7234:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7007:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7018:4:14",
														"type": ""
													}
												],
												"src": "6956:308:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7321:103:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7344:3:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7349:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7331:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7331:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7402:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7407:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7398:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7416:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7391:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7303:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7308:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7313:6:14",
														"type": ""
													}
												],
												"src": "7270:154:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7514:328:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7524:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7591:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7549:41:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7549:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7533:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7533:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7524:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7615:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7622:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7608:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7608:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7608:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7638:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7653:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7660:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7642:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7703:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7705:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7705:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7705:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7684:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7689:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7680:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7680:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7698:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7677:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7677:25:14"
															},
															"nodeType": "YulIf",
															"src": "7674:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7819:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7824:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7829:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7795:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7795:41:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7487:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7492:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7500:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7508:5:14",
														"type": ""
													}
												],
												"src": "7430:412:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7924:278:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7973:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7975:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7975:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7975:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7952:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7960:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7948:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7948:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7967:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7944:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7937:35:14"
															},
															"nodeType": "YulIf",
															"src": "7934:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8065:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8092:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8079:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8069:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8108:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8169:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8177:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8165:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8165:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8184:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8192:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8117:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8117:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8108:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7902:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7910:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7918:5:14",
														"type": ""
													}
												],
												"src": "7862:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8284:433:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8330:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8332:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8332:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8332:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8305:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8314:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8301:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8326:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:32:14"
															},
															"nodeType": "YulIf",
															"src": "8294:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "8423:287:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8438:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8469:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8480:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8465:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8465:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8452:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8452:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8442:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8530:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8532:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8532:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8532:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8502:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8510:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8499:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8499:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "8496:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8627:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8672:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8683:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8668:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8668:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8692:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8637:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8637:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8627:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8254:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8265:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8277:6:14",
														"type": ""
													}
												],
												"src": "8208:509:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8806:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8852:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8854:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8854:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8854:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8827:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8836:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8823:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8823:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8848:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8819:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8819:32:14"
															},
															"nodeType": "YulIf",
															"src": "8816:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "8945:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8960:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8974:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8964:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8989:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9024:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9035:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9020:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9020:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9044:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8999:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8989:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9072:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9087:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9101:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9091:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9117:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9152:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9163:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9148:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9148:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9172:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9127:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9127:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9117:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8768:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8779:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8791:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8799:6:14",
														"type": ""
													}
												],
												"src": "8723:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9268:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9285:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9308:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9290:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9290:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9278:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9278:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9278:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9256:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9263:3:14",
														"type": ""
													}
												],
												"src": "9203:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9425:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9435:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9447:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9458:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9443:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9435:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9515:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9528:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9539:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9524:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9524:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9471:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9471:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9471:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9397:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9409:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9420:4:14",
														"type": ""
													}
												],
												"src": "9327:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9628:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9639:14:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9649:4:14",
																"type": "",
																"value": "0x10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9639:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$16_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9611:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9621:6:14",
														"type": ""
													}
												],
												"src": "9555:105:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9776:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9786:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9801:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9786:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9748:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9753:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9764:11:14",
														"type": ""
													}
												],
												"src": "9666:144:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9887:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9897:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9905:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9897:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$16_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9874:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9882:4:14",
														"type": ""
													}
												],
												"src": "9816:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9976:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9993:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10016:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9998:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9998:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9986:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9986:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9986:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9964:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9971:3:14",
														"type": ""
													}
												],
												"src": "9921:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10115:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10159:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10167:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10125:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10125:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10180:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10198:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10203:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10194:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "10180:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10088:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10096:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "10104:10:14",
														"type": ""
													}
												],
												"src": "10035:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10294:38:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10304:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10316:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10321:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10312:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "10304:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$16_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10281:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "10289:4:14",
														"type": ""
													}
												],
												"src": "10220:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10486:586:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10496:67:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10557:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$16_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10510:46:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:53:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10500:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10572:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10652:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10657:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10579:72:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10579:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10673:70:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10737:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$16_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10688:48:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:55:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10677:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10752:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10766:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10756:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10842:223:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10856:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10883:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10877:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10877:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10860:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10903:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10954:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10969:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10910:43:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10910:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10903:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10986:69:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11048:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$16_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10996:51:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10996:59:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10986:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10804:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10807:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10801:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10815:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10817:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10826:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10829:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10822:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10822:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10817:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10786:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10788:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10797:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10792:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10782:283:14"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10473:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10480:3:14",
														"type": ""
													}
												],
												"src": "10372:700:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11224:173:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11234:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11246:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11257:3:14",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11234:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11363:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11376:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11387:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11372:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11372:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11271:91:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:119:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:119:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$16_memory_ptr__to_t_array$_t_uint256_$16_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11196:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11208:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11219:4:14",
														"type": ""
													}
												],
												"src": "11078:319:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11499:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11516:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11521:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11509:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11509:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11537:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11556:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11561:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11552:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11552:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11537:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11471:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11476:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11487:11:14",
														"type": ""
													}
												],
												"src": "11403:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11684:128:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11706:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11714:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11702:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11702:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11718:34:14",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11695:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11695:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11695:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11782:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:15:14"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11787:17:14",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11763:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11676:6:14",
														"type": ""
													}
												],
												"src": "11578:234:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11964:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11974:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12040:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12045:2:14",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11981:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11981:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11974:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12146:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "12057:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12057:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12057:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12159:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12170:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12175:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12166:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12166:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12159:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11952:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11960:3:14",
														"type": ""
													}
												],
												"src": "11818:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12361:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12371:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12383:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12394:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12379:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12379:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12371:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12418:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12429:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12437:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12443:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12433:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12433:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12407:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12407:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12463:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12597:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12471:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12471:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12463:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12341:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12356:4:14",
														"type": ""
													}
												],
												"src": "12190:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12721:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12743:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12751:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12739:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12739:14:14"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12755:18:14",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12732:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12732:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12732:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12713:6:14",
														"type": ""
													}
												],
												"src": "12615:166:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12933:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12943:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13009:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13014:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12950:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12950:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12943:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13115:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "13026:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13026:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13026:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13128:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13139:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13144:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13135:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13135:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13128:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12921:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12929:3:14",
														"type": ""
													}
												],
												"src": "12787:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13330:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13340:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13352:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13363:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13348:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13340:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13387:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13398:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13383:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13383:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13406:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13412:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13402:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13402:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13376:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13376:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13376:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13432:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13566:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13440:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13440:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13432:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13310:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13325:4:14",
														"type": ""
													}
												],
												"src": "13159:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13738:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13748:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13760:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13771:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13756:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13756:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13748:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13828:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13841:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13852:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13837:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13837:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13784:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13784:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13784:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13909:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13922:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13933:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13918:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13918:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13865:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13865:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13865:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13991:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14004:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14015:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14000:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14000:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13947:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13947:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13947:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13694:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13706:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13714:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13722:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13733:4:14",
														"type": ""
													}
												],
												"src": "13584:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14072:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14126:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14135:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14138:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14128:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14128:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14128:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14095:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14117:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14102:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14102:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14092:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14092:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14085:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14085:40:14"
															},
															"nodeType": "YulIf",
															"src": "14082:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14065:5:14",
														"type": ""
													}
												],
												"src": "14032:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14214:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14224:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14239:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14233:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14233:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14224:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14279:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14255:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14255:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14255:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14192:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14200:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14208:5:14",
														"type": ""
													}
												],
												"src": "14154:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14371:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14417:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14419:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14419:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14419:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14392:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14401:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14388:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14388:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14413:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14384:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14384:32:14"
															},
															"nodeType": "YulIf",
															"src": "14381:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "14510:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14525:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14539:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14529:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14554:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14597:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14608:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14593:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14593:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14617:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14564:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14564:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14554:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14341:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14352:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14364:6:14",
														"type": ""
													}
												],
												"src": "14297:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14707:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14718:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14734:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14728:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14728:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14718:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14690:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14700:6:14",
														"type": ""
													}
												],
												"src": "14648:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14802:258:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14812:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14821:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14816:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14881:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14906:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14911:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14902:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14902:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14925:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14930:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14921:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14921:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14915:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14915:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14895:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14895:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14895:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14842:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14845:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14839:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14839:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14853:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14855:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14864:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14867:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14860:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14860:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14855:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14835:3:14",
																"statements": []
															},
															"src": "14831:113:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14978:76:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15028:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15033:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15024:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15024:16:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15042:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15017:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15017:27:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15017:27:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14959:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14962:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14956:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14956:13:14"
															},
															"nodeType": "YulIf",
															"src": "14953:101:14"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14784:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14789:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14794:6:14",
														"type": ""
													}
												],
												"src": "14753:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15158:272:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15168:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15215:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15182:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15182:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15172:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15230:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15296:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15301:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15237:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15230:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15343:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15350:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15339:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15339:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15357:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15362:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15317:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15317:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15317:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15378:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15389:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15416:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15394:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15394:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15385:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15385:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15378:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15139:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15146:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15154:3:14",
														"type": ""
													}
												],
												"src": "15066:364:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15582:277:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15592:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15604:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15615:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15600:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15600:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15592:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15672:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15685:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15696:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15681:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15681:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15628:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15628:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15628:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15720:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15731:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15716:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15716:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15740:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15746:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15736:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15736:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15709:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15709:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15709:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15766:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15838:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15847:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15774:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15774:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15766:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15546:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15558:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15566:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15577:4:14",
														"type": ""
													}
												],
												"src": "15436:423:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15928:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15938:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15953:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15947:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15947:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15938:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15996:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15969:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15969:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15969:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15906:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15914:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15922:5:14",
														"type": ""
													}
												],
												"src": "15865:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16091:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16137:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16139:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16139:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16139:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16112:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16121:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16108:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16108:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16133:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16104:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16104:32:14"
															},
															"nodeType": "YulIf",
															"src": "16101:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "16230:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16245:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16259:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16249:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16274:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16320:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16331:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16316:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16316:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16340:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16284:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16284:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16274:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16061:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16072:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16084:6:14",
														"type": ""
													}
												],
												"src": "16014:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16553:371:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16563:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16575:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16586:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16571:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16571:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16563:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16644:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16657:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16668:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16653:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16653:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16600:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16600:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16725:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16738:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16749:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16734:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16734:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16681:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16681:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16681:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16807:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16820:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16831:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16816:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16816:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16763:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16763:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16763:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16889:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16902:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16913:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16898:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16898:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16845:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16845:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16845:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16501:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16513:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16521:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16529:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16537:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16548:4:14",
														"type": ""
													}
												],
												"src": "16371:553:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16973:43:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16983:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16998:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17005:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16994:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16994:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16983:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16955:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16965:7:14",
														"type": ""
													}
												],
												"src": "16930:86:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17050:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17067:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17070:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17060:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17060:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17060:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17164:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17167:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17157:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17157:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17157:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17188:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17191:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17181:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17181:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17181:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "17022:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17240:138:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17250:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17271:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "17255:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17255:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17250:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17282:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17303:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "17287:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17287:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17282:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17327:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17329:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17329:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17329:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17324:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17317:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17317:9:14"
															},
															"nodeType": "YulIf",
															"src": "17314:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17358:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17367:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17370:1:14"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "17363:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17363:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17358:1:14"
																}
															]
														}
													]
												},
												"name": "mod_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17229:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17232:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17238:1:14",
														"type": ""
													}
												],
												"src": "17208:170:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17412:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17429:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17432:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17422:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17422:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17422:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17526:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17529:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17519:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17519:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17519:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17550:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17553:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17543:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17543:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17543:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "17384:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17621:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17631:34:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17656:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17659:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17652:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17652:13:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17631:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17602:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17612:8:14",
														"type": ""
													}
												],
												"src": "17570:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17751:775:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17761:15:14",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "17770:6:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17761:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17785:14:14",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "17794:5:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17785:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17843:677:14",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17931:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "17933:16:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17933:18:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17933:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17909:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "17919:3:14"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "17924:4:14"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "17915:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17915:14:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "17906:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17906:24:14"
																		},
																		"nodeType": "YulIf",
																		"src": "17903:50:14"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17998:419:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "18378:25:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "18391:5:14"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "18398:4:14"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "18387:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18387:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "18378:5:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17973:8:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17983:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "17969:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17969:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "17966:451:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18430:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "18442:4:14"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "18448:4:14"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "18438:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18438:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "18430:4:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18466:44:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "18501:8:14"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "18478:22:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18478:32:14"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "18466:8:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17819:8:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17829:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17816:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17816:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17832:2:14",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17812:3:14",
																"statements": []
															},
															"src": "17808:712:14"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "17706:6:14",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "17714:5:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17721:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "17731:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17739:5:14",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17746:4:14",
														"type": ""
													}
												],
												"src": "17678:848:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18592:1013:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18787:20:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18789:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18798:1:14",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18789:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18800:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18777:8:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18770:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18770:16:14"
															},
															"nodeType": "YulIf",
															"src": "18767:40:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18832:20:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18834:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18843:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "18834:5:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "18845:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18826:4:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18819:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18819:12:14"
															},
															"nodeType": "YulIf",
															"src": "18816:36:14"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18962:20:14",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "18964:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18973:1:14",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "18964:5:14"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "18975:5:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18955:27:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18960:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19006:176:14",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19041:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "19043:16:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19043:18:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19043:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "19026:8:14"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19036:3:14",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "19023:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19023:17:14"
																				},
																				"nodeType": "YulIf",
																				"src": "19020:43:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "19076:25:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19089:1:14",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "19092:8:14"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "19085:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19085:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "19076:5:14"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19132:22:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "19134:16:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19134:18:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19134:18:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "19120:5:14"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "19127:3:14"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "19117:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19117:14:14"
																				},
																				"nodeType": "YulIf",
																				"src": "19114:40:14"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "19167:5:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18991:191:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18996:1:14",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "18912:4:14"
															},
															"nodeType": "YulSwitch",
															"src": "18905:277:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19314:123:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19328:28:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "19341:4:14"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "19347:8:14"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "19337:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19337:19:14"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "19328:5:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "19387:22:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "19389:16:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19389:18:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "19389:18:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "19375:5:14"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "19382:3:14"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "19372:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19372:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "19369:40:14"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "19422:5:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "19217:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19223:2:14",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19214:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19214:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "19231:8:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19241:2:14",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19228:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19228:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19210:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19210:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "19266:4:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19272:3:14",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19263:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19263:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "19281:8:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19291:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "19278:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19278:16:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19259:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19259:36:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19194:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19194:111:14"
															},
															"nodeType": "YulIf",
															"src": "19191:246:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19447:57:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19481:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19484:4:14"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19490:8:14"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "19500:3:14"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "19462:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19462:42:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19447:5:14"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "19454:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19543:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19545:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19545:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19545:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "19520:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "19531:3:14"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "19536:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "19527:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19527:14:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19517:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19517:25:14"
															},
															"nodeType": "YulIf",
															"src": "19514:51:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19574:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "19587:5:14"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19594:4:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19583:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19583:16:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19574:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "18562:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "18568:8:14",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "18578:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "18586:5:14",
														"type": ""
													}
												],
												"src": "18532:1073:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19675:217:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19685:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19711:4:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19693:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19693:23:14"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "19685:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19725:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19753:8:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "19737:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19737:25:14"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "19725:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19772:113:14",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "19802:4:14"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "19808:8:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19818:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "19781:20:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19781:104:14"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "19772:5:14"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "19650:4:14",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "19656:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "19669:5:14",
														"type": ""
													}
												],
												"src": "19611:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19926:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19943:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19946:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19936:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19936:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19936:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20040:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20043:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20033:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20033:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20033:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20064:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20067:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20057:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20057:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20057:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "19898:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20132:300:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20142:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20165:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20147:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20147:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20142:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20176:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20199:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20181:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20181:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20176:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20374:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20376:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20376:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20376:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20286:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20279:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20279:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20272:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20272:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20294:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20301:66:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20369:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20297:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20297:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20291:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20291:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20268:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20268:105:14"
															},
															"nodeType": "YulIf",
															"src": "20265:131:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20406:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20421:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20424:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20417:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20417:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20406:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20115:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20118:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20124:7:14",
														"type": ""
													}
												],
												"src": "20084:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20478:139:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20488:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20509:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20493:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20493:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20488:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20520:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20541:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20525:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20525:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20520:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20565:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20567:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20567:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20567:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20562:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20555:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20555:9:14"
															},
															"nodeType": "YulIf",
															"src": "20552:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20597:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20606:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20609:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20602:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20602:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20597:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20467:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20470:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20476:1:14",
														"type": ""
													}
												],
												"src": "20438:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20667:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20677:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20700:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20682:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20682:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20677:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20711:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20734:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20716:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20716:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20711:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20874:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20876:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20876:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20876:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20795:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20802:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20870:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20798:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20798:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20792:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20792:81:14"
															},
															"nodeType": "YulIf",
															"src": "20789:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20906:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20917:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20920:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20913:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20913:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20906:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20654:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20657:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20663:3:14",
														"type": ""
													}
												],
												"src": "20623:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20975:126:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20985:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21010:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20994:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20994:22:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20985:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21044:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21046:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21046:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21046:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21031:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21038:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21028:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21028:15:14"
															},
															"nodeType": "YulIf",
															"src": "21025:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21075:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21086:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21093:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21082:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21082:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21075:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20961:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20971:3:14",
														"type": ""
													}
												],
												"src": "20934:167:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21213:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21235:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21243:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21231:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21231:14:14"
																	},
																	{
																		"hexValue": "4d7573742062652076616c69642070657263656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21247:23:14",
																		"type": "",
																		"value": "Must be valid percent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21224:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21224:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21224:47:14"
														}
													]
												},
												"name": "store_literal_in_memory_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21205:6:14",
														"type": ""
													}
												],
												"src": "21107:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21430:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21440:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21506:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21511:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21447:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21447:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21440:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21612:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5",
																	"nodeType": "YulIdentifier",
																	"src": "21523:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21523:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21523:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21625:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21636:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21641:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21632:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21632:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21625:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21418:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21426:3:14",
														"type": ""
													}
												],
												"src": "21284:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21827:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21837:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21849:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21860:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21845:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21845:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21837:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21884:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21895:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21880:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21880:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21903:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21909:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21899:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21899:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21873:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21873:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21873:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21929:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22063:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21937:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21937:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21929:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21807:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21822:4:14",
														"type": ""
													}
												],
												"src": "21656:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22207:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22217:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22229:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22240:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22225:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22225:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22217:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22297:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22310:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22321:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22306:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22306:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22253:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22253:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22253:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22378:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22391:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22402:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22387:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22387:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22334:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22334:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22334:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22171:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22183:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22191:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22202:4:14",
														"type": ""
													}
												],
												"src": "22081:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22533:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22543:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22558:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22543:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22505:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22510:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22521:11:14",
														"type": ""
													}
												],
												"src": "22419:148:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22679:67:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22701:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22709:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22697:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22713:25:14",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22690:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22690:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22690:49:14"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22671:6:14",
														"type": ""
													}
												],
												"src": "22573:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22916:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22926:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23010:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23015:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22933:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22933:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22926:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23116:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "23027:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23027:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23027:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23129:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23140:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23145:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23136:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23136:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23129:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22904:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22912:3:14",
														"type": ""
													}
												],
												"src": "22752:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23270:267:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23280:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23327:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23294:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23294:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23284:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23342:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23426:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23431:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23349:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23349:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23342:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23473:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23480:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23469:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23469:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23487:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23492:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "23447:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23447:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23447:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23508:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23519:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23524:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23515:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23515:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23508:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23251:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23258:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23266:3:14",
														"type": ""
													}
												],
												"src": "23160:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23649:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23671:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23679:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23667:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23667:14:14"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23683:19:14",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23660:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23660:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23660:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23641:6:14",
														"type": ""
													}
												],
												"src": "23543:167:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23880:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23890:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23974:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23979:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23897:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23897:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23890:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24080:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "23991:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23991:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23991:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24093:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24104:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24109:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24100:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24100:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24093:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23868:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23876:3:14",
														"type": ""
													}
												],
												"src": "23716:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24510:581:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24521:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24672:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24528:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24528:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24521:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24686:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24775:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24784:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24693:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24693:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24686:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24798:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24949:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24805:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24805:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24798:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24963:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25052:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25061:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24970:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24970:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24963:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25075:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25082:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25075:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24481:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24487:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24495:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24506:3:14",
														"type": ""
													}
												],
												"src": "24124:967:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25215:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25225:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25237:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25248:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25233:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25233:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25225:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25272:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25283:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25268:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25268:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25291:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25297:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25287:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25287:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25261:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25261:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25261:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25317:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25389:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25398:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25325:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25325:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25317:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25187:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25199:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25210:4:14",
														"type": ""
													}
												],
												"src": "25097:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25459:128:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25469:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25496:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25478:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25478:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25469:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25530:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25532:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25532:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25532:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25517:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25524:4:14",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "25514:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25514:15:14"
															},
															"nodeType": "YulIf",
															"src": "25511:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25561:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25572:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25579:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "25568:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25568:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "25561:3:14"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25445:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "25455:3:14",
														"type": ""
													}
												],
												"src": "25416:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25699:76:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25721:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25729:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25717:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25717:14:14"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25733:34:14",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25710:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25710:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25710:58:14"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25691:6:14",
														"type": ""
													}
												],
												"src": "25593:182:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25927:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25937:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26003:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26008:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25944:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25944:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25937:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26109:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "26020:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26020:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26020:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26122:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26133:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26138:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26129:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26129:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26122:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25915:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25923:3:14",
														"type": ""
													}
												],
												"src": "25781:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26324:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26334:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26346:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26357:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26342:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26342:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26334:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26381:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26392:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26377:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26377:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26400:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26406:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26396:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26396:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26370:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26370:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26370:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26426:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26560:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26434:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26434:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26426:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26304:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26319:4:14",
														"type": ""
													}
												],
												"src": "26153:419:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISQFItem_$840_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISQFItem_$840_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISQFItem_$840__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISQFItem_$840_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$16_memory_ptr(value) -> length {\n\n        length := 0x10\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$16_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$16_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[16] -> uint256[16]\n    function abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$16_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$16_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$16_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$16_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$16_memory_ptr__to_t_array$_t_uint256_$16_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 512)\n\n        abi_encode_t_array$_t_uint256_$16_memory_ptr_to_t_array$_t_uint256_$16_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_div_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be valid percent\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c8063841acc5d116100c3578063d547741f1161007c578063d547741f146103a0578063dd23faf3146103bc578063e63ab1e9146103ec578063eb47536a1461040a578063f3fef3a314610426578063f400fde4146104425761014d565b8063841acc5d146102b857806391d14854146102e8578063945099bc14610318578063a217fddf14610334578063ac6b182d14610352578063c6098256146103825761014d565b80632f2ff15d116101155780632f2ff15d1461020a57806336568abe1461022657806351d64e641461024257806352c6159f1461025e5780635c975abb1461027c578063683b0ee51461029a5761014d565b806301ffc9a71461015257806309c9985c146101825780630a1ac657146101a057806313e6b93b146101bc578063248a9ca3146101da575b600080fd5b61016c600480360381019061016791906112ad565b610460565b60405161017991906112f5565b60405180910390f35b61018a6104da565b6040516101979190611329565b60405180910390f35b6101ba60048036038101906101b59190611370565b6104e0565b005b6101c46105a7565b6040516101d19190611329565b60405180910390f35b6101f460048036038101906101ef91906113d3565b6105ad565b604051610201919061140f565b60405180910390f35b610224600480360381019061021f9190611488565b6105cd565b005b610240600480360381019061023b9190611488565b6105f6565b005b61025c600480360381019061025791906114c8565b610679565b005b6102666106a1565b6040516102739190611567565b60405180910390f35b6102846106c7565b60405161029191906112f5565b60405180910390f35b6102a26106dd565b6040516102af9190611329565b60405180910390f35b6102d260048036038101906102cd91906116c8565b6106e3565b6040516102df9190611329565b60405180910390f35b61030260048036038101906102fd9190611488565b610947565b60405161030f91906112f5565b60405180910390f35b610332600480360381019061032d9190611711565b6109b2565b005b61033c610a14565b604051610349919061140f565b60405180910390f35b61036c60048036038101906103679190611370565b610a1b565b6040516103799190611329565b60405180910390f35b61038a610a36565b6040516103979190611760565b60405180910390f35b6103ba60048036038101906103b59190611488565b610a5c565b005b6103d660048036038101906103d191906113d3565b610a85565b6040516103e39190611826565b60405180910390f35b6103f4610b69565b604051610401919061140f565b60405180910390f35b610424600480360381019061041f9190611370565b610b8d565b005b610440600480360381019061043b9190611711565b610bf1565b005b61044a610d0b565b6040516104579190611329565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d357506104d282610d11565b5b9050919050565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040161053b9190611329565b600060405180830381600087803b15801561055557600080fd5b505af1158015610569573d6000803e3d6000fd5b505050507f950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c18160405161059c9190611329565b60405180910390a150565b60055481565b600060016000838152602001908152602001600020600101549050919050565b6105d6826105ad565b6105e7816105e2610d7b565b610d83565b6105f18383610e20565b505050565b6105fe610d7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461066b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610662906118c5565b60405180910390fd5b6106758282610f00565b5050565b6000801b61068e81610689610d7b565b610d83565b8260048190555081600581905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900460ff16905090565b60045481565b60006106ed6106c7565b1561072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072490611931565b60405180910390fd5b600060175411801561078e5750600073ffffffffffffffffffffffffffffffffffffffff16601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561083957601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306017546040518463ffffffff1660e01b81526004016107f493929190611951565b6020604051808303816000875af1158015610813573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083791906119b4565b505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d204c45e33856040518363ffffffff1660e01b8152600401610898929190611a58565b6020604051808303816000875af11580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108db9190611a9d565b90507f9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d3382601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166017546040516109369493929190611aca565b60405180910390a180915050919050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b6109c7816109c2610d7b565b610d83565b82601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601781905550505050565b6000801b81565b60068160108110610a2b57600080fd5b016000915090505481565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a65826105ad565b610a7681610a71610d7b565b610d83565b610a808383610f00565b505050565b610a8d61121e565b60005b60208160ff161015610b63576000600282610aab9190611b4b565b60ff1614610aba576000610abd565b60015b610100610aca9190611cde565b838260ff1660208110610ae057610adf611d29565b5b1a60f81b60f81c60ff16610af49190611d58565b82600283610b029190611db2565b60ff1660108110610b1657610b15611d29565b5b6020020151610b259190611de3565b82600283610b339190611db2565b60ff1660108110610b4757610b46611d29565b5b6020020181815250508080610b5b90611e39565b915050610a90565b50919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000801b610ba281610b9d610d7b565b610d83565b6064821115610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd90611eae565b60405180910390fd5b816003819055505050565b6000801b610c0681610c01610d7b565b610d83565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c86573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610c80573d6000803e3d6000fd5b50610d06565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610cc1929190611ece565b6020604051808303816000875af1158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0491906119b4565b505b505050565b60175481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610d8d8282610947565b610e1c57610db28173ffffffffffffffffffffffffffffffffffffffff166014610fe2565b610dc08360001c6020610fe2565b604051602001610dd1929190611fcb565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e139190612005565b60405180910390fd5b5050565b610e2a8282610947565b610efc57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ea1610d7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610f0a8282610947565b15610fde5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f83610d7b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b606060006002836002610ff59190611d58565b610fff9190611de3565b67ffffffffffffffff8111156110185761101761159d565b5b6040519080825280601f01601f19166020018201604052801561104a5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061108257611081611d29565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106110e6576110e5611d29565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026111269190611d58565b6111309190611de3565b90505b60018111156111d0577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061117257611171611d29565b5b1a60f81b82828151811061118957611188611d29565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806111c990612027565b9050611133565b5060008414611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120b9061209c565b60405180910390fd5b8091505092915050565b604051806102000160405280601090602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61128a81611255565b811461129557600080fd5b50565b6000813590506112a781611281565b92915050565b6000602082840312156112c3576112c261124b565b5b60006112d184828501611298565b91505092915050565b60008115159050919050565b6112ef816112da565b82525050565b600060208201905061130a60008301846112e6565b92915050565b6000819050919050565b61132381611310565b82525050565b600060208201905061133e600083018461131a565b92915050565b61134d81611310565b811461135857600080fd5b50565b60008135905061136a81611344565b92915050565b6000602082840312156113865761138561124b565b5b60006113948482850161135b565b91505092915050565b6000819050919050565b6113b08161139d565b81146113bb57600080fd5b50565b6000813590506113cd816113a7565b92915050565b6000602082840312156113e9576113e861124b565b5b60006113f7848285016113be565b91505092915050565b6114098161139d565b82525050565b60006020820190506114246000830184611400565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114558261142a565b9050919050565b6114658161144a565b811461147057600080fd5b50565b6000813590506114828161145c565b92915050565b6000806040838503121561149f5761149e61124b565b5b60006114ad858286016113be565b92505060206114be85828601611473565b9150509250929050565b600080604083850312156114df576114de61124b565b5b60006114ed8582860161135b565b92505060206114fe8582860161135b565b9150509250929050565b6000819050919050565b600061152d6115286115238461142a565b611508565b61142a565b9050919050565b600061153f82611512565b9050919050565b600061155182611534565b9050919050565b61156181611546565b82525050565b600060208201905061157c6000830184611558565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115d58261158c565b810181811067ffffffffffffffff821117156115f4576115f361159d565b5b80604052505050565b6000611607611241565b905061161382826115cc565b919050565b600067ffffffffffffffff8211156116335761163261159d565b5b61163c8261158c565b9050602081019050919050565b82818337600083830152505050565b600061166b61166684611618565b6115fd565b90508281526020810184848401111561168757611686611587565b5b611692848285611649565b509392505050565b600082601f8301126116af576116ae611582565b5b81356116bf848260208601611658565b91505092915050565b6000602082840312156116de576116dd61124b565b5b600082013567ffffffffffffffff8111156116fc576116fb611250565b5b6117088482850161169a565b91505092915050565b600080604083850312156117285761172761124b565b5b600061173685828601611473565b92505060206117478582860161135b565b9150509250929050565b61175a8161144a565b82525050565b60006020820190506117756000830184611751565b92915050565b600060109050919050565b600081905092915050565b6000819050919050565b6117a481611310565b82525050565b60006117b6838361179b565b60208301905092915050565b6000602082019050919050565b6117d88161177b565b6117e28184611786565b92506117ed82611791565b8060005b8381101561181e57815161180587826117aa565b9650611810836117c2565b9250506001810190506117f1565b505050505050565b60006102008201905061183c60008301846117cf565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006118af602f83611842565b91506118ba82611853565b604082019050919050565b600060208201905081810360008301526118de816118a2565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061191b601083611842565b9150611926826118e5565b602082019050919050565b6000602082019050818103600083015261194a8161190e565b9050919050565b60006060820190506119666000830186611751565b6119736020830185611751565b611980604083018461131a565b949350505050565b611991816112da565b811461199c57600080fd5b50565b6000815190506119ae81611988565b92915050565b6000602082840312156119ca576119c961124b565b5b60006119d88482850161199f565b91505092915050565b600081519050919050565b60005b83811015611a0a5780820151818401526020810190506119ef565b83811115611a19576000848401525b50505050565b6000611a2a826119e1565b611a348185611842565b9350611a448185602086016119ec565b611a4d8161158c565b840191505092915050565b6000604082019050611a6d6000830185611751565b8181036020830152611a7f8184611a1f565b90509392505050565b600081519050611a9781611344565b92915050565b600060208284031215611ab357611ab261124b565b5b6000611ac184828501611a88565b91505092915050565b6000608082019050611adf6000830187611751565b611aec602083018661131a565b611af96040830185611751565b611b06606083018461131a565b95945050505050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b5682611b0f565b9150611b6183611b0f565b925082611b7157611b70611b1c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115611c0257808604811115611bde57611bdd611b7c565b5b6001851615611bed5780820291505b8081029050611bfb85611bab565b9450611bc2565b94509492505050565b600082611c1b5760019050611cd7565b81611c295760009050611cd7565b8160018114611c3f5760028114611c4957611c78565b6001915050611cd7565b60ff841115611c5b57611c5a611b7c565b5b8360020a915084821115611c7257611c71611b7c565b5b50611cd7565b5060208310610133831016604e8410600b8410161715611cad5782820a905083811115611ca857611ca7611b7c565b5b611cd7565b611cba8484846001611bb8565b92509050818404811115611cd157611cd0611b7c565b5b81810290505b9392505050565b6000611ce982611310565b9150611cf483611b0f565b9250611d217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611c0b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611d6382611310565b9150611d6e83611310565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da757611da6611b7c565b5b828202905092915050565b6000611dbd82611b0f565b9150611dc883611b0f565b925082611dd857611dd7611b1c565b5b828204905092915050565b6000611dee82611310565b9150611df983611310565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e2e57611e2d611b7c565b5b828201905092915050565b6000611e4482611b0f565b915060ff8203611e5757611e56611b7c565b5b600182019050919050565b7f4d7573742062652076616c69642070657263656e740000000000000000000000600082015250565b6000611e98601583611842565b9150611ea382611e62565b602082019050919050565b60006020820190508181036000830152611ec781611e8b565b9050919050565b6000604082019050611ee36000830185611751565b611ef0602083018461131a565b9392505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611f38601783611ef7565b9150611f4382611f02565b601782019050919050565b6000611f59826119e1565b611f638185611ef7565b9350611f738185602086016119ec565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611fb5601183611ef7565b9150611fc082611f7f565b601182019050919050565b6000611fd682611f2b565b9150611fe28285611f4e565b9150611fed82611fa8565b9150611ff98284611f4e565b91508190509392505050565b6000602082019050818103600083015261201f8184611a1f565b905092915050565b600061203282611310565b91506000820361204557612044611b7c565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000612086602083611842565b915061209182612050565b602082019050919050565b600060208201905081810360008301526120b581612079565b905091905056fea264697066735822122025c53aa083b37f07498e625a53d9c567494e3c832e99b92fe365a9fdbe78900f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x841ACC5D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xDD23FAF3 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xEB47536A EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0x442 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x841ACC5D EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x945099BC EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xAC6B182D EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xC6098256 EQ PUSH2 0x382 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x51D64E64 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x52C6159F EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x683B0EE5 EQ PUSH2 0x29A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x9C9985C EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA1AC657 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x13E6B93B EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH2 0x4D2 DUP3 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x950DCD4A7087BBF2CEE08268E1B26AC45FB310D3AE443D0FE53714B713DA45C1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D6 DUP3 PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x5E7 DUP2 PUSH2 0x5E2 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x5F1 DUP4 DUP4 PUSH2 0xE20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FE PUSH2 0xD7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x675 DUP3 DUP3 PUSH2 0xF00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x68E DUP2 PUSH2 0x689 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6ED PUSH2 0x6C7 JUMP JUMPDEST ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x17 SLOAD GT DUP1 ISZERO PUSH2 0x78E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x839 JUMPI PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD204C45E CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST SWAP1 POP PUSH32 0x9E6E3ACB506BF1D2ADB1D8565252E575763EE07D1DEBFCC2C830682895B3137D CALLER DUP3 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH2 0x936 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x9C7 DUP2 PUSH2 0x9C2 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST DUP3 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x17 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 PUSH1 0x10 DUP2 LT PUSH2 0xA2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA65 DUP3 PUSH2 0x5AD JUMP JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0xA71 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xA80 DUP4 DUP4 PUSH2 0xF00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x121E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0xABA JUMPI PUSH1 0x0 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100 PUSH2 0xACA SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST DUP4 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0xB02 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xB25 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP4 PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x10 DUP2 LT PUSH2 0xB47 JUMPI PUSH2 0xB46 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB5B SWAP1 PUSH2 0x1E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA90 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xBA2 DUP2 PUSH2 0xB9D PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xC06 DUP2 PUSH2 0xC01 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC86 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xD06 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD8D DUP3 DUP3 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xE1C JUMPI PUSH2 0xDB2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0xDC0 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD1 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE2A DUP3 DUP3 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xEFC JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEA1 PUSH2 0xD7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF0A DUP3 DUP3 PUSH2 0x947 JUMP JUMPDEST ISZERO PUSH2 0xFDE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF83 PUSH2 0xD7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0x159D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x104A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x10E6 JUMPI PUSH2 0x10E5 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1126 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x1130 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x1D29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x11C9 SWAP1 PUSH2 0x2027 JUMP JUMPDEST SWAP1 POP PUSH2 0x1133 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP1 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x200 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128A DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP2 EQ PUSH2 0x1295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A7 DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12C2 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12D1 DUP5 DUP3 DUP6 ADD PUSH2 0x1298 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EF DUP2 PUSH2 0x12DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1323 DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP2 EQ PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136A DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1386 JUMPI PUSH2 0x1385 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1394 DUP5 DUP3 DUP6 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B0 DUP2 PUSH2 0x139D JUMP JUMPDEST DUP2 EQ PUSH2 0x13BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13CD DUP2 PUSH2 0x13A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP5 DUP3 DUP6 ADD PUSH2 0x13BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x139D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1455 DUP3 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1465 DUP2 PUSH2 0x144A JUMP JUMPDEST DUP2 EQ PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1482 DUP2 PUSH2 0x145C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149E PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14AD DUP6 DUP3 DUP7 ADD PUSH2 0x13BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14BE DUP6 DUP3 DUP7 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH2 0x14DE PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14ED DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14FE DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152D PUSH2 0x1528 PUSH2 0x1523 DUP5 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x142A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153F DUP3 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1551 DUP3 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1561 DUP2 PUSH2 0x1546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1558 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15D5 DUP3 PUSH2 0x158C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x159D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH2 0x1613 DUP3 DUP3 PUSH2 0x15CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x159D JUMP JUMPDEST JUMPDEST PUSH2 0x163C DUP3 PUSH2 0x158C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166B PUSH2 0x1666 DUP5 PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x1587 JUMP JUMPDEST JUMPDEST PUSH2 0x1692 DUP5 DUP3 DUP6 PUSH2 0x1649 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16AF JUMPI PUSH2 0x16AE PUSH2 0x1582 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1658 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x1250 JUMP JUMPDEST JUMPDEST PUSH2 0x1708 DUP5 DUP3 DUP6 ADD PUSH2 0x169A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1736 DUP6 DUP3 DUP7 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1747 DUP6 DUP3 DUP7 ADD PUSH2 0x135B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x175A DUP2 PUSH2 0x144A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1775 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1751 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A4 DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B6 DUP4 DUP4 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x17E2 DUP2 DUP5 PUSH2 0x1786 JUMP JUMPDEST SWAP3 POP PUSH2 0x17ED DUP3 PUSH2 0x1791 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x181E JUMPI DUP2 MLOAD PUSH2 0x1805 DUP8 DUP3 PUSH2 0x17AA JUMP JUMPDEST SWAP7 POP PUSH2 0x1810 DUP4 PUSH2 0x17C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17F1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x183C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF PUSH1 0x2F DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x18BA DUP3 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18DE DUP2 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191B PUSH1 0x10 DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x1926 DUP3 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x194A DUP2 PUSH2 0x190E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1966 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1973 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1980 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1991 DUP2 PUSH2 0x12DA JUMP JUMPDEST DUP2 EQ PUSH2 0x199C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19AE DUP2 PUSH2 0x1988 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP5 DUP3 DUP6 ADD PUSH2 0x199F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19EF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2A DUP3 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x1A34 DUP2 DUP6 PUSH2 0x1842 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x1A4D DUP2 PUSH2 0x158C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A6D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A7F DUP2 DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A97 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x124B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AC1 DUP5 DUP3 DUP6 ADD PUSH2 0x1A88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ADF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1AEC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x131A JUMP JUMPDEST PUSH2 0x1AF9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1B06 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B56 DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B61 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B71 JUMPI PUSH2 0x1B70 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1C02 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BDD PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1BED JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1BFB DUP6 PUSH2 0x1BAB JUMP JUMPDEST SWAP5 POP PUSH2 0x1BC2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C1B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1CD7 JUMP JUMPDEST DUP2 PUSH2 0x1C29 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CD7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1C3F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1C49 JUMPI PUSH2 0x1C78 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1CD7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5A PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1C71 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST POP PUSH2 0x1CD7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1CAD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH2 0x1CD7 JUMP JUMPDEST PUSH2 0x1CBA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1CD1 JUMPI PUSH2 0x1CD0 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE9 DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF4 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP PUSH2 0x1D21 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D63 DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBD DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEE DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF9 DUP4 PUSH2 0x1310 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E2E JUMPI PUSH2 0x1E2D PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E44 DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742062652076616C69642070657263656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E98 PUSH1 0x15 DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EA3 DUP3 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC7 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EE3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1EF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x131A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F38 PUSH1 0x17 DUP4 PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F43 DUP3 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F59 DUP3 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x1F63 DUP2 DUP6 PUSH2 0x1EF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F73 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB5 PUSH1 0x11 DUP4 PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC0 DUP3 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD6 DUP3 PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE2 DUP3 DUP6 PUSH2 0x1F4E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FED DUP3 PUSH2 0x1FA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF9 DUP3 DUP5 PUSH2 0x1F4E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201F DUP2 DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2032 DUP3 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2086 PUSH1 0x20 DUP4 PUSH2 0x1842 JUMP JUMPDEST SWAP2 POP PUSH2 0x2091 DUP3 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B5 DUP2 PUSH2 0x2079 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC5 GASPRICE LOG0 DUP4 0xB3 PUSH32 0x7498E625A53D9C567494E3C832E99B92FE365A9FDBE78900F64736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "292:4447:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2510:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;563:38:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4316:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;641:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3882:121:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4253:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5270:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1715:157:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;413:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1034:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:28:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2868:1375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2799:137:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2578:284:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1917:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:206:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;889:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4632:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2092:311:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;495:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4455:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;942:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:202:0;2595:4;2633:32;2618:47;;;:11;:47;;;;:87;;;;2669:36;2693:11;2669:23;:36::i;:::-;2618:87;2611:94;;2510:202;;;:::o;563:38:10:-;;;;:::o;4316:133::-;4389:4;;;;;;;;;;;:9;;;4399:7;4389:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4422:20;4434:7;4422:20;;;;;;:::i;:::-;;;;;;;;4316:133;:::o;641:29::-;;;;:::o;3882:121:0:-;3948:7;3974:6;:12;3981:4;3974:12;;;;;;;;;;;:22;;;3967:29;;3882:121;;;:::o;4253:145::-;4336:18;4349:4;4336:12;:18::i;:::-;2395:30;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;4366:25:::1;4377:4;4383:7;4366:10;:25::i;:::-;4253:145:::0;;;:::o;5270:214::-;5376:12;:10;:12::i;:::-;5365:23;;:7;:23;;;5357:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5451:26;5463:4;5469:7;5451:11;:26::i;:::-;5270:214;;:::o;1715:157:10:-;1962:4:0;1793:18:10;;2395:30:0;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;1837:4:10::1;1827:7;:14;;;;1861:4;1851:7;:14;;;;1715:157:::0;;;:::o;413:20::-;;;;;;;;;;;;;:::o;1034:84:9:-;1081:4;1104:7;;;;;;;;;;;1097:14;;1034:84;:::o;607:28:10:-;;;;:::o;2868:1375::-;3048:7;1348:8:9;:6;:8::i;:::-;1347:9;1339:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3081:1:10::1;3071:7;;:11;:35;;;;;3102:3;3086:20;;:4;;;;;;;;;;;:20;;;;3071:35;3067:127;;;3129:4;;;;;;;;;;;3122:25;;;3148:10;3168:4;3175:7;;3122:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3067:127;4006:15;4024:4;;;;;;;;;;;:13;;;4051:10;4075:9;4024:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4006:88;;4109:103;4132:10;4156:7;4177:4;;;;;;;;;;;4195:7;;4109:103;;;;;;;;;:::i;:::-;;;;;;;;4229:7;4222:14;;;2868:1375:::0;;;:::o;2799:137:0:-;2877:4;2900:6;:12;2907:4;2900:12;;;;;;;;;;;:20;;:29;2921:7;2900:29;;;;;;;;;;;;;;;;;;;;;;;;;2893:36;;2799:137;;;;:::o;2578:284:10:-;1962:4:0;2729:18:10;;2395:30:0;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;2766:5:10::1;2759:4;;:12;;;;;;;;;;;;;;;;;;2816:8;2806:7;:18;;;;2578:284:::0;;;:::o;1917:49:0:-;1962:4;1917:49;;;:::o;676:206:10:-;;;;;;;;;;;;;;;;;;;;:::o;889:19::-;;;;;;;;;;;;;:::o;4632:147:0:-;4716:18;4729:4;4716:12;:18::i;:::-;2395:30;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;4746:26:::1;4758:4;4764:7;4746:11;:26::i;:::-;4632:147:::0;;;:::o;2092:311:10:-;2178:25;;:::i;:::-;2224:7;2219:178;2241:2;2237:1;:6;;;2219:178;;;2376:1;2371;2367;:5;;;;:::i;:::-;:10;;;:18;;2384:1;2367:18;;;2380:1;2367:18;2361:3;:25;;;;:::i;:::-;2334:4;2339:1;2334:7;;;;;;;;;:::i;:::-;;;;;2328:14;;:58;;;;;;:::i;:::-;2296:6;2307:1;2303;:5;;;;:::i;:::-;2296:13;;;;;;;;;:::i;:::-;;;;;;:90;;;;:::i;:::-;2264:6;2275:1;2271;:5;;;;:::i;:::-;2264:13;;;;;;;;;:::i;:::-;;;;;:122;;;;;2245:3;;;;;:::i;:::-;;;;2219:178;;;;2092:311;;;:::o;495:62::-;533:24;495:62;:::o;1878:208::-;1962:4:0;1959:18:10;;2395:30:0;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;2012:3:10::1;2001:7;:14;;1993:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2072:7;2051:18;:28;;;;1878:208:::0;;:::o;4455:282::-;1962:4:0;4536:18:10;;2395:30:0;2406:4;2412:12;:10;:12::i;:::-;2395:10;:30::i;:::-;4591:3:10::1;4574:21;;:5;:21;;::::0;4570:161:::1;;4619:10;4611:28;;:36;4640:6;4611:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;4570:161;;;4685:5;4678:22;;;4701:10;4713:6;4678:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4570:161;4455:282:::0;;;:::o;942:31::-;;;;:::o;763:155:3:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;587:96:2:-;640:7;666:10;659:17;;587:96;:::o;3217:484:0:-;3297:22;3305:4;3311:7;3297;:22::i;:::-;3292:403;;3480:41;3508:7;3480:41;;3518:2;3480:19;:41::i;:::-;3592:38;3620:4;3612:13;;3627:2;3592:19;:38::i;:::-;3387:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3335:349;;;;;;;;;;;:::i;:::-;;;;;;;;3292:403;3217:484;;:::o;6537:224::-;6611:22;6619:4;6625:7;6611;:22::i;:::-;6606:149;;6681:4;6649:6;:12;6656:4;6649:12;;;;;;;;;;;:20;;:29;6670:7;6649:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6731:12;:10;:12::i;:::-;6704:40;;6722:7;6704:40;;6716:4;6704:40;;;;;;;;;;6606:149;6537:224;;:::o;6767:225::-;6841:22;6849:4;6855:7;6841;:22::i;:::-;6837:149;;;6911:5;6879:6;:12;6886:4;6879:12;;;;;;;;;;;:20;;:29;6900:7;6879:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6962:12;:10;:12::i;:::-;6935:40;;6953:7;6935:40;;6947:4;6935:40;;;;;;;;;;6837:149;6767:225;;:::o;1535:441:13:-;1610:13;1635:19;1680:1;1671:6;1667:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:47;;1692:15;:6;1699:1;1692:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1717;:6;1724:1;1717:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1747:9;1772:1;1763:6;1759:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;1813:12;1834:3;1826:5;:11;1813:25;;;;;;;:::i;:::-;;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1862:1;1852:11;;;;;1782:3;;;;:::i;:::-;;;1742:132;;;;1900:1;1891:5;:10;1883:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1962:6;1948:21;;;1535:441;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:122::-;2717:24;2735:5;2717:24;:::i;:::-;2710:5;2707:35;2697:63;;2756:1;2753;2746:12;2697:63;2644:122;:::o;2772:139::-;2818:5;2856:6;2843:20;2834:29;;2872:33;2899:5;2872:33;:::i;:::-;2772:139;;;;:::o;2917:329::-;2976:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:119;;;3031:79;;:::i;:::-;2993:119;3151:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3122:117;2917:329;;;;:::o;3252:118::-;3339:24;3357:5;3339:24;:::i;:::-;3334:3;3327:37;3252:118;;:::o;3376:222::-;3469:4;3507:2;3496:9;3492:18;3484:26;;3520:71;3588:1;3577:9;3573:17;3564:6;3520:71;:::i;:::-;3376:222;;;;:::o;3604:126::-;3641:7;3681:42;3674:5;3670:54;3659:65;;3604:126;;;:::o;3736:96::-;3773:7;3802:24;3820:5;3802:24;:::i;:::-;3791:35;;3736:96;;;:::o;3838:122::-;3911:24;3929:5;3911:24;:::i;:::-;3904:5;3901:35;3891:63;;3950:1;3947;3940:12;3891:63;3838:122;:::o;3966:139::-;4012:5;4050:6;4037:20;4028:29;;4066:33;4093:5;4066:33;:::i;:::-;3966:139;;;;:::o;4111:474::-;4179:6;4187;4236:2;4224:9;4215:7;4211:23;4207:32;4204:119;;;4242:79;;:::i;:::-;4204:119;4362:1;4387:53;4432:7;4423:6;4412:9;4408:22;4387:53;:::i;:::-;4377:63;;4333:117;4489:2;4515:53;4560:7;4551:6;4540:9;4536:22;4515:53;:::i;:::-;4505:63;;4460:118;4111:474;;;;;:::o;4591:::-;4659:6;4667;4716:2;4704:9;4695:7;4691:23;4687:32;4684:119;;;4722:79;;:::i;:::-;4684:119;4842:1;4867:53;4912:7;4903:6;4892:9;4888:22;4867:53;:::i;:::-;4857:63;;4813:117;4969:2;4995:53;5040:7;5031:6;5020:9;5016:22;4995:53;:::i;:::-;4985:63;;4940:118;4591:474;;;;;:::o;5071:60::-;5099:3;5120:5;5113:12;;5071:60;;;:::o;5137:142::-;5187:9;5220:53;5238:34;5247:24;5265:5;5247:24;:::i;:::-;5238:34;:::i;:::-;5220:53;:::i;:::-;5207:66;;5137:142;;;:::o;5285:126::-;5335:9;5368:37;5399:5;5368:37;:::i;:::-;5355:50;;5285:126;;;:::o;5417:142::-;5483:9;5516:37;5547:5;5516:37;:::i;:::-;5503:50;;5417:142;;;:::o;5565:163::-;5668:53;5715:5;5668:53;:::i;:::-;5663:3;5656:66;5565:163;;:::o;5734:254::-;5843:4;5881:2;5870:9;5866:18;5858:26;;5894:87;5978:1;5967:9;5963:17;5954:6;5894:87;:::i;:::-;5734:254;;;;:::o;5994:117::-;6103:1;6100;6093:12;6117:117;6226:1;6223;6216:12;6240:102;6281:6;6332:2;6328:7;6323:2;6316:5;6312:14;6308:28;6298:38;;6240:102;;;:::o;6348:180::-;6396:77;6393:1;6386:88;6493:4;6490:1;6483:15;6517:4;6514:1;6507:15;6534:281;6617:27;6639:4;6617:27;:::i;:::-;6609:6;6605:40;6747:6;6735:10;6732:22;6711:18;6699:10;6696:34;6693:62;6690:88;;;6758:18;;:::i;:::-;6690:88;6798:10;6794:2;6787:22;6577:238;6534:281;;:::o;6821:129::-;6855:6;6882:20;;:::i;:::-;6872:30;;6911:33;6939:4;6931:6;6911:33;:::i;:::-;6821:129;;;:::o;6956:308::-;7018:4;7108:18;7100:6;7097:30;7094:56;;;7130:18;;:::i;:::-;7094:56;7168:29;7190:6;7168:29;:::i;:::-;7160:37;;7252:4;7246;7242:15;7234:23;;6956:308;;;:::o;7270:154::-;7354:6;7349:3;7344;7331:30;7416:1;7407:6;7402:3;7398:16;7391:27;7270:154;;;:::o;7430:412::-;7508:5;7533:66;7549:49;7591:6;7549:49;:::i;:::-;7533:66;:::i;:::-;7524:75;;7622:6;7615:5;7608:21;7660:4;7653:5;7649:16;7698:3;7689:6;7684:3;7680:16;7677:25;7674:112;;;7705:79;;:::i;:::-;7674:112;7795:41;7829:6;7824:3;7819;7795:41;:::i;:::-;7514:328;7430:412;;;;;:::o;7862:340::-;7918:5;7967:3;7960:4;7952:6;7948:17;7944:27;7934:122;;7975:79;;:::i;:::-;7934:122;8092:6;8079:20;8117:79;8192:3;8184:6;8177:4;8169:6;8165:17;8117:79;:::i;:::-;8108:88;;7924:278;7862:340;;;;:::o;8208:509::-;8277:6;8326:2;8314:9;8305:7;8301:23;8297:32;8294:119;;;8332:79;;:::i;:::-;8294:119;8480:1;8469:9;8465:17;8452:31;8510:18;8502:6;8499:30;8496:117;;;8532:79;;:::i;:::-;8496:117;8637:63;8692:7;8683:6;8672:9;8668:22;8637:63;:::i;:::-;8627:73;;8423:287;8208:509;;;;:::o;8723:474::-;8791:6;8799;8848:2;8836:9;8827:7;8823:23;8819:32;8816:119;;;8854:79;;:::i;:::-;8816:119;8974:1;8999:53;9044:7;9035:6;9024:9;9020:22;8999:53;:::i;:::-;8989:63;;8945:117;9101:2;9127:53;9172:7;9163:6;9152:9;9148:22;9127:53;:::i;:::-;9117:63;;9072:118;8723:474;;;;;:::o;9203:118::-;9290:24;9308:5;9290:24;:::i;:::-;9285:3;9278:37;9203:118;;:::o;9327:222::-;9420:4;9458:2;9447:9;9443:18;9435:26;;9471:71;9539:1;9528:9;9524:17;9515:6;9471:71;:::i;:::-;9327:222;;;;:::o;9555:105::-;9621:6;9649:4;9639:14;;9555:105;;;:::o;9666:144::-;9764:11;9801:3;9786:18;;9666:144;;;;:::o;9816:99::-;9882:4;9905:3;9897:11;;9816:99;;;:::o;9921:108::-;9998:24;10016:5;9998:24;:::i;:::-;9993:3;9986:37;9921:108;;:::o;10035:179::-;10104:10;10125:46;10167:3;10159:6;10125:46;:::i;:::-;10203:4;10198:3;10194:14;10180:28;;10035:179;;;;:::o;10220:112::-;10289:4;10321;10316:3;10312:14;10304:22;;10220:112;;;:::o;10372:700::-;10510:53;10557:5;10510:53;:::i;:::-;10579:85;10657:6;10652:3;10579:85;:::i;:::-;10572:92;;10688:55;10737:5;10688:55;:::i;:::-;10766:7;10797:1;10782:283;10807:6;10804:1;10801:13;10782:283;;;10883:6;10877:13;10910:63;10969:3;10954:13;10910:63;:::i;:::-;10903:70;;10996:59;11048:6;10996:59;:::i;:::-;10986:69;;10842:223;10829:1;10826;10822:9;10817:14;;10782:283;;;10786:14;10486:586;;;10372:700;;:::o;11078:319::-;11219:4;11257:3;11246:9;11242:19;11234:27;;11271:119;11387:1;11376:9;11372:17;11363:6;11271:119;:::i;:::-;11078:319;;;;:::o;11403:169::-;11487:11;11521:6;11516:3;11509:19;11561:4;11556:3;11552:14;11537:29;;11403:169;;;;:::o;11578:234::-;11718:34;11714:1;11706:6;11702:14;11695:58;11787:17;11782:2;11774:6;11770:15;11763:42;11578:234;:::o;11818:366::-;11960:3;11981:67;12045:2;12040:3;11981:67;:::i;:::-;11974:74;;12057:93;12146:3;12057:93;:::i;:::-;12175:2;12170:3;12166:12;12159:19;;11818:366;;;:::o;12190:419::-;12356:4;12394:2;12383:9;12379:18;12371:26;;12443:9;12437:4;12433:20;12429:1;12418:9;12414:17;12407:47;12471:131;12597:4;12471:131;:::i;:::-;12463:139;;12190:419;;;:::o;12615:166::-;12755:18;12751:1;12743:6;12739:14;12732:42;12615:166;:::o;12787:366::-;12929:3;12950:67;13014:2;13009:3;12950:67;:::i;:::-;12943:74;;13026:93;13115:3;13026:93;:::i;:::-;13144:2;13139:3;13135:12;13128:19;;12787:366;;;:::o;13159:419::-;13325:4;13363:2;13352:9;13348:18;13340:26;;13412:9;13406:4;13402:20;13398:1;13387:9;13383:17;13376:47;13440:131;13566:4;13440:131;:::i;:::-;13432:139;;13159:419;;;:::o;13584:442::-;13733:4;13771:2;13760:9;13756:18;13748:26;;13784:71;13852:1;13841:9;13837:17;13828:6;13784:71;:::i;:::-;13865:72;13933:2;13922:9;13918:18;13909:6;13865:72;:::i;:::-;13947;14015:2;14004:9;14000:18;13991:6;13947:72;:::i;:::-;13584:442;;;;;;:::o;14032:116::-;14102:21;14117:5;14102:21;:::i;:::-;14095:5;14092:32;14082:60;;14138:1;14135;14128:12;14082:60;14032:116;:::o;14154:137::-;14208:5;14239:6;14233:13;14224:22;;14255:30;14279:5;14255:30;:::i;:::-;14154:137;;;;:::o;14297:345::-;14364:6;14413:2;14401:9;14392:7;14388:23;14384:32;14381:119;;;14419:79;;:::i;:::-;14381:119;14539:1;14564:61;14617:7;14608:6;14597:9;14593:22;14564:61;:::i;:::-;14554:71;;14510:125;14297:345;;;;:::o;14648:99::-;14700:6;14734:5;14728:12;14718:22;;14648:99;;;:::o;14753:307::-;14821:1;14831:113;14845:6;14842:1;14839:13;14831:113;;;14930:1;14925:3;14921:11;14915:18;14911:1;14906:3;14902:11;14895:39;14867:2;14864:1;14860:10;14855:15;;14831:113;;;14962:6;14959:1;14956:13;14953:101;;;15042:1;15033:6;15028:3;15024:16;15017:27;14953:101;14802:258;14753:307;;;:::o;15066:364::-;15154:3;15182:39;15215:5;15182:39;:::i;:::-;15237:71;15301:6;15296:3;15237:71;:::i;:::-;15230:78;;15317:52;15362:6;15357:3;15350:4;15343:5;15339:16;15317:52;:::i;:::-;15394:29;15416:6;15394:29;:::i;:::-;15389:3;15385:39;15378:46;;15158:272;15066:364;;;;:::o;15436:423::-;15577:4;15615:2;15604:9;15600:18;15592:26;;15628:71;15696:1;15685:9;15681:17;15672:6;15628:71;:::i;:::-;15746:9;15740:4;15736:20;15731:2;15720:9;15716:18;15709:48;15774:78;15847:4;15838:6;15774:78;:::i;:::-;15766:86;;15436:423;;;;;:::o;15865:143::-;15922:5;15953:6;15947:13;15938:22;;15969:33;15996:5;15969:33;:::i;:::-;15865:143;;;;:::o;16014:351::-;16084:6;16133:2;16121:9;16112:7;16108:23;16104:32;16101:119;;;16139:79;;:::i;:::-;16101:119;16259:1;16284:64;16340:7;16331:6;16320:9;16316:22;16284:64;:::i;:::-;16274:74;;16230:128;16014:351;;;;:::o;16371:553::-;16548:4;16586:3;16575:9;16571:19;16563:27;;16600:71;16668:1;16657:9;16653:17;16644:6;16600:71;:::i;:::-;16681:72;16749:2;16738:9;16734:18;16725:6;16681:72;:::i;:::-;16763;16831:2;16820:9;16816:18;16807:6;16763:72;:::i;:::-;16845;16913:2;16902:9;16898:18;16889:6;16845:72;:::i;:::-;16371:553;;;;;;;:::o;16930:86::-;16965:7;17005:4;16998:5;16994:16;16983:27;;16930:86;;;:::o;17022:180::-;17070:77;17067:1;17060:88;17167:4;17164:1;17157:15;17191:4;17188:1;17181:15;17208:170;17238:1;17255:18;17271:1;17255:18;:::i;:::-;17250:23;;17287:18;17303:1;17287:18;:::i;:::-;17282:23;;17324:1;17314:35;;17329:18;;:::i;:::-;17314:35;17370:1;17367;17363:9;17358:14;;17208:170;;;;:::o;17384:180::-;17432:77;17429:1;17422:88;17529:4;17526:1;17519:15;17553:4;17550:1;17543:15;17570:102;17612:8;17659:5;17656:1;17652:13;17631:34;;17570:102;;;:::o;17678:848::-;17739:5;17746:4;17770:6;17761:15;;17794:5;17785:14;;17808:712;17829:1;17819:8;17816:15;17808:712;;;17924:4;17919:3;17915:14;17909:4;17906:24;17903:50;;;17933:18;;:::i;:::-;17903:50;17983:1;17973:8;17969:16;17966:451;;;18398:4;18391:5;18387:16;18378:25;;17966:451;18448:4;18442;18438:15;18430:23;;18478:32;18501:8;18478:32;:::i;:::-;18466:44;;17808:712;;;17678:848;;;;;;;:::o;18532:1073::-;18586:5;18777:8;18767:40;;18798:1;18789:10;;18800:5;;18767:40;18826:4;18816:36;;18843:1;18834:10;;18845:5;;18816:36;18912:4;18960:1;18955:27;;;;18996:1;18991:191;;;;18905:277;;18955:27;18973:1;18964:10;;18975:5;;;18991:191;19036:3;19026:8;19023:17;19020:43;;;19043:18;;:::i;:::-;19020:43;19092:8;19089:1;19085:16;19076:25;;19127:3;19120:5;19117:14;19114:40;;;19134:18;;:::i;:::-;19114:40;19167:5;;;18905:277;;19291:2;19281:8;19278:16;19272:3;19266:4;19263:13;19259:36;19241:2;19231:8;19228:16;19223:2;19217:4;19214:12;19210:35;19194:111;19191:246;;;19347:8;19341:4;19337:19;19328:28;;19382:3;19375:5;19372:14;19369:40;;;19389:18;;:::i;:::-;19369:40;19422:5;;19191:246;19462:42;19500:3;19490:8;19484:4;19481:1;19462:42;:::i;:::-;19447:57;;;;19536:4;19531:3;19527:14;19520:5;19517:25;19514:51;;;19545:18;;:::i;:::-;19514:51;19594:4;19587:5;19583:16;19574:25;;18532:1073;;;;;;:::o;19611:281::-;19669:5;19693:23;19711:4;19693:23;:::i;:::-;19685:31;;19737:25;19753:8;19737:25;:::i;:::-;19725:37;;19781:104;19818:66;19808:8;19802:4;19781:104;:::i;:::-;19772:113;;19611:281;;;;:::o;19898:180::-;19946:77;19943:1;19936:88;20043:4;20040:1;20033:15;20067:4;20064:1;20057:15;20084:348;20124:7;20147:20;20165:1;20147:20;:::i;:::-;20142:25;;20181:20;20199:1;20181:20;:::i;:::-;20176:25;;20369:1;20301:66;20297:74;20294:1;20291:81;20286:1;20279:9;20272:17;20268:105;20265:131;;;20376:18;;:::i;:::-;20265:131;20424:1;20421;20417:9;20406:20;;20084:348;;;;:::o;20438:179::-;20476:1;20493:18;20509:1;20493:18;:::i;:::-;20488:23;;20525:18;20541:1;20525:18;:::i;:::-;20520:23;;20562:1;20552:35;;20567:18;;:::i;:::-;20552:35;20609:1;20606;20602:9;20597:14;;20438:179;;;;:::o;20623:305::-;20663:3;20682:20;20700:1;20682:20;:::i;:::-;20677:25;;20716:20;20734:1;20716:20;:::i;:::-;20711:25;;20870:1;20802:66;20798:74;20795:1;20792:81;20789:107;;;20876:18;;:::i;:::-;20789:107;20920:1;20917;20913:9;20906:16;;20623:305;;;;:::o;20934:167::-;20971:3;20994:22;21010:5;20994:22;:::i;:::-;20985:31;;21038:4;21031:5;21028:15;21025:41;;21046:18;;:::i;:::-;21025:41;21093:1;21086:5;21082:13;21075:20;;20934:167;;;:::o;21107:171::-;21247:23;21243:1;21235:6;21231:14;21224:47;21107:171;:::o;21284:366::-;21426:3;21447:67;21511:2;21506:3;21447:67;:::i;:::-;21440:74;;21523:93;21612:3;21523:93;:::i;:::-;21641:2;21636:3;21632:12;21625:19;;21284:366;;;:::o;21656:419::-;21822:4;21860:2;21849:9;21845:18;21837:26;;21909:9;21903:4;21899:20;21895:1;21884:9;21880:17;21873:47;21937:131;22063:4;21937:131;:::i;:::-;21929:139;;21656:419;;;:::o;22081:332::-;22202:4;22240:2;22229:9;22225:18;22217:26;;22253:71;22321:1;22310:9;22306:17;22297:6;22253:71;:::i;:::-;22334:72;22402:2;22391:9;22387:18;22378:6;22334:72;:::i;:::-;22081:332;;;;;:::o;22419:148::-;22521:11;22558:3;22543:18;;22419:148;;;;:::o;22573:173::-;22713:25;22709:1;22701:6;22697:14;22690:49;22573:173;:::o;22752:402::-;22912:3;22933:85;23015:2;23010:3;22933:85;:::i;:::-;22926:92;;23027:93;23116:3;23027:93;:::i;:::-;23145:2;23140:3;23136:12;23129:19;;22752:402;;;:::o;23160:377::-;23266:3;23294:39;23327:5;23294:39;:::i;:::-;23349:89;23431:6;23426:3;23349:89;:::i;:::-;23342:96;;23447:52;23492:6;23487:3;23480:4;23473:5;23469:16;23447:52;:::i;:::-;23524:6;23519:3;23515:16;23508:23;;23270:267;23160:377;;;;:::o;23543:167::-;23683:19;23679:1;23671:6;23667:14;23660:43;23543:167;:::o;23716:402::-;23876:3;23897:85;23979:2;23974:3;23897:85;:::i;:::-;23890:92;;23991:93;24080:3;23991:93;:::i;:::-;24109:2;24104:3;24100:12;24093:19;;23716:402;;;:::o;24124:967::-;24506:3;24528:148;24672:3;24528:148;:::i;:::-;24521:155;;24693:95;24784:3;24775:6;24693:95;:::i;:::-;24686:102;;24805:148;24949:3;24805:148;:::i;:::-;24798:155;;24970:95;25061:3;25052:6;24970:95;:::i;:::-;24963:102;;25082:3;25075:10;;24124:967;;;;;:::o;25097:313::-;25210:4;25248:2;25237:9;25233:18;25225:26;;25297:9;25291:4;25287:20;25283:1;25272:9;25268:17;25261:47;25325:78;25398:4;25389:6;25325:78;:::i;:::-;25317:86;;25097:313;;;;:::o;25416:171::-;25455:3;25478:24;25496:5;25478:24;:::i;:::-;25469:33;;25524:4;25517:5;25514:15;25511:41;;25532:18;;:::i;:::-;25511:41;25579:1;25572:5;25568:13;25561:20;;25416:171;;;:::o;25593:182::-;25733:34;25729:1;25721:6;25717:14;25710:58;25593:182;:::o;25781:366::-;25923:3;25944:67;26008:2;26003:3;25944:67;:::i;:::-;25937:74;;26020:93;26109:3;26020:93;:::i;:::-;26138:2;26133:3;26129:12;26122:19;;25781:366;;;:::o;26153:419::-;26319:4;26357:2;26346:9;26342:18;26334:26;;26406:9;26400:4;26396:20;26392:1;26381:9;26377:17;26370:47;26434:131;26560:4;26434:131;:::i;:::-;26426:139;;26153:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1686800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "424",
								"PAUSER_ROLE()": "395",
								"SQFi()": "infinite",
								"amount1()": "2561",
								"bytes32ToAmount16(bytes32)": "infinite",
								"createSQFI(string)": "infinite",
								"editSQFI(uint256,uint256)": "infinite",
								"editSupportedFee(address,uint256)": "infinite",
								"editUncraftBurnPercent(uint256)": "infinite",
								"fee1()": "2647",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3185",
								"maxSQFI()": "2519",
								"minSQFI()": "2562",
								"paused()": "2590",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"runePower(uint256)": "infinite",
								"supportsInterface(bytes4)": "751",
								"uncraft(uint256)": "infinite",
								"uncraftBurnPercent()": "2475",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 563,
									"end": 601,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 563,
									"end": 601,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 632,
									"end": 635,
									"name": "PUSH",
									"source": 10,
									"value": "C8"
								},
								{
									"begin": 607,
									"end": 635,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 607,
									"end": 635,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 666,
									"end": 670,
									"name": "PUSH",
									"source": 10,
									"value": "7D0"
								},
								{
									"begin": 641,
									"end": 670,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 641,
									"end": 670,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 717,
									"end": 718,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 728,
									"end": 730,
									"name": "PUSH",
									"source": 10,
									"value": "F"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 740,
									"end": 742,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 752,
									"end": 755,
									"name": "PUSH",
									"source": 10,
									"value": "B4"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 765,
									"end": 768,
									"name": "PUSH",
									"source": 10,
									"value": "276"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 10,
									"value": "898"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 792,
									"end": 796,
									"name": "PUSH",
									"source": 10,
									"value": "1E78"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 806,
									"end": 811,
									"name": "PUSH",
									"source": 10,
									"value": "6E3C"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 821,
									"end": 827,
									"name": "PUSH",
									"source": 10,
									"value": "19D48"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 837,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "3F480"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 853,
									"end": 859,
									"name": "PUSH",
									"source": 10,
									"value": "A25A8"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 869,
									"end": 876,
									"name": "PUSH",
									"source": 10,
									"value": "2191C0"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH",
									"source": 10,
									"value": "C"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 882,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 676,
									"end": 882,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 967,
									"end": 973,
									"name": "PUSH",
									"source": 10,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 942,
									"end": 973,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 942,
									"end": 973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 927,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 917,
									"end": 924,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 917,
									"end": 932,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 917,
									"end": 932,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1552,
									"end": 1557,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1540,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1536,
									"end": 1540,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1580,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1657,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1626,
									"end": 1644,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1644,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 1656,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1615,
									"end": 1625,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1615,
									"end": 1625,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1657,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1615,
									"end": 1657,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1657,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1615,
									"end": 1657,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1615,
									"end": 1657,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 533,
									"end": 557,
									"name": "PUSH",
									"source": 10,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1691,
									"end": 1701,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1677,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1667,
									"end": 1677,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1702,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1667,
									"end": 1702,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1702,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1667,
									"end": 1702,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1667,
									"end": 1702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6138,
									"end": 6142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6144,
									"end": 6151,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6127,
									"end": 6137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6127,
									"end": 6137,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6127,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6049,
									"end": 6159,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6619,
									"end": 6623,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6625,
									"end": 6632,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6618,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6611,
									"end": 6618,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6611,
									"end": 6618,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6611,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6681,
									"end": 6685,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6649,
									"end": 6655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6656,
									"end": 6660,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6661,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6670,
									"end": 6677,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6649,
									"end": 6685,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6731,
									"end": 6743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6722,
									"end": 6729,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6716,
									"end": 6720,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6704,
									"end": 6744,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6606,
									"end": 6755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6537,
									"end": 6761,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2877,
									"end": 2881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2906,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2912,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2920,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2921,
									"end": 2928,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2900,
									"end": 2929,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2893,
									"end": 2929,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2893,
									"end": 2929,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2936,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 587,
									"end": 683,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 587,
									"end": 683,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 640,
									"end": 647,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 676,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 659,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 659,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 587,
									"end": 683,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 683,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFF"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 4739,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025c53aa083b37f07498e625a53d9c567494e3c832e99b92fe365a9fdbe78900f64736f6c634300080d0033",
									".code": [
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "841ACC5D"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "DD23FAF3"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "E63AB1E9"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "EB47536A"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "F3FEF3A3"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "F400FDE4"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "841ACC5D"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "945099BC"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "AC6B182D"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "C6098256"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "51D64E64"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "52C6159F"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "683B0EE5"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "9C9985C"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "A1AC657"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "13E6B93B"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 292,
											"end": 4739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 563,
											"end": 601,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 676,
											"end": 882,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2665,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2693,
											"end": 2704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2618,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2712,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4393,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 4399,
											"end": 4406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH",
											"source": 10,
											"value": "950DCD4A7087BBF2CEE08268E1B26AC45FB310D3AE443D0FE53714B713DA45C1"
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4449,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 641,
											"end": 670,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 670,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3996,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3974,
											"end": 3996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4349,
											"end": 4353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4366,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5376,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5357,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5451,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5484,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1811,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1851,
											"end": 1865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1865,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1872,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 433,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1118,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 635,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1348,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1339,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3071,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3067,
											"end": 3194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3147,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3122,
											"end": 3147,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3147,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3172,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 3175,
											"end": 3182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3194,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3067,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4037,
											"name": "PUSH",
											"source": 10,
											"value": "D204C45E"
										},
										{
											"begin": 4051,
											"end": 4061,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4024,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "PUSH",
											"source": 10,
											"value": "9E6E3ACB506BF1D2ADB1D8565252E575763EE07D1DEBFCC2C830682895B3137D"
										},
										{
											"begin": 4132,
											"end": 4142,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4202,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 4195,
											"end": 4202,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4212,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 4243,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2900,
											"end": 2929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2936,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2813,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2862,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1966,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 676,
											"end": 882,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 889,
											"end": 908,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4729,
											"end": 4733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4716,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4716,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4764,
											"end": 4771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4746,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4779,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2376,
											"end": 2377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2364,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 2328,
											"end": 2342,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2328,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2296,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2092,
											"end": 2403,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 533,
											"end": 557,
											"name": "PUSH",
											"source": 10,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 495,
											"end": 557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 495,
											"end": 557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2015,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2015,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2051,
											"end": 2079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2079,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 2086,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4591,
											"end": 4594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4595,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4629,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4639,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4611,
											"end": 4639,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH",
											"source": 10,
											"value": "8FC"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4700,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4701,
											"end": 4711,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4678,
											"end": 4720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4570,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4737,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 942,
											"end": 973,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 973,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 871,
											"end": 882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 911,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 871,
											"end": 911,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 864,
											"end": 911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 864,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 640,
											"end": 647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3305,
											"end": 3309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3297,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3480,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3620,
											"end": 3624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3625,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3292,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3701,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6619,
											"end": 6623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6611,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 6611,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6649,
											"end": 6655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 6731,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6744,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6606,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6849,
											"end": 6853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6855,
											"end": 6862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6911,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6879,
											"end": 6916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6962,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6962,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6953,
											"end": 6960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6975,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 6837,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1623,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1681,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1635,
											"end": 1682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1635,
											"end": 1682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH",
											"source": 13,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1692,
											"end": 1698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1692,
											"end": 1707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "PUSH",
											"source": 13,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1837,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 1826,
											"end": 1831,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1852,
											"end": 1863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1896,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1883,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1976,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3219,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3122,
											"end": 3239,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 3357,
											"end": 3362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 3339,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3334,
											"end": 3337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3327,
											"end": 3364,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3252,
											"end": 3370,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3590,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 3520,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3376,
											"end": 3598,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3641,
											"end": 3648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3723,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3674,
											"end": 3679,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3670,
											"end": 3724,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3659,
											"end": 3724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3659,
											"end": 3724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3604,
											"end": 3730,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3773,
											"end": 3780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3826,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3832,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 3929,
											"end": 3934,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 3911,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3901,
											"end": 3936,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3952,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 3891,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3960,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4057,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4028,
											"end": 4057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4028,
											"end": 4057,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 4066,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 4105,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4236,
											"end": 4238,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4224,
											"end": 4233,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4211,
											"end": 4234,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4207,
											"end": 4239,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4323,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 4204,
											"end": 4323,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4323,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 4204,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4387,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4377,
											"end": 4440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4333,
											"end": 4450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4560,
											"end": 4567,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4540,
											"end": 4549,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4558,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4505,
											"end": 4568,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4505,
											"end": 4568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4460,
											"end": 4578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4585,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4691,
											"end": 4714,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4687,
											"end": 4719,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4813,
											"end": 4930,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5016,
											"end": 5038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4940,
											"end": 5058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5099,
											"end": 5102,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5125,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5137,
											"end": 5279,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 5137,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5187,
											"end": 5196,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 5238,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 5265,
											"end": 5270,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 5247,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5238,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 5238,
											"end": 5272,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5272,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 5238,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5220,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 5220,
											"end": 5273,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5220,
											"end": 5273,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 5220,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5273,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5137,
											"end": 5279,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5137,
											"end": 5279,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5137,
											"end": 5279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5137,
											"end": 5279,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5285,
											"end": 5411,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 5285,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 5399,
											"end": 5404,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 5368,
											"end": 5405,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5405,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 5368,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5355,
											"end": 5405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5355,
											"end": 5405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5411,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5411,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5411,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5417,
											"end": 5559,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 5417,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 5547,
											"end": 5552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5516,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 5516,
											"end": 5553,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5553,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 5516,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5553,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5559,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5559,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5565,
											"end": 5728,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 5565,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 5668,
											"end": 5721,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5721,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 5668,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5656,
											"end": 5722,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5565,
											"end": 5728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5565,
											"end": 5728,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5565,
											"end": 5728,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5843,
											"end": 5847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5883,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5894,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 5978,
											"end": 5979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5894,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 5894,
											"end": 5981,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 5981,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 5894,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5988,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5994,
											"end": 6111,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 5994,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6117,
											"end": 6234,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 6117,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6216,
											"end": 6228,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6342,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 6240,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6328,
											"end": 6335,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6323,
											"end": 6325,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6316,
											"end": 6321,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6326,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6298,
											"end": 6336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6298,
											"end": 6336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6342,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6342,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6342,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6342,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6348,
											"end": 6528,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 6348,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6396,
											"end": 6473,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6474,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6493,
											"end": 6497,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 6498,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6815,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6534,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6605,
											"end": 6645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6735,
											"end": 6745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6711,
											"end": 6729,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6699,
											"end": 6709,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6730,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6693,
											"end": 6755,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6778,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 6690,
											"end": 6778,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6778,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 6690,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6798,
											"end": 6808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6794,
											"end": 6796,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6787,
											"end": 6809,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6577,
											"end": 6815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6534,
											"end": 6815,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6821,
											"end": 6950,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 6821,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6855,
											"end": 6861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 6939,
											"end": 6943,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 6937,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 6911,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6821,
											"end": 6950,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6821,
											"end": 6950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6821,
											"end": 6950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6821,
											"end": 6950,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6956,
											"end": 7264,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 6956,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7106,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7127,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7094,
											"end": 7150,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7094,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 7094,
											"end": 7150,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7094,
											"end": 7150,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 7094,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7168,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7168,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 7168,
											"end": 7197,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7168,
											"end": 7197,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 7168,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7160,
											"end": 7197,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7160,
											"end": 7197,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7252,
											"end": 7256,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7234,
											"end": 7257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7234,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 7264,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 7264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 7264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 7264,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7270,
											"end": 7424,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 7270,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7344,
											"end": 7347,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7331,
											"end": 7361,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 7416,
											"end": 7417,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7402,
											"end": 7405,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7398,
											"end": 7414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7391,
											"end": 7418,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7270,
											"end": 7424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7270,
											"end": 7424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7270,
											"end": 7424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7270,
											"end": 7424,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7513,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 7549,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7549,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 7549,
											"end": 7598,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7598,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 7549,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7533,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 7533,
											"end": 7599,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7533,
											"end": 7599,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 7533,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7524,
											"end": 7599,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7524,
											"end": 7599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7615,
											"end": 7620,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7608,
											"end": 7629,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7660,
											"end": 7664,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7698,
											"end": 7701,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7684,
											"end": 7687,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7680,
											"end": 7696,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7677,
											"end": 7702,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7674,
											"end": 7786,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7674,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 7674,
											"end": 7786,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7705,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 7705,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 7705,
											"end": 7784,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7705,
											"end": 7784,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 7705,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7674,
											"end": 7786,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 7674,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7795,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 7829,
											"end": 7835,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7824,
											"end": 7827,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 7822,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7795,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 7795,
											"end": 7836,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7795,
											"end": 7836,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 7795,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7842,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7918,
											"end": 7923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7952,
											"end": 7958,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7948,
											"end": 7965,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7944,
											"end": 7971,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7934,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 7934,
											"end": 8056,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7934,
											"end": 8056,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 7934,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8079,
											"end": 8099,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8117,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 8192,
											"end": 8195,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8184,
											"end": 8190,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8181,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8182,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8117,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 8117,
											"end": 8196,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8196,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 8117,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8108,
											"end": 8196,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8108,
											"end": 8196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7924,
											"end": 8202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 8202,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8328,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8314,
											"end": 8323,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8305,
											"end": 8312,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8301,
											"end": 8324,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8297,
											"end": 8329,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8294,
											"end": 8413,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8294,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 8294,
											"end": 8413,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8332,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 8332,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 8332,
											"end": 8411,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8332,
											"end": 8411,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 8332,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8294,
											"end": 8413,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 8294,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8480,
											"end": 8481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8478,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8465,
											"end": 8482,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8452,
											"end": 8483,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8499,
											"end": 8529,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8613,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 8496,
											"end": 8613,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8532,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 8532,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 8532,
											"end": 8611,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8532,
											"end": 8611,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 8532,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8496,
											"end": 8613,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 8496,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 8692,
											"end": 8699,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8683,
											"end": 8689,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8672,
											"end": 8681,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8668,
											"end": 8690,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 8637,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8627,
											"end": 8700,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8627,
											"end": 8700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8423,
											"end": 8710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8208,
											"end": 8717,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8791,
											"end": 8797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8805,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8845,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8827,
											"end": 8834,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8846,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8819,
											"end": 8851,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8816,
											"end": 8935,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8816,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 8816,
											"end": 8935,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 8854,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 8854,
											"end": 8933,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8854,
											"end": 8933,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 8854,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8816,
											"end": 8935,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 8816,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8974,
											"end": 8975,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 9044,
											"end": 9051,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9042,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8999,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 8999,
											"end": 9052,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8999,
											"end": 9052,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 8999,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8989,
											"end": 9052,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8989,
											"end": 9052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8945,
											"end": 9062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9101,
											"end": 9103,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 9172,
											"end": 9179,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9163,
											"end": 9169,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9152,
											"end": 9161,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9170,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9127,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 9127,
											"end": 9180,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9127,
											"end": 9180,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 9127,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9117,
											"end": 9180,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9117,
											"end": 9180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9072,
											"end": 9190,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 9197,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9203,
											"end": 9321,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 9203,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 9308,
											"end": 9313,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9285,
											"end": 9288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9315,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9203,
											"end": 9321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9203,
											"end": 9321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9203,
											"end": 9321,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9420,
											"end": 9424,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9460,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9447,
											"end": 9456,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9435,
											"end": 9461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9528,
											"end": 9537,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9524,
											"end": 9541,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9515,
											"end": 9521,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9327,
											"end": 9549,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9555,
											"end": 9660,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 9555,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9627,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9653,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 9639,
											"end": 9653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9639,
											"end": 9653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9660,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9660,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9764,
											"end": 9775,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9804,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9666,
											"end": 9810,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9816,
											"end": 9915,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 9816,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9882,
											"end": 9886,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9897,
											"end": 9908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9897,
											"end": 9908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9915,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9915,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9915,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9915,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9921,
											"end": 10029,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 9921,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9998,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 10016,
											"end": 10021,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9998,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 9998,
											"end": 10022,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 10022,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 9998,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9993,
											"end": 9996,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10023,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9921,
											"end": 10029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9921,
											"end": 10029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9921,
											"end": 10029,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10159,
											"end": 10165,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 10125,
											"end": 10171,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10125,
											"end": 10171,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 10125,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10203,
											"end": 10207,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10198,
											"end": 10201,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10194,
											"end": 10208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10180,
											"end": 10208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10180,
											"end": 10208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10214,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10220,
											"end": 10332,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 10220,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10289,
											"end": 10293,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10325,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10319,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10326,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10332,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10332,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10372,
											"end": 11072,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 10372,
											"end": 11072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10510,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 10557,
											"end": 10562,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10510,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 10510,
											"end": 10563,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10510,
											"end": 10563,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 10510,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 10657,
											"end": 10663,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10652,
											"end": 10655,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 10579,
											"end": 10664,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10579,
											"end": 10664,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 10579,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10664,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10688,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 10737,
											"end": 10742,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10688,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 10688,
											"end": 10743,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10688,
											"end": 10743,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 10688,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10766,
											"end": 10773,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10797,
											"end": 10798,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10807,
											"end": 10813,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10814,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10883,
											"end": 10889,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10877,
											"end": 10890,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10910,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 10969,
											"end": 10972,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10954,
											"end": 10967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10910,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 10910,
											"end": 10973,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10973,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 10910,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10903,
											"end": 10973,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 10903,
											"end": 10973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10996,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 11048,
											"end": 11054,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10996,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 10996,
											"end": 11055,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10996,
											"end": 11055,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 10996,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10986,
											"end": 11055,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10986,
											"end": 11055,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10842,
											"end": 11065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10829,
											"end": 10830,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10822,
											"end": 10831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10817,
											"end": 10831,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10817,
											"end": 10831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 10782,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10786,
											"end": 10800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 11072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 11072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10486,
											"end": 11072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10372,
											"end": 11072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10372,
											"end": 11072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10372,
											"end": 11072,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11219,
											"end": 11223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11257,
											"end": 11260,
											"name": "PUSH",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 11246,
											"end": 11255,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11234,
											"end": 11261,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11234,
											"end": 11261,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11271,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 11387,
											"end": 11388,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 11385,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11372,
											"end": 11389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11363,
											"end": 11369,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11271,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 11271,
											"end": 11390,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11271,
											"end": 11390,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 11271,
											"end": 11390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11397,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11487,
											"end": 11498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11516,
											"end": 11519,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11561,
											"end": 11565,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11556,
											"end": 11559,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11552,
											"end": 11566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11537,
											"end": 11566,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11537,
											"end": 11566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11403,
											"end": 11572,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11578,
											"end": 11812,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 11578,
											"end": 11812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11718,
											"end": 11752,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11706,
											"end": 11712,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11702,
											"end": 11716,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11695,
											"end": 11753,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "PUSH",
											"source": 14,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11770,
											"end": 11785,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11763,
											"end": 11805,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11578,
											"end": 11812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11578,
											"end": 11812,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11818,
											"end": 12184,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 11818,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11960,
											"end": 11963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11981,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 12045,
											"end": 12047,
											"name": "PUSH",
											"source": 14,
											"value": "2F"
										},
										{
											"begin": 12040,
											"end": 12043,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11981,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 11981,
											"end": 12048,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11981,
											"end": 12048,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 11981,
											"end": 12048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11974,
											"end": 12048,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11974,
											"end": 12048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12057,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 12146,
											"end": 12149,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12057,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 12057,
											"end": 12150,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12057,
											"end": 12150,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 12057,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12175,
											"end": 12177,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12170,
											"end": 12173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12166,
											"end": 12178,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12159,
											"end": 12178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12159,
											"end": 12178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11818,
											"end": 12184,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11818,
											"end": 12184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11818,
											"end": 12184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11818,
											"end": 12184,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12190,
											"end": 12609,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 12190,
											"end": 12609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12356,
											"end": 12360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12394,
											"end": 12396,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12392,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12397,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12443,
											"end": 12452,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12437,
											"end": 12441,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12433,
											"end": 12453,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12429,
											"end": 12430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12418,
											"end": 12427,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12431,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12454,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12471,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 12597,
											"end": 12601,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12471,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 12471,
											"end": 12602,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12471,
											"end": 12602,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 12471,
											"end": 12602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12463,
											"end": 12602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12463,
											"end": 12602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12609,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12190,
											"end": 12609,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12615,
											"end": 12781,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 12615,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12755,
											"end": 12773,
											"name": "PUSH",
											"source": 14,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 12751,
											"end": 12752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12739,
											"end": 12753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12732,
											"end": 12774,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12615,
											"end": 12781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12615,
											"end": 12781,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12787,
											"end": 13153,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 12787,
											"end": 13153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12929,
											"end": 12932,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12950,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 13014,
											"end": 13016,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 13009,
											"end": 13012,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12950,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 12950,
											"end": 13017,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12950,
											"end": 13017,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 12950,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12943,
											"end": 13017,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12943,
											"end": 13017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13026,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 13115,
											"end": 13118,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13026,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 13026,
											"end": 13119,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13026,
											"end": 13119,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 13026,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13144,
											"end": 13146,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13139,
											"end": 13142,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13135,
											"end": 13147,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13128,
											"end": 13147,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13128,
											"end": 13147,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 13153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 13153,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 13153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 13153,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13159,
											"end": 13578,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 13159,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13325,
											"end": 13329,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13363,
											"end": 13365,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13352,
											"end": 13361,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13340,
											"end": 13366,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13340,
											"end": 13366,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13412,
											"end": 13421,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13406,
											"end": 13410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13402,
											"end": 13422,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13398,
											"end": 13399,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13387,
											"end": 13396,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13383,
											"end": 13400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13440,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 13566,
											"end": 13570,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13440,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 13440,
											"end": 13571,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13440,
											"end": 13571,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 13440,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13432,
											"end": 13571,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13432,
											"end": 13571,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13159,
											"end": 13578,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13159,
											"end": 13578,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13159,
											"end": 13578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13159,
											"end": 13578,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13733,
											"end": 13737,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13771,
											"end": 13773,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13760,
											"end": 13769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 13774,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13748,
											"end": 13774,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13748,
											"end": 13774,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13784,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 13852,
											"end": 13853,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13841,
											"end": 13850,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 13854,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13828,
											"end": 13834,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13784,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 13784,
											"end": 13855,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13784,
											"end": 13855,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 13784,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 13933,
											"end": 13935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13922,
											"end": 13931,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13918,
											"end": 13936,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13909,
											"end": 13915,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 13865,
											"end": 13937,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13865,
											"end": 13937,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 13865,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13947,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 14015,
											"end": 14017,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14004,
											"end": 14013,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14000,
											"end": 14018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13991,
											"end": 13997,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13947,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 13947,
											"end": 14019,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13947,
											"end": 14019,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 13947,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 14026,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14032,
											"end": 14148,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 14032,
											"end": 14148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14102,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 14117,
											"end": 14122,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14102,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 14102,
											"end": 14123,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14102,
											"end": 14123,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 14102,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14100,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14092,
											"end": 14124,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 14082,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 14082,
											"end": 14142,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14138,
											"end": 14139,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14135,
											"end": 14136,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14128,
											"end": 14140,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14082,
											"end": 14142,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 14082,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14032,
											"end": 14148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14032,
											"end": 14148,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14208,
											"end": 14213,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14245,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14233,
											"end": 14246,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14224,
											"end": 14246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14255,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 14279,
											"end": 14284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14255,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 14255,
											"end": 14285,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14255,
											"end": 14285,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 14255,
											"end": 14285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14291,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14364,
											"end": 14370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14415,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14401,
											"end": 14410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14392,
											"end": 14399,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14388,
											"end": 14411,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14384,
											"end": 14416,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14381,
											"end": 14500,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14381,
											"end": 14500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 14381,
											"end": 14500,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14419,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 14419,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 14419,
											"end": 14498,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14419,
											"end": 14498,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 14419,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14381,
											"end": 14500,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 14381,
											"end": 14500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14564,
											"end": 14625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 14617,
											"end": 14624,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14608,
											"end": 14614,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14597,
											"end": 14606,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14593,
											"end": 14615,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14564,
											"end": 14625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 14564,
											"end": 14625,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14564,
											"end": 14625,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 14564,
											"end": 14625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14554,
											"end": 14625,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14554,
											"end": 14625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14510,
											"end": 14635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14297,
											"end": 14642,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14648,
											"end": 14747,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 14648,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14700,
											"end": 14706,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14734,
											"end": 14739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14740,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 14740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14718,
											"end": 14740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14648,
											"end": 14747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14648,
											"end": 14747,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14648,
											"end": 14747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14648,
											"end": 14747,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14753,
											"end": 15060,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 14753,
											"end": 15060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14821,
											"end": 14822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14845,
											"end": 14851,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14842,
											"end": 14843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14839,
											"end": 14852,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14930,
											"end": 14931,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14925,
											"end": 14928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14921,
											"end": 14932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14915,
											"end": 14933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14911,
											"end": 14912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14906,
											"end": 14909,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14902,
											"end": 14913,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14895,
											"end": 14934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14867,
											"end": 14869,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14860,
											"end": 14870,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14855,
											"end": 14870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14855,
											"end": 14870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 14831,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14962,
											"end": 14968,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14959,
											"end": 14960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 15054,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 15054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 14953,
											"end": 15054,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15042,
											"end": 15043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15033,
											"end": 15039,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15028,
											"end": 15031,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15024,
											"end": 15040,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15017,
											"end": 15044,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 15054,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 14953,
											"end": 15054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14802,
											"end": 15060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14753,
											"end": 15060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14753,
											"end": 15060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14753,
											"end": 15060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14753,
											"end": 15060,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15157,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15182,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 15215,
											"end": 15220,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15182,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 15182,
											"end": 15221,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15182,
											"end": 15221,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 15182,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15237,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 15301,
											"end": 15307,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15296,
											"end": 15299,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15237,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 15237,
											"end": 15308,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15237,
											"end": 15308,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 15237,
											"end": 15308,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15230,
											"end": 15308,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15230,
											"end": 15308,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15317,
											"end": 15369,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 15362,
											"end": 15368,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15357,
											"end": 15360,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15350,
											"end": 15354,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15343,
											"end": 15348,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15339,
											"end": 15355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15317,
											"end": 15369,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 15317,
											"end": 15369,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15317,
											"end": 15369,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 15317,
											"end": 15369,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15394,
											"end": 15423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 15416,
											"end": 15422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15394,
											"end": 15423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 15394,
											"end": 15423,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15394,
											"end": 15423,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 15394,
											"end": 15423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15392,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15385,
											"end": 15424,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15378,
											"end": 15424,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15378,
											"end": 15424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15158,
											"end": 15430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15066,
											"end": 15430,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15577,
											"end": 15581,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15617,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15604,
											"end": 15613,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15600,
											"end": 15618,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15592,
											"end": 15618,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15592,
											"end": 15618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15628,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 15696,
											"end": 15697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15685,
											"end": 15694,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15681,
											"end": 15698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15678,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15628,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 15628,
											"end": 15699,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15628,
											"end": 15699,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 15628,
											"end": 15699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15746,
											"end": 15755,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15736,
											"end": 15756,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15731,
											"end": 15733,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15709,
											"end": 15757,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15774,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 15847,
											"end": 15851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15774,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 15774,
											"end": 15852,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15774,
											"end": 15852,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 15774,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15766,
											"end": 15852,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15766,
											"end": 15852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15436,
											"end": 15859,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15922,
											"end": 15927,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15953,
											"end": 15959,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15947,
											"end": 15960,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15938,
											"end": 15960,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15938,
											"end": 15960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15969,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 15996,
											"end": 16001,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15969,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 15969,
											"end": 16002,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15969,
											"end": 16002,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 15969,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15865,
											"end": 16008,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16084,
											"end": 16090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16133,
											"end": 16135,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16121,
											"end": 16130,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16119,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16108,
											"end": 16131,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16104,
											"end": 16136,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16101,
											"end": 16220,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16101,
											"end": 16220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 16101,
											"end": 16220,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16139,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 16139,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 16139,
											"end": 16218,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16139,
											"end": 16218,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 16139,
											"end": 16218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16101,
											"end": 16220,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 16101,
											"end": 16220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16284,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 16340,
											"end": 16347,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16331,
											"end": 16337,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16320,
											"end": 16329,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16316,
											"end": 16338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16284,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 16284,
											"end": 16348,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16284,
											"end": 16348,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 16284,
											"end": 16348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16274,
											"end": 16348,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16274,
											"end": 16348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16230,
											"end": 16358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16014,
											"end": 16365,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16548,
											"end": 16552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16586,
											"end": 16589,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 16575,
											"end": 16584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16571,
											"end": 16590,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16600,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16657,
											"end": 16666,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16644,
											"end": 16650,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16600,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 16600,
											"end": 16671,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16600,
											"end": 16671,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 16600,
											"end": 16671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16681,
											"end": 16753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 16749,
											"end": 16751,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16738,
											"end": 16747,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16734,
											"end": 16752,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16725,
											"end": 16731,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16681,
											"end": 16753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 16681,
											"end": 16753,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16681,
											"end": 16753,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 16681,
											"end": 16753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16763,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 16831,
											"end": 16833,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16820,
											"end": 16829,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16816,
											"end": 16834,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16807,
											"end": 16813,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16763,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 16763,
											"end": 16835,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16763,
											"end": 16835,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 16763,
											"end": 16835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16845,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 16913,
											"end": 16915,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16902,
											"end": 16911,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16898,
											"end": 16916,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16889,
											"end": 16895,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16845,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 16845,
											"end": 16917,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16845,
											"end": 16917,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 16845,
											"end": 16917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16924,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16930,
											"end": 17016,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 16930,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16965,
											"end": 16972,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17005,
											"end": 17009,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 16998,
											"end": 17003,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16994,
											"end": 17010,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 16983,
											"end": 17010,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16983,
											"end": 17010,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16930,
											"end": 17016,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16930,
											"end": 17016,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16930,
											"end": 17016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16930,
											"end": 17016,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17022,
											"end": 17202,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 17022,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17070,
											"end": 17147,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17067,
											"end": 17068,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17060,
											"end": 17148,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17167,
											"end": 17171,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 17164,
											"end": 17165,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17191,
											"end": 17195,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17188,
											"end": 17189,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17181,
											"end": 17196,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17238,
											"end": 17239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17255,
											"end": 17273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 17271,
											"end": 17272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17255,
											"end": 17273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 17255,
											"end": 17273,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17255,
											"end": 17273,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 17255,
											"end": 17273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17250,
											"end": 17273,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17250,
											"end": 17273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17287,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 17303,
											"end": 17304,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17287,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 17287,
											"end": 17305,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17287,
											"end": 17305,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 17287,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17305,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17305,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17324,
											"end": 17325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17314,
											"end": 17349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 17314,
											"end": 17349,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17314,
											"end": 17349,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 17314,
											"end": 17349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17370,
											"end": 17371,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17367,
											"end": 17368,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17363,
											"end": 17372,
											"name": "MOD",
											"source": 14
										},
										{
											"begin": 17358,
											"end": 17372,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17358,
											"end": 17372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17378,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17384,
											"end": 17564,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 17384,
											"end": 17564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17432,
											"end": 17509,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17429,
											"end": 17430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17510,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17529,
											"end": 17533,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 17526,
											"end": 17527,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 17519,
											"end": 17534,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17553,
											"end": 17557,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17550,
											"end": 17551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17543,
											"end": 17558,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17570,
											"end": 17672,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 17570,
											"end": 17672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17612,
											"end": 17620,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17659,
											"end": 17664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17656,
											"end": 17657,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17652,
											"end": 17665,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 17631,
											"end": 17665,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17631,
											"end": 17665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17570,
											"end": 17672,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17570,
											"end": 17672,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17570,
											"end": 17672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17570,
											"end": 17672,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17739,
											"end": 17744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17746,
											"end": 17750,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17770,
											"end": 17776,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17761,
											"end": 17776,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17761,
											"end": 17776,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17794,
											"end": 17799,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17785,
											"end": 17799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17785,
											"end": 17799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17829,
											"end": 17830,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17819,
											"end": 17827,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17816,
											"end": 17831,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17924,
											"end": 17928,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 17922,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17915,
											"end": 17929,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 17909,
											"end": 17913,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17906,
											"end": 17930,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17903,
											"end": 17953,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17903,
											"end": 17953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 17903,
											"end": 17953,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17933,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 17933,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 17933,
											"end": 17951,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17933,
											"end": 17951,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 17933,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17903,
											"end": 17953,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 17903,
											"end": 17953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 17984,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17973,
											"end": 17981,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17969,
											"end": 17985,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17966,
											"end": 18417,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17966,
											"end": 18417,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 17966,
											"end": 18417,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18398,
											"end": 18402,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18391,
											"end": 18396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18387,
											"end": 18403,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18378,
											"end": 18403,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18378,
											"end": 18403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17966,
											"end": 18417,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 17966,
											"end": 18417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18448,
											"end": 18452,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18442,
											"end": 18446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18438,
											"end": 18453,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18430,
											"end": 18453,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18430,
											"end": 18453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18478,
											"end": 18510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 18501,
											"end": 18509,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18478,
											"end": 18510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 18478,
											"end": 18510,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18478,
											"end": 18510,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 18478,
											"end": 18510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18466,
											"end": 18510,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 18466,
											"end": 18510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 17808,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17678,
											"end": 18526,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18586,
											"end": 18591,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18777,
											"end": 18785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18767,
											"end": 18807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 18767,
											"end": 18807,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18798,
											"end": 18799,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18789,
											"end": 18799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18789,
											"end": 18799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18800,
											"end": 18805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 18800,
											"end": 18805,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18767,
											"end": 18807,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 18767,
											"end": 18807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 18830,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18816,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 18816,
											"end": 18852,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18843,
											"end": 18844,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18834,
											"end": 18844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18834,
											"end": 18844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18845,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 18845,
											"end": 18850,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18816,
											"end": 18852,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 18816,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 18916,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18960,
											"end": 18961,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18955,
											"end": 18982,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18955,
											"end": 18982,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18955,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 18955,
											"end": 18982,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18991,
											"end": 19182,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19182,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 18991,
											"end": 19182,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18905,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 18905,
											"end": 19182,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18955,
											"end": 18982,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 18955,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18973,
											"end": 18974,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 18964,
											"end": 18974,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18964,
											"end": 18974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18975,
											"end": 18980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18975,
											"end": 18980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 18975,
											"end": 18980,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19182,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 18991,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19036,
											"end": 19039,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 19026,
											"end": 19034,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19023,
											"end": 19040,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19020,
											"end": 19063,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19020,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 19020,
											"end": 19063,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19043,
											"end": 19061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 19043,
											"end": 19061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 19043,
											"end": 19061,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19043,
											"end": 19061,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 19043,
											"end": 19061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19020,
											"end": 19063,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 19020,
											"end": 19063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19092,
											"end": 19100,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19089,
											"end": 19090,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 19085,
											"end": 19101,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 19076,
											"end": 19101,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19076,
											"end": 19101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19127,
											"end": 19130,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19120,
											"end": 19125,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19117,
											"end": 19131,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19114,
											"end": 19154,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19114,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 19114,
											"end": 19154,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 19134,
											"end": 19152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19114,
											"end": 19154,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 19114,
											"end": 19154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19167,
											"end": 19172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19167,
											"end": 19172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 19167,
											"end": 19172,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18905,
											"end": 19182,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 18905,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18905,
											"end": 19182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19291,
											"end": 19293,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19281,
											"end": 19289,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19278,
											"end": 19294,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 19272,
											"end": 19275,
											"name": "PUSH",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 19266,
											"end": 19270,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19263,
											"end": 19276,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 19259,
											"end": 19295,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 19241,
											"end": 19243,
											"name": "PUSH",
											"source": 14,
											"value": "4E"
										},
										{
											"begin": 19231,
											"end": 19239,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19228,
											"end": 19244,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 19223,
											"end": 19225,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 19217,
											"end": 19221,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19214,
											"end": 19226,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 19210,
											"end": 19245,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 19194,
											"end": 19305,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 19191,
											"end": 19437,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19191,
											"end": 19437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 19191,
											"end": 19437,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19347,
											"end": 19355,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19341,
											"end": 19345,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19337,
											"end": 19356,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 19328,
											"end": 19356,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19328,
											"end": 19356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19382,
											"end": 19385,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19375,
											"end": 19380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19372,
											"end": 19386,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19369,
											"end": 19409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19369,
											"end": 19409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 19369,
											"end": 19409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19369,
											"end": 19409,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 19369,
											"end": 19409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19422,
											"end": 19427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 19422,
											"end": 19427,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19191,
											"end": 19437,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 19191,
											"end": 19437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19462,
											"end": 19504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 19500,
											"end": 19503,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19490,
											"end": 19498,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19484,
											"end": 19488,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19481,
											"end": 19482,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 19462,
											"end": 19504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 19462,
											"end": 19504,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19462,
											"end": 19504,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 19462,
											"end": 19504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19504,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19504,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19536,
											"end": 19540,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19531,
											"end": 19534,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19527,
											"end": 19541,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 19520,
											"end": 19525,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19517,
											"end": 19542,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19514,
											"end": 19565,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19514,
											"end": 19565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 19514,
											"end": 19565,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19545,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 19545,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 19545,
											"end": 19563,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19545,
											"end": 19563,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 19545,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19514,
											"end": 19565,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 19514,
											"end": 19565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19598,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19587,
											"end": 19592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19583,
											"end": 19599,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 19574,
											"end": 19599,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19574,
											"end": 19599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18532,
											"end": 19605,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19669,
											"end": 19674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19693,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 19711,
											"end": 19715,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19693,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 19693,
											"end": 19716,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19693,
											"end": 19716,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 19693,
											"end": 19716,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19685,
											"end": 19716,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19685,
											"end": 19716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19737,
											"end": 19762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 19753,
											"end": 19761,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19737,
											"end": 19762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 19737,
											"end": 19762,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19737,
											"end": 19762,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 19737,
											"end": 19762,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19781,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 19818,
											"end": 19884,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19808,
											"end": 19816,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19802,
											"end": 19806,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19781,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 19781,
											"end": 19885,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19781,
											"end": 19885,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 19781,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19772,
											"end": 19885,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19772,
											"end": 19885,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19611,
											"end": 19892,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 19898,
											"end": 20078,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 19898,
											"end": 20078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19946,
											"end": 20023,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19943,
											"end": 19944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19936,
											"end": 20024,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20043,
											"end": 20047,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 20040,
											"end": 20041,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 20033,
											"end": 20048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20067,
											"end": 20071,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 20064,
											"end": 20065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20057,
											"end": 20072,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20124,
											"end": 20131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20147,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 20165,
											"end": 20166,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20147,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 20147,
											"end": 20167,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20147,
											"end": 20167,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 20147,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20142,
											"end": 20167,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20142,
											"end": 20167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 20199,
											"end": 20200,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 20181,
											"end": 20201,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20181,
											"end": 20201,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 20181,
											"end": 20201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20176,
											"end": 20201,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20176,
											"end": 20201,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20369,
											"end": 20370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20301,
											"end": 20367,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20297,
											"end": 20371,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 20294,
											"end": 20295,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20291,
											"end": 20372,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 20286,
											"end": 20287,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20279,
											"end": 20288,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20272,
											"end": 20289,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20268,
											"end": 20373,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 20265,
											"end": 20396,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20265,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 20265,
											"end": 20396,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20376,
											"end": 20394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 20376,
											"end": 20394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 20376,
											"end": 20394,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20376,
											"end": 20394,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 20376,
											"end": 20394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20265,
											"end": 20396,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 20265,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20424,
											"end": 20425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20421,
											"end": 20422,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20417,
											"end": 20426,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 20406,
											"end": 20426,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20406,
											"end": 20426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20084,
											"end": 20432,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20476,
											"end": 20477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20493,
											"end": 20511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 20509,
											"end": 20510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20493,
											"end": 20511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 20493,
											"end": 20511,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20493,
											"end": 20511,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 20493,
											"end": 20511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20488,
											"end": 20511,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20488,
											"end": 20511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20525,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 20541,
											"end": 20542,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20525,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 20525,
											"end": 20543,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20525,
											"end": 20543,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 20525,
											"end": 20543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20543,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20520,
											"end": 20543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20562,
											"end": 20563,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20552,
											"end": 20587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 20552,
											"end": 20587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20567,
											"end": 20585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 20567,
											"end": 20585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 20567,
											"end": 20585,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20567,
											"end": 20585,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 20567,
											"end": 20585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20552,
											"end": 20587,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 20552,
											"end": 20587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20609,
											"end": 20610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20606,
											"end": 20607,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20602,
											"end": 20611,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20611,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20611,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20438,
											"end": 20617,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20663,
											"end": 20666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 20700,
											"end": 20701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20677,
											"end": 20702,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20677,
											"end": 20702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20716,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 20734,
											"end": 20735,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20716,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 20716,
											"end": 20736,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20716,
											"end": 20736,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 20716,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20711,
											"end": 20736,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20711,
											"end": 20736,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20870,
											"end": 20871,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20802,
											"end": 20868,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20798,
											"end": 20872,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20795,
											"end": 20796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20792,
											"end": 20873,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 20789,
											"end": 20896,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20789,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 20789,
											"end": 20896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20876,
											"end": 20894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 20876,
											"end": 20894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 20876,
											"end": 20894,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20876,
											"end": 20894,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 20876,
											"end": 20894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20789,
											"end": 20896,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 20789,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20920,
											"end": 20921,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20917,
											"end": 20918,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20913,
											"end": 20922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20906,
											"end": 20922,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20906,
											"end": 20922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20623,
											"end": 20928,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 20934,
											"end": 21101,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 20934,
											"end": 21101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20971,
											"end": 20974,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20994,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 21010,
											"end": 21015,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20994,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 20994,
											"end": 21016,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 20994,
											"end": 21016,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 20994,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21038,
											"end": 21042,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 21031,
											"end": 21036,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21028,
											"end": 21043,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21025,
											"end": 21066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 21025,
											"end": 21066,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21046,
											"end": 21064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 21046,
											"end": 21064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 21046,
											"end": 21064,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21046,
											"end": 21064,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 21046,
											"end": 21064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21025,
											"end": 21066,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 21025,
											"end": 21066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21093,
											"end": 21094,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21086,
											"end": 21091,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21082,
											"end": 21095,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21075,
											"end": 21095,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21075,
											"end": 21095,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21101,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21101,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21101,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20934,
											"end": 21101,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21107,
											"end": 21278,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 21107,
											"end": 21278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21247,
											"end": 21270,
											"name": "PUSH",
											"source": 14,
											"value": "4D7573742062652076616C69642070657263656E740000000000000000000000"
										},
										{
											"begin": 21243,
											"end": 21244,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21235,
											"end": 21241,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21224,
											"end": 21271,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21107,
											"end": 21278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21107,
											"end": 21278,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21284,
											"end": 21650,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 21284,
											"end": 21650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21426,
											"end": 21429,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21447,
											"end": 21514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 21511,
											"end": 21513,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 21506,
											"end": 21509,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21447,
											"end": 21514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 21447,
											"end": 21514,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21447,
											"end": 21514,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 21447,
											"end": 21514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21440,
											"end": 21514,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21440,
											"end": 21514,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21523,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 21612,
											"end": 21615,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21523,
											"end": 21616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 21523,
											"end": 21616,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21523,
											"end": 21616,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 21523,
											"end": 21616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21641,
											"end": 21643,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21636,
											"end": 21639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21632,
											"end": 21644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21625,
											"end": 21644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21284,
											"end": 21650,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21284,
											"end": 21650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21284,
											"end": 21650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21284,
											"end": 21650,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 21656,
											"end": 22075,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 21656,
											"end": 22075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21822,
											"end": 21826,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21860,
											"end": 21862,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21849,
											"end": 21858,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21845,
											"end": 21863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21837,
											"end": 21863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21837,
											"end": 21863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21909,
											"end": 21918,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21903,
											"end": 21907,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21899,
											"end": 21919,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21895,
											"end": 21896,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21884,
											"end": 21893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21880,
											"end": 21897,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21873,
											"end": 21920,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21937,
											"end": 22068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 22063,
											"end": 22067,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21937,
											"end": 22068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 21937,
											"end": 22068,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 21937,
											"end": 22068,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 21937,
											"end": 22068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21929,
											"end": 22068,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21929,
											"end": 22068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21656,
											"end": 22075,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21656,
											"end": 22075,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21656,
											"end": 22075,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21656,
											"end": 22075,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22202,
											"end": 22206,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22240,
											"end": 22242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22229,
											"end": 22238,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22225,
											"end": 22243,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22217,
											"end": 22243,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22217,
											"end": 22243,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22253,
											"end": 22324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 22321,
											"end": 22322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22310,
											"end": 22319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22306,
											"end": 22323,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22297,
											"end": 22303,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22253,
											"end": 22324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 22253,
											"end": 22324,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22253,
											"end": 22324,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 22253,
											"end": 22324,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 22402,
											"end": 22404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22391,
											"end": 22400,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22387,
											"end": 22405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22378,
											"end": 22384,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 22334,
											"end": 22406,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22334,
											"end": 22406,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 22334,
											"end": 22406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22081,
											"end": 22413,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22521,
											"end": 22532,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22558,
											"end": 22561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22543,
											"end": 22561,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22543,
											"end": 22561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22419,
											"end": 22567,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22573,
											"end": 22746,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 22573,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22713,
											"end": 22738,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 22709,
											"end": 22710,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22701,
											"end": 22707,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22697,
											"end": 22711,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22690,
											"end": 22739,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22573,
											"end": 22746,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22573,
											"end": 22746,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 22752,
											"end": 23154,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 22752,
											"end": 23154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22912,
											"end": 22915,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22933,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 23015,
											"end": 23017,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 23010,
											"end": 23013,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22933,
											"end": 23018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 22933,
											"end": 23018,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 22933,
											"end": 23018,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 22933,
											"end": 23018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22926,
											"end": 23018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22926,
											"end": 23018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23027,
											"end": 23120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 23116,
											"end": 23119,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23027,
											"end": 23120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 23027,
											"end": 23120,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23027,
											"end": 23120,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 23027,
											"end": 23120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23145,
											"end": 23147,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 23140,
											"end": 23143,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23136,
											"end": 23148,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23129,
											"end": 23148,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23129,
											"end": 23148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22752,
											"end": 23154,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22752,
											"end": 23154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22752,
											"end": 23154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22752,
											"end": 23154,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23266,
											"end": 23269,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23294,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 23327,
											"end": 23332,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23294,
											"end": 23333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 23294,
											"end": 23333,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23294,
											"end": 23333,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 23294,
											"end": 23333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23349,
											"end": 23438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23426,
											"end": 23429,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23349,
											"end": 23438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 23349,
											"end": 23438,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23349,
											"end": 23438,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 23349,
											"end": 23438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23438,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23447,
											"end": 23499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 23492,
											"end": 23498,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23487,
											"end": 23490,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23480,
											"end": 23484,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23473,
											"end": 23478,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23485,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23447,
											"end": 23499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 23447,
											"end": 23499,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23447,
											"end": 23499,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 23447,
											"end": 23499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23524,
											"end": 23530,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 23519,
											"end": 23522,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23515,
											"end": 23531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23508,
											"end": 23531,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23508,
											"end": 23531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23270,
											"end": 23537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23160,
											"end": 23537,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23543,
											"end": 23710,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 23543,
											"end": 23710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23683,
											"end": 23702,
											"name": "PUSH",
											"source": 14,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 23679,
											"end": 23680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23671,
											"end": 23677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23667,
											"end": 23681,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23660,
											"end": 23703,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23543,
											"end": 23710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23543,
											"end": 23710,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 23716,
											"end": 24118,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 23716,
											"end": 24118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23876,
											"end": 23879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23897,
											"end": 23982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 23979,
											"end": 23981,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 23974,
											"end": 23977,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23897,
											"end": 23982,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 23897,
											"end": 23982,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23897,
											"end": 23982,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 23897,
											"end": 23982,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23890,
											"end": 23982,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23890,
											"end": 23982,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23991,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 24080,
											"end": 24083,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23991,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 23991,
											"end": 24084,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 23991,
											"end": 24084,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 23991,
											"end": 24084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24109,
											"end": 24111,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 24104,
											"end": 24107,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24100,
											"end": 24112,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24093,
											"end": 24112,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24093,
											"end": 24112,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23716,
											"end": 24118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23716,
											"end": 24118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23716,
											"end": 24118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23716,
											"end": 24118,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24506,
											"end": 24509,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24528,
											"end": 24676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 24672,
											"end": 24675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24528,
											"end": 24676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 24528,
											"end": 24676,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24528,
											"end": 24676,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 24528,
											"end": 24676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24521,
											"end": 24676,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24521,
											"end": 24676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24693,
											"end": 24788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 24784,
											"end": 24787,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24693,
											"end": 24788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 24693,
											"end": 24788,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24693,
											"end": 24788,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 24693,
											"end": 24788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24686,
											"end": 24788,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24686,
											"end": 24788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24805,
											"end": 24953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 24949,
											"end": 24952,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24805,
											"end": 24953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 24805,
											"end": 24953,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24805,
											"end": 24953,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 24805,
											"end": 24953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24798,
											"end": 24953,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24798,
											"end": 24953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24970,
											"end": 25065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 25061,
											"end": 25064,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25052,
											"end": 25058,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24970,
											"end": 25065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 24970,
											"end": 25065,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 24970,
											"end": 25065,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 24970,
											"end": 25065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24963,
											"end": 25065,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24963,
											"end": 25065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25082,
											"end": 25085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25075,
											"end": 25085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25075,
											"end": 25085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24124,
											"end": 25091,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25210,
											"end": 25214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25248,
											"end": 25250,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25237,
											"end": 25246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25233,
											"end": 25251,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25225,
											"end": 25251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25225,
											"end": 25251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25297,
											"end": 25306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25291,
											"end": 25295,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25287,
											"end": 25307,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25283,
											"end": 25284,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25272,
											"end": 25281,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25268,
											"end": 25285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25261,
											"end": 25308,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25325,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 25398,
											"end": 25402,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25389,
											"end": 25395,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25325,
											"end": 25403,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 25325,
											"end": 25403,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25325,
											"end": 25403,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 25325,
											"end": 25403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25317,
											"end": 25403,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25317,
											"end": 25403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25410,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25416,
											"end": 25587,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 25416,
											"end": 25587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25455,
											"end": 25458,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25478,
											"end": 25502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 25496,
											"end": 25501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25478,
											"end": 25502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 25478,
											"end": 25502,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25478,
											"end": 25502,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 25478,
											"end": 25502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25469,
											"end": 25502,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25469,
											"end": 25502,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25524,
											"end": 25528,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25517,
											"end": 25522,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25514,
											"end": 25529,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25511,
											"end": 25552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 25511,
											"end": 25552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25511,
											"end": 25552,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 25511,
											"end": 25552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25579,
											"end": 25580,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 25572,
											"end": 25577,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25568,
											"end": 25581,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25416,
											"end": 25587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25416,
											"end": 25587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25416,
											"end": 25587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25416,
											"end": 25587,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25593,
											"end": 25775,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 25593,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25733,
											"end": 25767,
											"name": "PUSH",
											"source": 14,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 25729,
											"end": 25730,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25721,
											"end": 25727,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25717,
											"end": 25731,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25710,
											"end": 25768,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25593,
											"end": 25775,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25593,
											"end": 25775,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 25781,
											"end": 26147,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 25781,
											"end": 26147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25923,
											"end": 25926,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25944,
											"end": 26011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 26008,
											"end": 26010,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26003,
											"end": 26006,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25944,
											"end": 26011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 25944,
											"end": 26011,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 25944,
											"end": 26011,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 25944,
											"end": 26011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25937,
											"end": 26011,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25937,
											"end": 26011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26020,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 26109,
											"end": 26112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26020,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 26020,
											"end": 26113,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 26020,
											"end": 26113,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 26020,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26138,
											"end": 26140,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26133,
											"end": 26136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26129,
											"end": 26141,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26122,
											"end": 26141,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26122,
											"end": 26141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25781,
											"end": 26147,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25781,
											"end": 26147,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25781,
											"end": 26147,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25781,
											"end": 26147,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 26153,
											"end": 26572,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 26153,
											"end": 26572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26319,
											"end": 26323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26357,
											"end": 26359,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26346,
											"end": 26355,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26342,
											"end": 26360,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26334,
											"end": 26360,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26334,
											"end": 26360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26406,
											"end": 26415,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26400,
											"end": 26404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26396,
											"end": 26416,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26392,
											"end": 26393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26381,
											"end": 26390,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26377,
											"end": 26394,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26370,
											"end": 26417,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 26560,
											"end": 26564,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 26434,
											"end": 26565,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 26434,
											"end": 26565,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 26434,
											"end": 26565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26426,
											"end": 26565,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26426,
											"end": 26565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26572,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26572,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26572,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"SQFi()": "52c6159f",
							"amount1()": "f400fde4",
							"bytes32ToAmount16(bytes32)": "dd23faf3",
							"createSQFI(string)": "841acc5d",
							"editSQFI(uint256,uint256)": "51d64e64",
							"editSupportedFee(address,uint256)": "945099bc",
							"editUncraftBurnPercent(uint256)": "eb47536a",
							"fee1()": "c6098256",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"maxSQFI()": "13e6b93b",
							"minSQFI()": "683b0ee5",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"runePower(uint256)": "ac6b182d",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uncraft(uint256)": "0a1ac657",
							"uncraftBurnPercent()": "09c9985c",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sqfi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fee1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fee1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"CraftSQFI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"FeeChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"UncraftSQFI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SQFi\",\"outputs\":[{\"internalType\":\"contract ISQFItem\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToAmount16\",\"outputs\":[{\"internalType\":\"uint256[16]\",\"name\":\"amount\",\"type\":\"uint256[16]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"createSQFI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"editSQFI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fee1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"editSupportedFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"editUncraftBurnPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSQFI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSQFI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"runePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uncraft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uncraftBurnPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/SQFI_Factory.sol\":\"ParagonFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/AccessControl.sol\":{\"keccak256\":\"0x850cee2bcf1bbcd0b0a1a3ef8d9ce0ed789b807d8a4c0e2dd5b2b987bef691eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1fb40d0c4deb123b7322f8dbc1635572a628fee2f383a71cf8c0d61b6c669c4\",\"dweb:/ipfs/QmUJC8kZsq69SDDiTp5PoMTEgVzW4pjwHgXW6pbdScMAA9\"]},\"contracts/SQFITEM/Address.sol\":{\"keccak256\":\"0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775\",\"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3\"]},\"contracts/SQFITEM/Context.sol\":{\"keccak256\":\"0x45cb9d70dc84e6f4ec8202a58599a881421174348e0fd4400a99a22678aa7913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640ea1ba9707020a73d52eb62afcc682aa0a502e61378ff2e3ed7be701afcaaf\",\"dweb:/ipfs/QmPup8KPcQQXcz4qz9r1G4ks7bv8jLqrcWNruZyXTto6qy\"]},\"contracts/SQFITEM/ERC165.sol\":{\"keccak256\":\"0x0969c3b761eb3af95a44d2c5b89822572d87441f2ca64d9fa80d7cbab667e42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6fac9609abaa5cab3d96f7ebdae42570f8be9dfd5b8578289ae1aceeaa503b6\",\"dweb:/ipfs/QmX9vGsJP3fgD1W6cVTsp2HFCaD3Gek6ZELT5167eJ2j1T\"]},\"contracts/SQFITEM/IAccessControl.sol\":{\"keccak256\":\"0x287306f447febc349d34d6b1ef445a285370ec0ddac2ede071e447f00b642ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffffd92659e8a50deda3cebb149d697cdc4e9f0b5abfc55d0c2584aeab0cce36\",\"dweb:/ipfs/QmRaiwwYKHxUf4Uy4fWo6qzAkBF7NaeydMrKumP3fXCDRC\"]},\"contracts/SQFITEM/IERC165.sol\":{\"keccak256\":\"0xf09ac5164ff53811c21c1a05f01ca2b1c91edace33903c767d432b68d92dc587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb4595b183a284785cfb2ad533f52a35cca59bbce92e682479b29157fdbe63d\",\"dweb:/ipfs/QmfAgJjE7uj73mLaYjqBE5ba5GanWKFyLEG4qmuYxbZ9zR\"]},\"contracts/SQFITEM/IERC20.sol\":{\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5\",\"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF\"]},\"contracts/SQFITEM/ISQFItem.sol\":{\"keccak256\":\"0x31d36c8072505efbe076b179b7b96a53674c416fbc47f37983428761c657bf59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cc8dc106c41e138684151c204872365446582d080fa7d371b0d47b7d02f740c\",\"dweb:/ipfs/QmU6G8fFxmnCkDWvoGop8hcq7mT2CkCBxu1Mai72q9yztS\"]},\"contracts/SQFITEM/Math.sol\":{\"keccak256\":\"0xef7b3fc139eede8f159d204c982d86775350be2e81b5fecf97731d531223256e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c0ae51ae001dd3028a510d751a8bd473d9c2f99359158817ac4860d3e20b60\",\"dweb:/ipfs/QmYSSmmzH2SHDtVMA5xGHros8cmnVpq3dL9xawkQTGdWm4\"]},\"contracts/SQFITEM/Pausable.sol\":{\"keccak256\":\"0x98503616f3138d6de41a6577dca9f9f38c2a710131f8aaf13f8eceb79097ac27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c69b0682f1fa3fe9485bfaf7de1b1d57d1a9efebab659df8fb56153c42aa1a9\",\"dweb:/ipfs/Qme4MTtDxVE3dm47GeWF65sCycxVF7CVr55aq75cCzq8Be\"]},\"contracts/SQFITEM/SQFI_Factory.sol\":{\"keccak256\":\"0x1652eb507dd70d126369f374cfebbfc95f6ac2f0d710ebcd18fbf97e21a49d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c73a58e6c61263d4eb74790c84ea325324127eae1ed56fa0d53d589adb188795\",\"dweb:/ipfs/QmS8vvj2zzPuoxmxj1aFCsxdjQD8SXVVChBuSLQjSDtofP\"]},\"contracts/SQFITEM/SafeERC20.sol\":{\"keccak256\":\"0x302447efaecd2f0450ed5cba9431977b8be861d4941aae3dbaa8807cd109e7c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec766e155ddbe02a015b5b3963d3bc146d2eb3de7e6936b810c4040515b18fa1\",\"dweb:/ipfs/QmW3dukGtJ2g8pimiHADFd6cbeppqhAimy3pAqSbZnGT5B\"]},\"contracts/SQFITEM/SafeMath.sol\":{\"keccak256\":\"0x7408e0b6e09c3e683d0666d319daaf6f2b4e2b1c063dd9f857c4af5158491021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a9f1585597d72b8b18578a6e6c13f8716e00bd806325babb42db1d12361429\",\"dweb:/ipfs/QmfYUash3a9F22mQWAmH2ZW94nm66hJe8s7jy5xyq5o1q8\"]},\"contracts/SQFITEM/Strings.sol\":{\"keccak256\":\"0x680df08ddcc0584a8172db776bffd1753c893c13bcd18b928e22027ae441b000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637df747e24b006779e7c945cb0f979c60bbd861bae42254b9814762c0dfba4f\",\"dweb:/ipfs/QmPChjSFzHTESQsNycgZ7mPG8Xd31hcZKaTN2VLbiAngC9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 24,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1043,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "SQFi",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ISQFItem)840"
							},
							{
								"astId": 1051,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "uncraftBurnPercent",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1054,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "minSQFI",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "maxSQFI",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1074,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "runePower",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)16_storage"
							},
							{
								"astId": 1076,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "fee1",
								"offset": 0,
								"slot": "22",
								"type": "t_address"
							},
							{
								"astId": 1079,
								"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
								"label": "amount1",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)16_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[16]",
								"numberOfBytes": "512"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ISQFItem)840": {
								"encoding": "inplace",
								"label": "contract ISQFItem",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/SQFITEM/SQFI_Factory.sol:ParagonFactory",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/SafeERC20.sol\":564:3834  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/SafeERC20.sol\":564:3834  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH17 0xDAA3B2B997A2CC1BA30221FC8CBB5681B0 0xA8 ORIGIN 0xC2 0x24 0xD1 BYTE 0xEF DIV MSTORE8 SWAP12 AND DUP6 GT PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "564:3270:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH17 0xDAA3B2B997A2CC1BA30221FC8CBB5681B0 0xA8 ORIGIN 0xC2 0x24 0xD1 BYTE 0xEF DIV MSTORE8 SWAP12 AND DUP6 GT PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "564:3270:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 564,
									"end": 3834,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208870daa3b2b997a2cc1ba30221fc8cbb5681b0a832c224d11aef04539b16851164736f6c634300080d0033",
									".code": [
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 3834,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Address.sol\":{\"keccak256\":\"0xc1202fa69783cb3ea0d87f178cab5e1f3a77de7fc0dff3c47f668f3cd65d9273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8da5de19a08cffb966c1ea9925cd263470a91a65c5cdca9cbc8dfb669dd775\",\"dweb:/ipfs/QmeeDjQ1dPUmQ9CuU77tEYghszLVagP1xoraQJAQJF7Mm3\"]},\"contracts/SQFITEM/IERC20.sol\":{\"keccak256\":\"0xb55c91551ef864f86edd296378fc3430f19798c0d1de468ff772a83a842df24c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f118e5d475795b9e612bb6c139db18493e65f47f181ddcef446f4fa43e7f80f5\",\"dweb:/ipfs/QmSRWmUWxpjp8jMtDHqWysWbZqFNVKAyLHcmBtjJRvmoLF\"]},\"contracts/SQFITEM/SafeERC20.sol\":{\"keccak256\":\"0x302447efaecd2f0450ed5cba9431977b8be861d4941aae3dbaa8807cd109e7c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec766e155ddbe02a015b5b3963d3bc146d2eb3de7e6936b810c4040515b18fa1\",\"dweb:/ipfs/QmW3dukGtJ2g8pimiHADFd6cbeppqhAimy3pAqSbZnGT5B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x910D0FCFC93383B305405490 0xBD ADDMOD 0x4D PUSH2 0xCE37 0x2E 0xA8 CODECOPY 0x4B 0x27 0xE3 0xA6 SLOAD PUSH9 0x1AEB764864736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "398:6301:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x910D0FCFC93383B305405490 0xBD ADDMOD 0x4D PUSH2 0xCE37 0x2E 0xA8 CODECOPY 0x4B 0x27 0xE3 0xA6 SLOAD PUSH9 0x1AEB764864736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "398:6301:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b910d0fcfc93383b305405490bd084d61ce372ea8394b27e3a654681aeb764864736f6c634300080d0033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/SafeMath.sol\":{\"keccak256\":\"0x7408e0b6e09c3e683d0666d319daaf6f2b4e2b1c063dd9f857c4af5158491021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a9f1585597d72b8b18578a6e6c13f8716e00bd806325babb42db1d12361429\",\"dweb:/ipfs/QmfYUash3a9F22mQWAmH2ZW94nm66hJe8s7jy5xyq5o1q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SQFITEM/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SQFITEM/Strings.sol\":93:1978  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SQFITEM/Strings.sol\":93:1978  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 STATICCALL MSTORE 0xBC 0xEB GASLIMIT 0x24 0x4E 0xDB 0xBC DUP13 0xE0 0xDF DUP13 DUP15 0x5C MOD SLT PUSH14 0xDAB02A3A66C88A944447BABA1664 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "93:1885:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 STATICCALL MSTORE 0xBC 0xEB GASLIMIT 0x24 0x4E 0xDB 0xBC DUP13 0xE0 0xDF DUP13 DUP15 0x5C MOD SLT PUSH14 0xDAB02A3A66C88A944447BABA1664 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "93:1885:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 93,
									"end": 1978,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4fa52bceb45244edbbc8ce0df8c8e5c06126ddab02a3a66c88a944447baba1664736f6c634300080d0033",
									".code": [
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 93,
											"end": 1978,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SQFITEM/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SQFITEM/Strings.sol\":{\"keccak256\":\"0x680df08ddcc0584a8172db776bffd1753c893c13bcd18b928e22027ae441b000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637df747e24b006779e7c945cb0f979c60bbd861bae42254b9814762c0dfba4f\",\"dweb:/ipfs/QmPChjSFzHTESQsNycgZ7mPG8Xd31hcZKaTN2VLbiAngC9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SQFITEM/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							306
						],
						"Context": [
							625
						],
						"ERC165": [
							649
						],
						"IAccessControl": [
							722
						],
						"IERC165": [
							734
						],
						"Strings": [
							2090
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/SQFITEM/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 723,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Context.sol",
							"file": "./Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 626,
							"src": "89:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Strings.sol",
							"file": "./Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 2091,
							"src": "113:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 307,
							"sourceUnit": 650,
							"src": "137:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 625,
										"src": "1731:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1731:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "1740:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1740:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "1756:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1756:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "161:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306,
								649,
								734,
								722,
								625
							],
							"name": "AccessControl",
							"nameLocation": "1714:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1820:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1795:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1795:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1845:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1837:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1837:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1776:8:0",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "1769:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "1904:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1867:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1867:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1886:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1886:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "1941:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1917:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1917:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1962:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2385:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2406:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 34,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2412:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2395:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2395:30:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2435:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1973:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2362:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2379:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2371:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:14:0"
									},
									"src": "2353:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2601:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2618:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "2638:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$722_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$722_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2633:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2633:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$722",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2633:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2618:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2693:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2669:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$306_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 648,
															"src": "2669:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2669:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2618:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2611:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2449:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2519:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2577:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2544:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2537:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2594:6:0"
									},
									"scope": 306,
									"src": "2510:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										689
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2883:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2900:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2907:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2900:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2900:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2921:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2900:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2893:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2718:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2808:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2859:8:0"
									},
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2824:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2816:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2838:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2830:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2877:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:0"
									},
									"scope": 306,
									"src": "2799:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3282:419:0",
										"statements": [
											{
												"condition": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3296:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 90,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "3305:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 91,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "3311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 89,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3297:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"nodeType": "IfStatement",
												"src": "3292:403:0",
												"trueBody": {
													"id": 121,
													"nodeType": "Block",
													"src": "3321:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3429:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 104,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 86,
																										"src": "3508:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 103,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3500:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 102,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "3500:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 105,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3500:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 106,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3518:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 100,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2090,
																								"src": "3480:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2090_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2089,
																							"src": "3480:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3480:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 108,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3547:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 113,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 84,
																										"src": "3620:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 112,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3612:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 111,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "3612:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3612:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3627:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 109,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2090,
																								"src": "3592:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2090_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2089,
																							"src": "3592:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3592:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 97,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3387:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 98,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3387:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3387:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 96,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3359:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 95,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3359:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3359:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 94,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3335:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3335:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "3335:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2942:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3226:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3245:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3237:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3259:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:31:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3282:0:0"
									},
									"scope": 306,
									"src": "3217:484:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "3957:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 133,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3974:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 135,
														"indexExpression": {
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "3974:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 132,
												"id": 137,
												"nodeType": "Return",
												"src": "3967:29:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "3707:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3891:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3930:8:0"
									},
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 126,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:14:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:0"
									},
									"scope": 306,
									"src": "3882:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4356:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 155,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 153,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "4366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4366:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "4366:25:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4009:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 149,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4349:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 148,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4336:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4336:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 147,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4327:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4327:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4262:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4318:8:0"
									},
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4280:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4272:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:31:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4356:0:0"
									},
									"scope": 306,
									"src": "4253:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										713
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "4736:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4758:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 175,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "4746:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4746:26:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4404:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 169,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 168,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4716:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4707:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4707:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4641:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4698:8:0"
									},
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "4652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "4666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:31:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4736:0:0"
									},
									"scope": 306,
									"src": "4632:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5347:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "5365:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 190,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "5376:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5376:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5365:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5390:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5357:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "5463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "5469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "5451:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5451:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5451:26:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "4785:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5279:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5338:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5300:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5292:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 181,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5291:31:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5347:0:0"
									},
									"scope": 306,
									"src": "5270:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6117:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "6127:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6127:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "6127:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5490:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6058:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:31:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:0"
									},
									"scope": 306,
									"src": "6049:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6357:174:0",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6375:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "6367:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 224,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6408:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 226,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6395:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6395:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6367:46:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 230,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "6423:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 232,
															"indexExpression": {
																"id": 231,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6430:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6423:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "6423:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "6448:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6423:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "6423:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6489:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 239,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6495:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 240,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "6514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6472:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6472:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "EmitStatement",
												"src": "6467:57:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6165:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6293:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6329:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6321:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:33:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6357:0:0"
									},
									"scope": 306,
									"src": "6284:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "6596:165:0",
										"statements": [
											{
												"condition": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6610:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 252,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "6619:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 253,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "6625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 251,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6611:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"nodeType": "IfStatement",
												"src": "6606:149:0",
												"trueBody": {
													"id": 272,
													"nodeType": "Block",
													"src": "6635:120:0",
													"statements": [
														{
															"expression": {
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 256,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "6649:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 258,
																			"indexExpression": {
																				"id": 257,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 246,
																				"src": "6656:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6649:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "6649:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 261,
																	"indexExpression": {
																		"id": 260,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "6670:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6649:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6681:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6649:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "6649:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 266,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "6716:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 267,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "6722:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 268,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "6731:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6731:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 265,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "6704:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6704:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 271,
															"nodeType": "EmitStatement",
															"src": "6699:45:0"
														}
													]
												}
											}
										]
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6546:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6565:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6557:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6579:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6556:31:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6596:0:0"
									},
									"scope": 306,
									"src": "6537:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "6827:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 283,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "6849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 284,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "6855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 303,
												"nodeType": "IfStatement",
												"src": "6837:149:0",
												"trueBody": {
													"id": 302,
													"nodeType": "Block",
													"src": "6865:121:0",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 286,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "6879:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"id": 287,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "6886:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6879:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "6879:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 291,
																	"indexExpression": {
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "6900:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6879:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6911:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6879:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "6879:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 296,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "6947:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 297,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "6953:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 298,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "6962:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6962:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 295,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6935:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6935:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 301,
															"nodeType": "EmitStatement",
															"src": "6930:45:0"
														}
													]
												}
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6776:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6810:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6787:31:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6827:0:0"
									},
									"scope": 306,
									"src": "6767:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 307,
							"src": "1696:5298:0",
							"usedErrors": []
						}
					],
					"src": "33:6961:0"
				},
				"id": 0
			},
			"contracts/SQFITEM/Address.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Address.sol",
					"exportedSymbols": {
						"Address": [
							603
						]
					},
					"id": 604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603
							],
							"name": "Address",
							"nameLocation": "134:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "784:311:1",
										"statements": [
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "981:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 319,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 312,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:1",
														"valueSize": 1
													},
													{
														"declaration": 318,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:1",
														"valueSize": 1
													}
												],
												"id": 320,
												"nodeType": "InlineAssembly",
												"src": "1003:61:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 321,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "1080:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 324,
												"nodeType": "Return",
												"src": "1073:15:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "738:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 603,
									"src": "718:377:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2083:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 337,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		],
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 335,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 340,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2126:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:1"
											},
											{
												"assignments": [
													346,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "2178:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 345,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 353,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 347,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "2196:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 349,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2218:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "2247:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2031:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2058:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:1"
									},
									"scope": 603,
									"src": "2012:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "3155:84:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3185:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3193:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 370,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															397
														],
														"referencedDeclaration": 397,
														"src": "3172:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 375,
												"nodeType": "Return",
												"src": "3165:67:1"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3088:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3104:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3141:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:1"
									},
									"scope": 603,
									"src": "3066:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3608:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3647:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3655:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 393,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3664:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 389,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															417,
															467
														],
														"referencedDeclaration": 467,
														"src": "3625:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 395,
												"nodeType": "Return",
												"src": "3618:59:1"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3492:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3516:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3543:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3594:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:1"
									},
									"scope": 603,
									"src": "3461:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "4189:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "4228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "4236:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4242:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 409,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															417,
															467
														],
														"referencedDeclaration": 467,
														"src": "4206:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 408,
												"id": 415,
												"nodeType": "Return",
												"src": "4199:94:1"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4086:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4110:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4137:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "4175:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:1"
									},
									"scope": 603,
									"src": "4046:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "4727:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$603",
																				"typeString": "library Address"
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4770:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 444,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4847:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 443,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "4836:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:1"
											},
											{
												"assignments": [
													450,
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "4900:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 449,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "4914:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 451,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"id": 457,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "4967:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 453,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4941:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 455,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "4960:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 462,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5015:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 463,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "5027:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 460,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "4989:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 430,
												"id": 465,
												"nodeType": "Return",
												"src": "4982:58:1"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4588:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4612:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4639:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4662:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4713:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:1"
									},
									"scope": 603,
									"src": "4548:499:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "5324:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "5360:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5368:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5374:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 477,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															484,
															519
														],
														"referencedDeclaration": 519,
														"src": "5341:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 476,
												"id": 482,
												"nodeType": "Return",
												"src": "5334:80:1"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "5053:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5233:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5260:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5252:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5281:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5268:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5268:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:35:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5310:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5310:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:14:1"
									},
									"scope": 603,
									"src": "5224:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "5763:228:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 498,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "5792:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 497,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5781:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5781:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5801:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5773:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5773:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "5773:67:1"
											},
											{
												"assignments": [
													504,
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5857:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "5852:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 503,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5852:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5879:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "5866:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 505,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5866:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5911:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 507,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5893:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5893:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5893:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 513,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "5950:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 514,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5959:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 515,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5971:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 512,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "5933:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5933:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 517,
												"nodeType": "Return",
												"src": "5926:58:1"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "5427:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5614:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5650:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5642:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5642:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5679:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5666:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5666:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5707:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5693:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5693:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5632:93:1"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "5749:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5749:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5748:14:1"
									},
									"scope": 603,
									"src": "5605:386:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "6267:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6305:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "6313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6319:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 529,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															536,
															571
														],
														"referencedDeclaration": 571,
														"src": "6284:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6284:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 534,
												"nodeType": "Return",
												"src": "6277:84:1"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "5997:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6179:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6200:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6216:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6216:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:35:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6253:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6253:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:14:1"
									},
									"scope": 603,
									"src": "6170:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "6709:232:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 550,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "6738:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 549,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "6727:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6727:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6747:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6719:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "6719:69:1"
											},
											{
												"assignments": [
													556,
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6805:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6800:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 555,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6800:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6827:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6814:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 557,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6814:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"id": 561,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "6861:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "6841:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6841:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6799:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 566,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "6909:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 567,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "6921:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 564,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "6883:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6883:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 547,
												"id": 569,
												"nodeType": "Return",
												"src": "6876:58:1"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "6374:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6563:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6601:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6593:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6630:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6617:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6617:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6658:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6644:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6644:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6583:93:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6695:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6695:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6694:14:1"
									},
									"scope": 603,
									"src": "6554:387:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "7321:532:1",
										"statements": [
											{
												"condition": {
													"id": 583,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "7335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "7392:455:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 587,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7476:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7476:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7496:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7476:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 597,
																"nodeType": "Block",
																"src": "7784:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 594,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "7809:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 593,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7802:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7802:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 596,
																		"nodeType": "ExpressionStatement",
																		"src": "7802:20:1"
																	}
																]
															},
															"id": 598,
															"nodeType": "IfStatement",
															"src": "7472:365:1",
															"trueBody": {
																"id": 592,
																"nodeType": "Block",
																"src": "7499:279:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7619:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7641:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7670:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7664:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7664:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7645:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7713:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7717:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7709:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7709:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7730:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7702:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7702:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7702:44:1"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 576,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7670:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 576,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7717:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 591,
																		"nodeType": "InlineAssembly",
																		"src": "7610:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "7331:516:1",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "7344:42:1",
													"statements": [
														{
															"expression": {
																"id": 584,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7365:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 582,
															"id": 585,
															"nodeType": "Return",
															"src": "7358:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "6947:209:1",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7170:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7201:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7196:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7196:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7231:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7218:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7218:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7265:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7251:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7251:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7186:97:1"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "7307:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7307:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7306:14:1"
									},
									"scope": 603,
									"src": "7161:692:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 604,
							"src": "126:7729:1",
							"usedErrors": []
						}
					],
					"src": "33:7822:1"
				},
				"id": 1
			},
			"contracts/SQFITEM/Context.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Context.sol",
					"exportedSymbols": {
						"Context": [
							625
						]
					},
					"id": 626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 605,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 606,
								"nodeType": "StructuredDocumentation",
								"src": "58:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 625,
							"linearizedBaseContracts": [
								625
							],
							"name": "Context",
							"nameLocation": "573:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "649:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 611,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "666:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "666:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 610,
												"id": 613,
												"nodeType": "Return",
												"src": "659:17:2"
											}
										]
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "640:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:2"
									},
									"scope": 625,
									"src": "587:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "756:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 620,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "773:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "773:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 619,
												"id": 622,
												"nodeType": "Return",
												"src": "766:15:2"
											}
										]
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "698:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "740:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:16:2"
									},
									"scope": 625,
									"src": "689:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 626,
							"src": "555:235:2",
							"usedErrors": []
						}
					],
					"src": "33:757:2"
				},
				"id": 2
			},
			"contracts/SQFITEM/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							649
						],
						"IERC165": [
							734
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "contracts/SQFITEM/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 628,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 735,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 630,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 734,
										"src": "688:7:3"
									},
									"id": 631,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 629,
								"nodeType": "StructuredDocumentation",
								"src": "83:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								734
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										733
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "854:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 640,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "871:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 642,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "891:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$734_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$734_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 641,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "886:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$734",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "886:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "871:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 639,
												"id": 646,
												"nodeType": "Return",
												"src": "864:47:3"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 636,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "830:8:3"
									},
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "790:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 633,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:3"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "848:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "848:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:6:3"
									},
									"scope": 649,
									"src": "763:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 650,
							"src": "660:260:3",
							"usedErrors": []
						}
					],
					"src": "33:887:3"
				},
				"id": 3
			},
			"contracts/SQFITEM/IAccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							722
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "58:89:4",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 722,
							"linearizedBaseContracts": [
								722
							],
							"name": "IAccessControl",
							"nameLocation": "158:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "179:292:4",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 661,
									"name": "RoleAdminChanged",
									"nameLocation": "482:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "515:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "499:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 654,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "537:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "521:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "572:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "556:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:87:4"
									},
									"src": "476:110:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "592:212:4",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 670,
									"name": "RoleGranted",
									"nameLocation": "815:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "843:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "827:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 663,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "865:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "849:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "890:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "874:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:71:4"
									},
									"src": "809:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "904:275:4",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 679,
									"name": "RoleRevoked",
									"nameLocation": "1190:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1218:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1202:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 672,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1240:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1224:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1265:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1249:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:71:4"
									},
									"src": "1184:89:4"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1279:76:4",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1369:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1385:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1377:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1399:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1391:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:31:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1431:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:6:4"
									},
									"scope": 722,
									"src": "1360:77:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1443:184:4",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1641:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1662:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1654:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:14:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1691:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 694,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:9:4"
									},
									"scope": 722,
									"src": "1632:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1706:239:4",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "1959:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1977:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1969:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1991:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1983:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:31:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:4"
									},
									"scope": 722,
									"src": "1950:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "2015:223:4",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2252:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2271:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2263:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2285:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2277:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:31:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2302:0:4"
									},
									"scope": 722,
									"src": "2243:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "2309:480:4",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2803:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2824:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2816:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 715,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2838:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2830:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:31:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:0:4"
									},
									"scope": 722,
									"src": "2794:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 723,
							"src": "148:2710:4",
							"usedErrors": []
						}
					],
					"src": "33:2825:4"
				},
				"id": 4
			},
			"contracts/SQFITEM/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							734
						]
					},
					"id": 735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 725,
								"nodeType": "StructuredDocumentation",
								"src": "58:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 734,
							"linearizedBaseContracts": [
								734
							],
							"name": "IERC165",
							"nameLocation": "348:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "362:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "716:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "741:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "734:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 727,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:20:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "777:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:5"
									},
									"scope": 734,
									"src": "707:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 735,
							"src": "338:447:5",
							"usedErrors": []
						}
					],
					"src": "33:752:5"
				},
				"id": 5
			},
			"contracts/SQFITEM/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 737,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 812,
							"linearizedBaseContracts": [
								812
							],
							"name": "IERC20",
							"nameLocation": "139:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:6"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "269:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:6"
									},
									"scope": 812,
									"src": "223:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "380:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:6"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "420:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:6"
									},
									"scope": 812,
									"src": "361:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "667:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "686:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "720:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:6"
									},
									"scope": 812,
									"src": "649:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1020:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1035:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:6"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1075:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:6"
									},
									"scope": 812,
									"src": "1001:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1754:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1771:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:6"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1805:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:6"
									},
									"scope": 812,
									"src": "1737:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2149:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2173:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2200:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2239:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:6"
									},
									"scope": 812,
									"src": "2118:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 802,
									"name": "Transfer",
									"nameLocation": "2420:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2429:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2451:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2471:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:6"
									},
									"src": "2414:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 811,
									"name": "Approval",
									"nameLocation": "2651:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2660:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2683:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2708:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:6"
									},
									"src": "2645:78:6"
								}
							],
							"scope": 813,
							"src": "129:2596:6",
							"usedErrors": []
						}
					],
					"src": "33:2692:6"
				},
				"id": 6
			},
			"contracts/SQFITEM/ISQFItem.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/ISQFItem.sol",
					"exportedSymbols": {
						"ISQFItem": [
							840
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISQFItem",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 840,
							"linearizedBaseContracts": [
								840
							],
							"name": "ISQFItem",
							"nameLocation": "68:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d204c45e",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "92:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "118:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "110:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "tokenURI_",
												"nameLocation": "144:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "130:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "130:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:59:7"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "178:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:9:7"
									},
									"scope": 840,
									"src": "83:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "202:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "215:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "207:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:17:7"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:7"
									},
									"scope": 840,
									"src": "193:40:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fd2e997e",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "itemInfo",
									"nameLocation": "510:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "527:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "519:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:17:7"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "583:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "575:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "608:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "602:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 834,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "602:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "644:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "628:24:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "628:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:97:7"
									},
									"scope": 840,
									"src": "501:158:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 841,
							"src": "58:603:7",
							"usedErrors": []
						}
					],
					"src": "33:628:7"
				},
				"id": 7
			},
			"contracts/SQFITEM/Math.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Math.sol",
					"exportedSymbols": {
						"Math": [
							928
						]
					},
					"id": 929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 843,
								"nodeType": "StructuredDocumentation",
								"src": "58:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 928,
							"linearizedBaseContracts": [
								928
							],
							"name": "Math",
							"nameLocation": "140:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "282:38:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 853,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "299:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 854,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "304:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "299:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 857,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "312:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "299:14:8",
													"trueExpression": {
														"id": 856,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "308:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 852,
												"id": 859,
												"nodeType": "Return",
												"src": "292:21:8"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "151:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "224:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "236:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "228:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "247:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "239:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:22:8"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "273:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:9:8"
									},
									"scope": 928,
									"src": "215:105:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "458:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "475:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 872,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "479:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "475:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "475:13:8",
													"trueExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 870,
												"id": 877,
												"nodeType": "Return",
												"src": "468:20:8"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "326:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "400:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "412:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "404:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "423:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "415:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:22:8"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "449:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:8"
									},
									"scope": 928,
									"src": "391:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "679:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "734:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 890,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "738:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "734:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "733:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "744:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "748:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "744:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "743:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "743:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "733:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 900,
												"nodeType": "Return",
												"src": "726:28:8"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "501:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "617:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "625:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "636:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "670:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:9:8"
									},
									"scope": 928,
									"src": "608:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "1031:123:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 912,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1119:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 913,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "1123:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1119:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 915,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "1128:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 916,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "1132:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1128:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1137:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1128:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1145:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1128:18:8",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1141:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 923,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1127:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1119:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 925,
												"nodeType": "Return",
												"src": "1112:35:8"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "767:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "969:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "985:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "977:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "996:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "988:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:22:8"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1022:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:9:8"
									},
									"scope": 928,
									"src": "960:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 929,
							"src": "132:1024:8",
							"usedErrors": []
						}
					],
					"src": "33:1123:8"
				},
				"id": 8
			},
			"contracts/SQFITEM/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							625
						],
						"Pausable": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "contracts/SQFITEM/Context.sol",
							"file": "./Context.sol",
							"id": 931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 626,
							"src": "58:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 933,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 625,
										"src": "553:7:9"
									},
									"id": 934,
									"nodeType": "InheritanceSpecifier",
									"src": "553:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 932,
								"nodeType": "StructuredDocumentation",
								"src": "83:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								625
							],
							"name": "Pausable",
							"nameLocation": "541:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "567:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 939,
									"name": "Paused",
									"nameLocation": "651:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "666:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "658:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:17:9"
									},
									"src": "645:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "681:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 944,
									"name": "Unpaused",
									"nameLocation": "762:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "779:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "771:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:17:9"
									},
									"src": "756:32:9"
								},
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "807:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "794:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 945,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "794:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "907:32:9",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "917:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "927:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "917:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "917:15:9"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "821:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 955,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:9"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:0:9"
									},
									"scope": 1020,
									"src": "893:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "1087:31:9",
										"statements": [
											{
												"expression": {
													"id": 961,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "1104:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 960,
												"id": 962,
												"nodeType": "Return",
												"src": "1097:14:9"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "945:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1043:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:2:9"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "1081:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1081:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:6:9"
									},
									"scope": 1020,
									"src": "1034:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "1329:66:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1347:9:9",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 968,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "1348:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1348:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1358:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1339:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "1339:38:9"
											},
											{
												"id": 974,
												"nodeType": "PlaceholderStatement",
												"src": "1387:1:9"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "1124:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 976,
									"name": "whenNotPaused",
									"nameLocation": "1313:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:2:9"
									},
									"src": "1304:91:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1595:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 980,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "1613:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:8:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1623:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1605:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1605:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1605:41:9"
											},
											{
												"id": 985,
												"nodeType": "PlaceholderStatement",
												"src": "1656:1:9"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1401:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 987,
									"name": "whenPaused",
									"nameLocation": "1582:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1592:2:9"
									},
									"src": "1573:91:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "1848:66:9",
										"statements": [
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "1858:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1858:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "1858:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 998,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1894:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1894:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 997,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1887:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "EmitStatement",
												"src": "1882:25:9"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "1670:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 990,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "1834:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1834:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "1808:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:2:9"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1848:0:9"
									},
									"scope": 1020,
									"src": "1799:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "2094:69:9",
										"statements": [
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2104:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2114:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2104:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2104:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1014,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2143:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2143:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1013,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2134:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "2129:27:9"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "1920:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 987,
												"src": "2083:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2083:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2055:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2063:2:9"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:0:9"
									},
									"scope": 1020,
									"src": "2046:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "523:1642:9",
							"usedErrors": []
						}
					],
					"src": "33:2132:9"
				},
				"id": 9
			},
			"contracts/SQFITEM/SQFI_Factory.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/SQFI_Factory.sol",
					"exportedSymbols": {
						"AccessControl": [
							306
						],
						"Address": [
							603
						],
						"Context": [
							625
						],
						"ERC165": [
							649
						],
						"IAccessControl": [
							722
						],
						"IERC165": [
							734
						],
						"IERC20": [
							812
						],
						"ISQFItem": [
							840
						],
						"Math": [
							928
						],
						"ParagonFactory": [
							1351
						],
						"Pausable": [
							1020
						],
						"SafeERC20": [
							1575
						],
						"SafeMath": [
							1887
						],
						"Strings": [
							2090
						]
					},
					"id": 1352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"absolutePath": "contracts/SQFITEM/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 1023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 1021,
							"src": "62:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/AccessControl.sol",
							"file": "./AccessControl.sol",
							"id": 1024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 307,
							"src": "87:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 1888,
							"src": "117:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 813,
							"src": "142:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 1027,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 1576,
							"src": "165:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Math.sol",
							"file": "./Math.sol",
							"id": 1028,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 929,
							"src": "191:20:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/ISQFItem.sol",
							"file": "./ISQFItem.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 841,
							"src": "212:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1030,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "319:8:10"
									},
									"id": 1031,
									"nodeType": "InheritanceSpecifier",
									"src": "319:8:10"
								},
								{
									"baseName": {
										"id": 1032,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "329:13:10"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "329:13:10"
								}
							],
							"canonicalName": "ParagonFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1351,
							"linearizedBaseContracts": [
								1351,
								306,
								649,
								734,
								722,
								1020,
								625
							],
							"name": "ParagonFactory",
							"nameLocation": "301:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1036,
									"libraryName": {
										"id": 1034,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1887,
										"src": "355:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "349:27:10",
									"typeName": {
										"id": 1035,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1040,
									"libraryName": {
										"id": 1037,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1575,
										"src": "387:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "381:27:10",
									"typeName": {
										"id": 1039,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1038,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 812,
											"src": "401:6:10"
										},
										"referencedDeclaration": 812,
										"src": "401:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$812",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "52c6159f",
									"id": 1043,
									"mutability": "mutable",
									"name": "SQFi",
									"nameLocation": "429:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "413:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISQFItem_$840",
										"typeString": "contract ISQFItem"
									},
									"typeName": {
										"id": 1042,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1041,
											"name": "ISQFItem",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 840,
											"src": "413:8:10"
										},
										"referencedDeclaration": 840,
										"src": "413:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISQFItem_$840",
											"typeString": "contract ISQFItem"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1048,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "519:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "495:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1044,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1046,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "543:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1045,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "533:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1047,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "533:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "09c9985c",
									"id": 1051,
									"mutability": "mutable",
									"name": "uncraftBurnPercent",
									"nameLocation": "578:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "563:38:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "563:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1050,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "599:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "683b0ee5",
									"id": 1054,
									"mutability": "mutable",
									"name": "minSQFI",
									"nameLocation": "622:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "607:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1052,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 1053,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "632:3:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "13e6b93b",
									"id": 1057,
									"mutability": "mutable",
									"name": "maxSQFI",
									"nameLocation": "656:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "641:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "641:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32303030",
										"id": 1056,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000_by_1",
											"typeString": "int_const 2000"
										},
										"value": "2000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac6b182d",
									"id": 1074,
									"mutability": "mutable",
									"name": "runePower",
									"nameLocation": "695:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "676:206:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$16_storage",
										"typeString": "uint256[16]"
									},
									"typeName": {
										"baseType": {
											"id": 1058,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "676:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1060,
										"length": {
											"hexValue": "3136",
											"id": 1059,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "684:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_16_by_1",
												"typeString": "int_const 16"
											},
											"value": "16"
										},
										"nodeType": "ArrayTypeName",
										"src": "676:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$16_storage_ptr",
											"typeString": "uint256[16]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "31",
												"id": 1061,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "717:1:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "3135",
												"id": 1062,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "728:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											},
											{
												"hexValue": "3530",
												"id": 1063,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "740:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50_by_1",
													"typeString": "int_const 50"
												},
												"value": "50"
											},
											{
												"hexValue": "313830",
												"id": 1064,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "752:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_180_by_1",
													"typeString": "int_const 180"
												},
												"value": "180"
											},
											{
												"hexValue": "363330",
												"id": 1065,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "765:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_630_by_1",
													"typeString": "int_const 630"
												},
												"value": "630"
											},
											{
												"hexValue": "32323030",
												"id": 1066,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "778:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2200_by_1",
													"typeString": "int_const 2200"
												},
												"value": "2200"
											},
											{
												"hexValue": "37383030",
												"id": 1067,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "792:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7800_by_1",
													"typeString": "int_const 7800"
												},
												"value": "7800"
											},
											{
												"hexValue": "3238323230",
												"id": 1068,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "806:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_28220_by_1",
													"typeString": "int_const 28220"
												},
												"value": "28220"
											},
											{
												"hexValue": "313035383030",
												"id": 1069,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "821:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_105800_by_1",
													"typeString": "int_const 105800"
												},
												"value": "105800"
											},
											{
												"hexValue": "323539323030",
												"id": 1070,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "837:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_259200_by_1",
													"typeString": "int_const 259200"
												},
												"value": "259200"
											},
											{
												"hexValue": "363635303030",
												"id": 1071,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "853:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_665000_by_1",
													"typeString": "int_const 665000"
												},
												"value": "665000"
											},
											{
												"hexValue": "32323030303030",
												"id": 1072,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "869:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2200000_by_1",
													"typeString": "int_const 2200000"
												},
												"value": "2200000"
											}
										],
										"id": 1073,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "707:175:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint24_$12_memory_ptr",
											"typeString": "uint24[12] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6098256",
									"id": 1076,
									"mutability": "mutable",
									"name": "fee1",
									"nameLocation": "904:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "889:19:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1075,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "889:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f400fde4",
									"id": 1079,
									"mutability": "mutable",
									"name": "amount1",
									"nameLocation": "957:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "942:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "942:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030653138",
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "967:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"value": "100e18"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e6e3acb506bf1d2adb1d8565252e575763ee07d1debfcc2c830682895b3137d",
									"id": 1089,
									"name": "CraftSQFI",
									"nameLocation": "1026:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1053:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1045:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1076:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1068:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee1",
												"nameLocation": "1101:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1093:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1148:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1140:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:153:10"
									},
									"src": "1020:169:10"
								},
								{
									"anonymous": false,
									"eventSelector": "950dcd4a7087bbf2cee08268e1b26ac45fb310d3ae443d0fe53714b713da45c1",
									"id": 1093,
									"name": "UncraftSQFI",
									"nameLocation": "1200:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1229:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1221:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:31:10"
									},
									"src": "1194:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "9b3476ac3e923c8beaeffb43856eb1614863b908de32a6a98c91f2672b8d2581",
									"id": 1101,
									"name": "FeeChange",
									"nameLocation": "1254:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "1272:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1264:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1290:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1282:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "enable",
												"nameLocation": "1303:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1298:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1298:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:47:10"
									},
									"src": "1248:63:10"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "1458:251:10",
										"statements": [
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1108,
														"name": "SQFi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "1536:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISQFItem_$840",
															"typeString": "contract ISQFItem"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1110,
																"name": "_sqfi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1552:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1109,
															"name": "ISQFItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "1543:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISQFItem_$840_$",
																"typeString": "type(contract ISQFItem)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1543:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISQFItem_$840",
															"typeString": "contract ISQFItem"
														}
													},
													"src": "1536:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISQFItem_$840",
														"typeString": "contract ISQFItem"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "1536:22:10"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1114,
														"name": "fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "1568:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1115,
														"name": "_fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "1575:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1568:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "1568:12:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1119,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1626:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1120,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1646:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1646:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1118,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1615:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "1615:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1125,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1678:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1126,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1691:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1691:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1124,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1667:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "1667:35:10"
											}
										]
									},
									"id": 1131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_sqfi",
												"nameLocation": "1346:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1338:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_fee1",
												"nameLocation": "1421:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1413:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:129:10"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1458:0:10"
									},
									"scope": 1351,
									"src": "1317:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "1817:55:10",
										"statements": [
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "minSQFI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1827:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "_min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "1837:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "1827:14:10"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "maxSQFI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1851:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1146,
														"name": "_max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "1861:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1851:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "1851:14:10"
											}
										]
									},
									"functionSelector": "51d64e64",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1138,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1793:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1137,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1784:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1784:28:10"
										}
									],
									"name": "editSQFI",
									"nameLocation": "1724:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "_min",
												"nameLocation": "1741:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1733:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "_max",
												"nameLocation": "1755:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1747:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:28:10"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1817:0:10"
									},
									"scope": 1351,
									"src": "1715:157:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "1983:103:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "percent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "2001:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2012:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2001:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652076616c69642070657263656e74",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2017:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5",
																"typeString": "literal_string \"Must be valid percent\""
															},
															"value": "Must be valid percent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bcdd419a6b0bee5497379f4a75f1cba4d46fe14d102c7ff2978eaa9f30340d5",
																"typeString": "literal_string \"Must be valid percent\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1993:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "1993:48:10"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1165,
														"name": "uncraftBurnPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "2051:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1166,
														"name": "percent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2072:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2051:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2051:28:10"
											}
										]
									},
									"functionSelector": "eb47536a",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1155,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1959:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1154,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1950:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1950:28:10"
										}
									],
									"name": "editUncraftBurnPercent",
									"nameLocation": "1887:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "percent",
												"nameLocation": "1918:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "1910:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1909:17:10"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:0:10"
									},
									"scope": 1351,
									"src": "1878:208:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "2209:194:10",
										"statements": [
											{
												"body": {
													"id": 1220,
													"nodeType": "Block",
													"src": "2250:147:10",
													"statements": [
														{
															"expression": {
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1189,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "2264:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$16_memory_ptr",
																			"typeString": "uint256[16] memory"
																		}
																	},
																	"id": 1193,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1190,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "2271:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2275:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2271:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2264:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1194,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "2296:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$16_memory_ptr",
																				"typeString": "uint256[16] memory"
																			}
																		},
																		"id": 1198,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1195,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "2303:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2307:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "2303:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2296:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1201,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1172,
																						"src": "2334:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 1203,
																					"indexExpression": {
																						"id": 1202,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1180,
																						"src": "2339:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2334:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2328:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1199,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "2328:5:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2328:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "323536",
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2361:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				},
																				"value": "256"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1210,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1208,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1206,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1180,
																									"src": "2367:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "32",
																									"id": 1207,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2371:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"src": "2367:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"hexValue": "30",
																								"id": 1209,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2376:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"src": "2367:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseExpression": {
																							"hexValue": "30",
																							"id": 1212,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2384:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"id": 1213,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "Conditional",
																						"src": "2367:18:10",
																						"trueExpression": {
																							"hexValue": "31",
																							"id": 1211,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2380:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 1214,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2366:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2361:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2328:58:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2296:90:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2264:122:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "2264:122:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1183,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "2237:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2241:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "2237:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"initializationExpression": {
													"assignments": [
														1180
													],
													"declarations": [
														{
															"constant": false,
															"id": 1180,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2230:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1221,
															"src": "2224:7:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1179,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2224:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1182,
													"initialValue": {
														"hexValue": "30",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2234:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2224:11:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2245:3:10",
														"subExpression": {
															"id": 1186,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "2245:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1188,
													"nodeType": "ExpressionStatement",
													"src": "2245:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2219:178:10"
											}
										]
									},
									"functionSelector": "dd23faf3",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bytes32ToAmount16",
									"nameLocation": "2101:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2127:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2119:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:14:10"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2197:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2178:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$16_memory_ptr",
													"typeString": "uint256[16]"
												},
												"typeName": {
													"baseType": {
														"id": 1174,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2178:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1176,
													"length": {
														"hexValue": "3136",
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2186:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "16"
													},
													"nodeType": "ArrayTypeName",
													"src": "2178:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$16_storage_ptr",
														"typeString": "uint256[16]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:27:10"
									},
									"scope": 1351,
									"src": "2092:311:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "2749:113:10",
										"statements": [
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "2759:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1234,
														"name": "_fee1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "2766:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2759:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2759:12:10"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "2806:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1238,
														"name": "_amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "2816:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2806:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2806:18:10"
											}
										]
									},
									"functionSelector": "945099bc",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1230,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2729:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1229,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2720:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2720:28:10"
										}
									],
									"name": "editSupportedFee",
									"nameLocation": "2587:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_fee1",
												"nameLocation": "2621:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2613:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_amount1",
												"nameLocation": "2670:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2662:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2603:109:10"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:0:10"
									},
									"scope": 1351,
									"src": "2578:284:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "3057:1186:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1251,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3071:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3081:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3071:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1254,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3086:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3102:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3094:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1255,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3094:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3094:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3086:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3071:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1275,
												"nodeType": "IfStatement",
												"src": "3067:127:10",
												"trueBody": {
													"id": 1274,
													"nodeType": "Block",
													"src": "3108:86:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1265,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3148:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3148:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1269,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3168:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ParagonFactory_$1351",
																					"typeString": "contract ParagonFactory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ParagonFactory_$1351",
																					"typeString": "contract ParagonFactory"
																				}
																			],
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3160:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1267,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3160:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3160:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1271,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "3175:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1262,
																				"name": "fee1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "3129:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1261,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "3122:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$812_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3122:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$812",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 793,
																	"src": "3122:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3122:61:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1273,
															"nodeType": "ExpressionStatement",
															"src": "3122:61:10"
														}
													]
												}
											},
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "4014:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1295,
														"src": "4006:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4006:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4051:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4051:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "tokenURI_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "4075:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1278,
															"name": "SQFi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "4024:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISQFItem_$840",
																"typeString": "contract ISQFItem"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 823,
														"src": "4024:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,string memory) external returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4006:88:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4132:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4132:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "4156:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1289,
															"name": "fee1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "4177:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "4195:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "CraftSQFI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "4109:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4109:103:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "EmitStatement",
												"src": "4104:108:10"
											},
											{
												"expression": {
													"id": 1293,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1277,
													"src": "4229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1294,
												"nodeType": "Return",
												"src": "4222:14:10"
											}
										]
									},
									"functionSelector": "841acc5d",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1246,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 976,
												"src": "3025:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3025:13:10"
										}
									],
									"name": "createSQFI",
									"nameLocation": "2877:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "tokenURI_",
												"nameLocation": "3002:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "2988:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2988:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:130:10"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "3048:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:9:10"
									},
									"scope": 1351,
									"src": "2868:1375:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "4379:70:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "4399:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1301,
															"name": "SQFi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "4389:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISQFItem_$840",
																"typeString": "contract ISQFItem"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 828,
														"src": "4389:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4389:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "4389:18:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1308,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "4434:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "UncraftSQFI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "4422:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4422:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "EmitStatement",
												"src": "4417:25:10"
											}
										]
									},
									"functionSelector": "0a1ac657",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uncraft",
									"nameLocation": "4325:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4350:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4342:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4332:31:10"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:10"
									},
									"scope": 1351,
									"src": "4316:133:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "4560:177:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1322,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "4574:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4591:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4583:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1323,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4583:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4583:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4574:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "4664:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1342,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4701:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4701:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1344,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "4713:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1339,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1314,
																				"src": "4685:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1338,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "4678:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$812_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4678:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$812",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 761,
																	"src": "4678:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4678:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1346,
															"nodeType": "ExpressionStatement",
															"src": "4678:42:10"
														}
													]
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "4570:161:10",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "4597:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "4640:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1330,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4619:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4619:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4611:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1328,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4611:8:10",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4611:19:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "4611:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4611:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1336,
															"nodeType": "ExpressionStatement",
															"src": "4611:36:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1319,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "4536:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4527:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4527:28:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "4464:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4473:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4473:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4496:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4488:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:31:10"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4560:0:10"
									},
									"scope": 1351,
									"src": "4455:282:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1352,
							"src": "292:4447:10",
							"usedErrors": []
						}
					],
					"src": "37:4702:10"
				},
				"id": 10
			},
			"contracts/SQFITEM/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							603
						],
						"IERC20": [
							812
						],
						"SafeERC20": [
							1575
						]
					},
					"id": 1576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "contracts/SQFITEM/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 813,
							"src": "58:22:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SQFITEM/Address.sol",
							"file": "./Address.sol",
							"id": 1355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 604,
							"src": "81:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "106:457:11",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1575,
							"linearizedBaseContracts": [
								1575
							],
							"name": "SafeERC20",
							"nameLocation": "572:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1359,
									"libraryName": {
										"id": 1357,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 603,
										"src": "594:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "588:26:11",
									"typeName": {
										"id": 1358,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "606:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "722:103:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "752:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1373,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "782:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 761,
																		"src": "782:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1376,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "807:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "811:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:58:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1369,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "732:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "732:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "732:86:11"
											}
										]
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "629:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "658:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "651:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1360,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "651:6:11"
													},
													"referencedDeclaration": 812,
													"src": "651:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "681:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "673:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:71:11"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:0:11"
									},
									"scope": 1575,
									"src": "620:205:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "959:113:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "989:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1398,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "1019:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 793,
																		"src": "1019:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1019:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1401,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "1048:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1402,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "1054:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1403,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "1058:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1396,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "996:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "996:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "996:68:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1394,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "969:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:96:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "969:96:11"
											}
										]
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "840:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "873:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "866:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1383,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "866:6:11"
													},
													"referencedDeclaration": 812,
													"src": "866:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "896:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "888:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "918:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "910:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "938:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "930:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:93:11"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:11"
									},
									"scope": 1575,
									"src": "831:241:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "1438:497:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1420,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "1687:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1696:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1687:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1423,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1686:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1428,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1727:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1575",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1575",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1427,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1719:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1426,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1719:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1719:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1430,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1414,
																					"src": "1734:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1424,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1412,
																					"src": "1703:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$812",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 771,
																				"src": "1703:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1703:39:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1746:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1703:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1434,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1702:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1686:62:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1762:56:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1665:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:163:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "1665:163:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "1858:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1443,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "1888:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 781,
																		"src": "1888:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1888:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1446,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1414,
																	"src": "1912:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "1921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1441,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1865:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1865:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1865:62:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1439,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "1838:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1838:90:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "1838:90:11"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "1078:249:11",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1341:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1369:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1362:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1410,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "1362:6:11"
													},
													"referencedDeclaration": 812,
													"src": "1362:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1392:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1384:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1417:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1409:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:76:11"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:11"
									},
									"scope": 1575,
									"src": "1332:603:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "2057:194:11",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2075:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "2067:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2067:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1468,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2114:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1575",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1575",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2106:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1466,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2106:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1470,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2121:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1464,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "2090:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$812",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 771,
															"src": "2090:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2090:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1472,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "2132:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2090:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2067:70:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1476,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1479,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1455,
																			"src": "2197:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$812",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 781,
																		"src": "2197:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2197:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2221:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1483,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2230:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1477,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2174:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2174:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2174:69:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$812",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1475,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "2147:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:97:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "2147:97:11"
											}
										]
									},
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1950:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1988:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1981:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1454,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1453,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "1981:6:11"
													},
													"referencedDeclaration": 812,
													"src": "1981:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2011:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "2003:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2036:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "2028:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:76:11"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:11"
									},
									"scope": 1575,
									"src": "1941:310:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "2373:370:11",
										"statements": [
											{
												"id": 1534,
												"nodeType": "UncheckedBlock",
												"src": "2383:354:11",
												"statements": [
													{
														"assignments": [
															1499
														],
														"declarations": [
															{
																"constant": false,
																"id": 1499,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2415:12:11",
																"nodeType": "VariableDeclaration",
																"scope": 1534,
																"src": "2407:20:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1498,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2407:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1508,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1504,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2454:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1575",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1575",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2446:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1502,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2446:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2446:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1506,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "2461:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1500,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "2430:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 771,
																"src": "2430:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2430:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2407:62:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1510,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1499,
																		"src": "2491:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1511,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "2507:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2491:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2514:43:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1509,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2483:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2483:75:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1515,
														"nodeType": "ExpressionStatement",
														"src": "2483:75:11"
													},
													{
														"assignments": [
															1517
														],
														"declarations": [
															{
																"constant": false,
																"id": 1517,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2580:12:11",
																"nodeType": "VariableDeclaration",
																"scope": 1534,
																"src": "2572:20:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1516,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2572:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1521,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1518,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "2595:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1519,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "2610:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2595:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2572:43:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1523,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "2649:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1526,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "2679:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$812",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 781,
																				"src": "2679:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2679:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1529,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1493,
																			"src": "2703:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1530,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "2712:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1524,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2656:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2656:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2656:69:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1522,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "2629:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$812_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2629:97:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1533,
														"nodeType": "ExpressionStatement",
														"src": "2629:97:11"
													}
												]
											}
										]
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2266:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2304:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2297:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1490,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1489,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "2297:6:11"
													},
													"referencedDeclaration": 812,
													"src": "2297:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2327:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2319:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2344:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:76:11"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2373:0:11"
									},
									"scope": 1575,
									"src": "2257:486:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "3196:636:11",
										"statements": [
											{
												"assignments": [
													1546
												],
												"declarations": [
													{
														"constant": false,
														"id": 1546,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3558:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "3545:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3545:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"arguments": [
														{
															"id": 1552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "3599:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3605:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1549,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "3579:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$812",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3571:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3571:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3571:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 397,
														"src": "3571:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3571:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3545:95:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1556,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "3654:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3654:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3674:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3654:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "3650:176:11",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "3677:149:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1563,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "3749:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3762:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1564,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3762:4:11",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1566,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3761:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1561,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3738:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3738:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3738:30:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3770:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1560,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3730:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3730:85:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1570,
															"nodeType": "ExpressionStatement",
															"src": "3730:85:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "2749:372:11",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3135:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3162:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3155:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$812",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1538,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "3155:6:11"
													},
													"referencedDeclaration": 812,
													"src": "3155:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$812",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3182:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3169:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3169:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:33:11"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3196:0:11"
									},
									"scope": 1575,
									"src": "3126:706:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1576,
							"src": "564:3270:11",
							"usedErrors": []
						}
					],
					"src": "33:3801:11"
				},
				"id": 11
			},
			"contracts/SQFITEM/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1887
						]
					},
					"id": 1888,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1578,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1887,
							"linearizedBaseContracts": [
								1887
							],
							"name": "SafeMath",
							"nameLocation": "406:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "633:140:12",
										"statements": [
											{
												"id": 1608,
												"nodeType": "UncheckedBlock",
												"src": "643:124:12",
												"statements": [
													{
														"assignments": [
															1591
														],
														"declarations": [
															{
																"constant": false,
																"id": 1591,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1608,
																"src": "667:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1590,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1595,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1592,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "679:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1593,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "683:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1596,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "702:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1597,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "706:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1603,
														"nodeType": "IfStatement",
														"src": "698:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1589,
															"id": 1602,
															"nodeType": "Return",
															"src": "709:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1605,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "754:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1606,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1589,
														"id": 1607,
														"nodeType": "Return",
														"src": "740:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "573:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "584:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:12"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "618:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "624:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:12"
									},
									"scope": 1887,
									"src": "557:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "995:113:12",
										"statements": [
											{
												"id": 1636,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1622,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "1033:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1623,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "1037:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1629,
														"nodeType": "IfStatement",
														"src": "1029:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1627,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1621,
															"id": 1628,
															"nodeType": "Return",
															"src": "1040:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1631,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "1085:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1632,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "1089:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1621,
														"id": 1635,
														"nodeType": "Return",
														"src": "1071:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:12",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "946:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:12"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "980:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "986:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:12"
									},
									"scope": 1887,
									"src": "919:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "1332:417:12",
										"statements": [
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "1600:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1657,
														"nodeType": "IfStatement",
														"src": "1596:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1656,
															"nodeType": "Return",
															"src": "1608:16:12"
														}
													},
													{
														"assignments": [
															1659
														],
														"declarations": [
															{
																"constant": false,
																"id": 1659,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1678,
																"src": "1638:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1658,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1663,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "1650:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1661,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "1654:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1664,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "1673:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1665,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1677:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1667,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "1682:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1673,
														"nodeType": "IfStatement",
														"src": "1669:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1671,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1672,
															"nodeType": "Return",
															"src": "1685:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1675,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "1730:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1676,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1649,
														"id": 1677,
														"nodeType": "Return",
														"src": "1716:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "1272:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "1283:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:12"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "1317:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "1323:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:12"
									},
									"scope": 1887,
									"src": "1256:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "1974:114:12",
										"statements": [
											{
												"id": 1706,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "2012:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1699,
														"nodeType": "IfStatement",
														"src": "2008:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1691,
															"id": 1698,
															"nodeType": "Return",
															"src": "2020:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1701,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "2065:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1702,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "2069:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1691,
														"id": 1705,
														"nodeType": "Return",
														"src": "2051:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "1914:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "1925:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:12"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "1959:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "1965:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:12"
									},
									"scope": 1887,
									"src": "1898:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "2323:114:12",
										"statements": [
											{
												"id": 1734,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "2361:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "2357:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1719,
															"id": 1726,
															"nodeType": "Return",
															"src": "2369:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "2414:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "2418:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1733,
														"nodeType": "Return",
														"src": "2400:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2263:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2274:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:12"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2308:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2314:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:12"
									},
									"scope": 1887,
									"src": "2247:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "2739:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1746,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "2756:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1747,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "2760:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1745,
												"id": 1749,
												"nodeType": "Return",
												"src": "2749:12:12"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2685:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2696:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2730:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:12"
									},
									"scope": 1887,
									"src": "2672:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "3106:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1761,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "3123:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1762,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "3127:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1760,
												"id": 1764,
												"nodeType": "Return",
												"src": "3116:12:12"
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "3052:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "3063:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:12"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "3097:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:12"
									},
									"scope": 1887,
									"src": "3039:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "3449:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1776,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "3466:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1777,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1771,
														"src": "3470:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1779,
												"nodeType": "Return",
												"src": "3459:12:12"
											}
										]
									},
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "3395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "3406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:12"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "3440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:12"
									},
									"scope": 1887,
									"src": "3382:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "3834:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1791,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "3851:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1792,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "3855:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1790,
												"id": 1794,
												"nodeType": "Return",
												"src": "3844:12:12"
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "3780:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "3791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:12"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "3825:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:12"
									},
									"scope": 1887,
									"src": "3767:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "4383:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1806,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "4400:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1807,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "4404:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1809,
												"nodeType": "Return",
												"src": "4393:12:12"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4329:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4340:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:12"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4374:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:12"
									},
									"scope": 1887,
									"src": "4316:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "5001:106:12",
										"statements": [
											{
												"id": 1834,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1824,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "5043:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1825,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1814,
																		"src": "5048:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1827,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "5051:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1823,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1829,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1830,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "5085:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1831,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "5089:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1822,
														"id": 1833,
														"nodeType": "Return",
														"src": "5078:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4898:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4917:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4936:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:12"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4992:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:12"
									},
									"scope": 1887,
									"src": "4876:231:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "5716:105:12",
										"statements": [
											{
												"id": 1859,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1849,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "5758:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1852,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "5765:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1848,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1854,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1855,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "5799:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1856,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "5803:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1847,
														"id": 1858,
														"nodeType": "Return",
														"src": "5792:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "5613:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "5632:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "5651:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:12"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "5707:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:12"
									},
									"scope": 1887,
									"src": "5591:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "6592:105:12",
										"statements": [
											{
												"id": 1884,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1874,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "6634:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1877,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "6641:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1873,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1879,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "6675:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1881,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "6679:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1872,
														"id": 1883,
														"nodeType": "Return",
														"src": "6668:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "6489:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "6508:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "6527:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:12"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "6583:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:12"
									},
									"scope": 1887,
									"src": "6467:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1888,
							"src": "398:6301:12",
							"usedErrors": []
						}
					],
					"src": "33:6666:12"
				},
				"id": 12
			},
			"contracts/SQFITEM/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/SQFITEM/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2090
						]
					},
					"id": 2091,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1890,
								"nodeType": "StructuredDocumentation",
								"src": "58:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2090,
							"linearizedBaseContracts": [
								2090
							],
							"name": "Strings",
							"nameLocation": "101:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1893,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "140:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2090,
									"src": "115:58:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1891,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "115:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1892,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "155:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "346:632:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1901,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "548:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "557:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "548:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1907,
												"nodeType": "IfStatement",
												"src": "544:51:13",
												"trueBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "560:35:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "581:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1900,
															"id": 1905,
															"nodeType": "Return",
															"src": "574:10:13"
														}
													]
												}
											},
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "612:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1971,
														"src": "604:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "604:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"id": 1910,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1896,
													"src": "619:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "604:20:13"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "642:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1971,
														"src": "634:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "634:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1914,
												"nodeType": "VariableDeclarationStatement",
												"src": "634:14:13"
											},
											{
												"body": {
													"id": 1925,
													"nodeType": "Block",
													"src": "676:57:13",
													"statements": [
														{
															"expression": {
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "690:8:13",
																"subExpression": {
																	"id": 1918,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "690:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1920,
															"nodeType": "ExpressionStatement",
															"src": "690:8:13"
														},
														{
															"expression": {
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1921,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "712:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "720:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "712:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1924,
															"nodeType": "ExpressionStatement",
															"src": "712:10:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1915,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "665:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "673:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "WhileStatement",
												"src": "658:75:13"
											},
											{
												"assignments": [
													1928
												],
												"declarations": [
													{
														"constant": false,
														"id": 1928,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "755:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1971,
														"src": "742:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "742:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1933,
												"initialValue": {
													"arguments": [
														{
															"id": 1931,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "774:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "764:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1929,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "768:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "742:39:13"
											},
											{
												"body": {
													"id": 1964,
													"nodeType": "Block",
													"src": "810:131:13",
													"statements": [
														{
															"expression": {
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1937,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "824:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "834:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "824:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1940,
															"nodeType": "ExpressionStatement",
															"src": "824:11:13"
														},
														{
															"expression": {
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1941,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "849:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1943,
																	"indexExpression": {
																		"id": 1942,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "856:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "849:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1955,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1948,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "879:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1953,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1951,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1896,
																									"src": "892:5:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1952,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "900:2:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "892:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1950,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "884:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1949,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "884:7:13",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1954,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "884:19:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "879:24:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "873:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1946,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "873:5:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "873:31:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "866:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1944,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "866:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "866:39:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "849:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1959,
															"nodeType": "ExpressionStatement",
															"src": "849:56:13"
														},
														{
															"expression": {
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "919:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "928:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "919:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1963,
															"nodeType": "ExpressionStatement",
															"src": "919:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1934,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "798:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "807:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "798:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"nodeType": "WhileStatement",
												"src": "791:150:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1968,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "964:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "957:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1966,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "957:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1900,
												"id": 1970,
												"nodeType": "Return",
												"src": "950:21:13"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "180:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "284:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "301:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "293:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:15:13"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "331:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:15:13"
									},
									"scope": 2090,
									"src": "275:703:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "1157:255:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "1171:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1180:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1171:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "1167:54:13",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "1183:38:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1204:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1979,
															"id": 1984,
															"nodeType": "Return",
															"src": "1197:13:13"
														}
													]
												}
											},
											{
												"assignments": [
													1988
												],
												"declarations": [
													{
														"constant": false,
														"id": 1988,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1238:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2012,
														"src": "1230:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1230:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1990,
												"initialValue": {
													"id": 1989,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1975,
													"src": "1245:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1230:20:13"
											},
											{
												"assignments": [
													1992
												],
												"declarations": [
													{
														"constant": false,
														"id": 1992,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1268:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2012,
														"src": "1260:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1260:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"hexValue": "30",
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1277:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1260:18:13"
											},
											{
												"body": {
													"id": 2005,
													"nodeType": "Block",
													"src": "1306:57:13",
													"statements": [
														{
															"expression": {
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1320:8:13",
																"subExpression": {
																	"id": 1998,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "1320:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2000,
															"nodeType": "ExpressionStatement",
															"src": "1320:8:13"
														},
														{
															"expression": {
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2001,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "1342:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1351:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1342:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2004,
															"nodeType": "ExpressionStatement",
															"src": "1342:10:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1995,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "1295:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1303:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1295:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2006,
												"nodeType": "WhileStatement",
												"src": "1288:75:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2008,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "1391:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2009,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "1398:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2007,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2013,
															2089
														],
														"referencedDeclaration": 2089,
														"src": "1379:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1979,
												"id": 2011,
												"nodeType": "Return",
												"src": "1372:33:13"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "984:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1092:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1112:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "1104:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:15:13"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "1142:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:15:13"
									},
									"scope": 2090,
									"src": "1083:329:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "1625:351:13",
										"statements": [
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1648:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "1635:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2023,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1635:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2033,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1667:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2028,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "1671:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1667:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1680:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1667:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1657:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2025,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1661:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1635:47:13"
											},
											{
												"expression": {
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2034,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "1692:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2036,
														"indexExpression": {
															"hexValue": "30",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1692:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1704:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1692:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "1692:15:13"
											},
											{
												"expression": {
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2040,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "1717:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2042,
														"indexExpression": {
															"hexValue": "31",
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1724:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1717:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1729:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1717:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "1717:15:13"
											},
											{
												"body": {
													"id": 2074,
													"nodeType": "Block",
													"src": "1787:87:13",
													"statements": [
														{
															"expression": {
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2060,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2024,
																		"src": "1801:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2062,
																	"indexExpression": {
																		"id": 2061,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "1808:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1801:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2063,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "1813:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2067,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2064,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2016,
																			"src": "1826:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1834:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1826:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1813:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1801:37:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2069,
															"nodeType": "ExpressionStatement",
															"src": "1801:37:13"
														},
														{
															"expression": {
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "1852:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1862:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1852:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2073,
															"nodeType": "ExpressionStatement",
															"src": "1852:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2054,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "1775:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1779:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1775:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2075,
												"initializationExpression": {
													"assignments": [
														2047
													],
													"declarations": [
														{
															"constant": false,
															"id": 2047,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1755:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2075,
															"src": "1747:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2046,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1747:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2053,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1759:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2049,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "1763:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1759:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1759:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1747:26:13"
												},
												"loopExpression": {
													"expression": {
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1782:3:13",
														"subExpression": {
															"id": 2057,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "1784:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2059,
													"nodeType": "ExpressionStatement",
													"src": "1782:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1742:132:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "1891:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1900:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1891:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1903:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1883:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "1883:55:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2085,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "1962:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1955:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2083,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1955:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2087,
												"nodeType": "Return",
												"src": "1948:21:13"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "1418:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1544:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1564:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1556:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1579:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1571:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:31:13"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1610:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2020,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1610:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:15:13"
									},
									"scope": 2090,
									"src": "1535:441:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2091,
							"src": "93:1885:13",
							"usedErrors": []
						}
					],
					"src": "33:1945:13"
				},
				"id": 13
			}
		}
	}
}